{"version":3,"sources":["pages/Components/CalendarPopover.jsx","pages/Components/Sortable.jsx","pages/Home.jsx","pages/Upcoming.jsx","pages/Calendar.jsx","pages/Components/CalendarTasklistPopover.jsx","pages/Completed.jsx","pages/Perspectives.jsx","pages/Components/PerspectiveEditor.jsx","pages/Projects.jsx","pages/Components/FloatingActionButton.jsx","pages/Components/QuickSwitcher.jsx","pages/Components/KeybindManager.jsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","backend/src/ObjectManager.js","backend/src/PerspectiveManager.js","backend/CondutionEngine.js","gruntman.js","pages/Auth.jsx","pages/Loader.jsx","App.jsx","serviceWorker.ts","index.jsx","pages/Components/Repeat.jsx","pages/Components/TagEditor.jsx","pages/Components/Task.jsx","backend/src/DBManager.js"],"names":["CalendarPopover","props","useState","initialDate","Date","dateSelected","setDateSelected","currentMonth","getMonth","currentYear","getFullYear","firstDayMonth","lastDayMonth","lastDayLastMonth","firstDayDayname","getDay","__util_calculate_gradient","left","right","gradientAmount","color1","color2","ratio","hex","x","toString","length","r","Math","ceil","parseInt","substring","g","b","daysBefore","Array","map","_","i","type","content","getDate","daysAfter","contentDays","heat","setHeat","prototype","max","apply","this","useEffect","a","Map","hm","engine","db","selectTasksInRange","uid","forEach","val","date","due","seconds","setHours","time","has","set","get","values","from","style","getComputedStyle","document","body","hexes","e","getPropertyValue","trim","slice","keys","ref","reference","isOpen","isShown","onDidDismiss","borderRadius","cssClass","id","display","className","backgroundColor","border","onClick","onDateSelected","toLocaleString","weekday","month","useTime","defaultValue","toLocaleTimeString","onKeyPress","d","chrono","target","value","key","newDate","getHours","getMinutes","getSeconds","marginRight","float","SortableTaskList","activelyDragging","setActivelyDragging","order","useRef","moveApplied","currentIndex","dragEnvelope","dragEnabled","setDragEnabled","objRefs","list","React","createRef","getAnimationDestinationFromIndex","activeIndex","mY","currentOrder","noAnim","down","indx","y","indexOf","zIndex","config","tension","friction","mass","clamp","immediate","useSprings","current","springs","bind","useDrag","args","index","movement","movementY","first","last","tap","includes","onSortStart","sorted","sortedID","moveBy","floor","abs","newIndex","splice","setTimeout","filter","gruntman","do","items","onSortEnd","newOrder","drag","delay","filterTaps","enabled","anim","div","position","cursor","transform","interpolate","onClickCapture","stopPropagation","tid","prefix","datapack","availability","envelope","SortableProjectList","item","activeTaskID","activeTaskRef","opacity","paginate","history","push","possibleProjects","autoBind","require","isPlatform","createHashHistory","createBrowserHistory","Home","to","setState","itemSelected","state","projects","perspectives","undefined","abtibRef","menu","url","URL","uri","pathname","split","hash","refresh","prevProps","prevState","snapshot","sends","getTopLevelProjects","tlp","getPerspectives","psp","Router","IonReactHashRouter","IonReactRouter","keybindRef","abtib","noBounce","forceOverscroll","contentId","mode","window","navigator","platform","process","fontSize","icon","chevronForwardCircle","checkmarkCircle","calendar","close","npid","pid","f","paddingRight","name","proj","listOutline","dispatch","operation","render","exact","path","displayName","match","params","menuRefresh","options","create","Component","Upcoming","tomorrow","setDate","greetings","inbox","dueSoon","possibleTags","possibleProjectsRev","possibleTagsRev","projectSelects","tagSelects","projectDB","timeline","timelineShown","greeting","random","updatePrefix","registerRefresher","getItemAvailability","avail","getInboxandDS","pandt","getProjectsandTags","pPandT","projectList","tagsList","label","views","pdb","topLevels","getProjectStructure","buildSelectString","p","level","children","isSameDateAs","pDate","refrenceDate","tcontent","task","halt","overflow","onTouchMove","preventDefault","marginLeft","color","fontWeight","overflowY","flexGrow","marginTop","timelineItem","toLocaleDateString","year","day","paddingLeft","paddingTop","refreshed","CalPageBigOllendar","isPopoverShown","setIsPopoverShown","shownList","setShownList","names","ids","nameList","idList","height","width","currentDate","marginBottom","Calendar","today","taskList","popoverIsVisible","repeater","showEdit","endDate","effect","offset","top","isMobile","getTime","class","withGetScreen","mobileLimit","tabletLimit","shouldListenOnResize","CalendarTasklistPopover","refs","onModal","TaskObject","contents","Completed","tasksShown","taskCats","rendering","taskArr","getCompletedTasks","full","cat","startingCompleted","handleFetchMore","Perspectives","perspectiveName","perspectiveQuery","perspectiveAvail","perspectiveTord","possiblePerspectives","perspectiveObject","perspective","calc","query","tord","registerScheduler","payload","then","hideEdit","updateName","startHighlighted","onChange","persist","data-tip","borderColor","margin","handleDelete","withRouter","PerspectiveEdit","inputEvent","focus","console","log","alert","onWillPresent","lockUpdates","unlockUpdates","alignItems","whiteSpace","minWidth","placeholder","handleQueryChange","interface","onIonChange","detail","handleHelp","Projects","parent","is_sequential","currentProject","activeTask","cProject","parentProj","overflowX","result","_explode","ABTIB","isExpanded","setisExpanded","isSaving","setisSaving","useSpring","input","readOnly","onFocus","event","onBlur","onKeyUp","taskName","dateInfo","defer","end","start","replace","text","npobj","blur","QuickSwitcher","searchRef","filteredList","firstItem","direction","selected","prop_store","initialRenderingDone","searcher","processItems","setFocus","searchTerm","org","toLowerCase","o","keyname","selectedItem","filterItems","slicedSelectedItem","updateIdx","goBack","goForward","dismiss","idx","len","qs_show","animated","autoFocus","onDidPresent","focusRef","spellcheck","debounce","onKeyDown","handleKeydown","onMouseEnter","Keybinds","bindings","sidebar_switcher","sidebar_list","sidebar_incrimentor","focusElement","globalBindings","manageQs","sidebar_index","that","num","loca","sidebarItem","arraysAreIdentical","arr1","arr2","combo","Mousetrap","bindGlobal","unbind","setSidebarIndex","webpackAsyncContext","req","__webpack_require__","Promise","resolve","Error","code","Object","module","exports","cRef","dbManager","util","select","compare","lhs","cmp","rhs","TypeError","all","requirements","doc","dat","data","any","atLeast","threshold","counter","atMost","debug","arg","trace","userID","snap","docs","catch","err","error","getTasksWithQuery","taskDocs","getInboxTasks","sort","inboxDocs","getDSTasks","available","wrt","dsTime","isComplete","dsDocs","dueTasks","min","returnFull","tasks","avaliable","warn","ibt","dsTasks","prev","cache","dst","avalibility","dstWithoutIbt","getTaskInformation","taskID","paramName","ti","projectIdByName","projectNameById","projectsSorted","exists","top_level","projElem","sortOrder","ret","tags","tag","tagIdByName","tagNameById","pInfobyName","pInfobyID","ps","pstp","projectID","updateQuery","update","modifyTask","newTask","taskObj","project","ibtL","projL","add","newProject","projObj","size","obj","hasOwnProperty","newPerspective","pstObj","newTag","tagName","dissociateTask","dump","t","originalChildren","associateTask","assosProjID","willDissociateTask","taskData","delete","perspectiveID","deleteProject","struct","cpLtTasks","cpLt","concat","tagID","recursive","itemID","entries","recursivelyGetBlocks","bstat","projStruct","child","assign","tlps","blockstatus","blocks","completedTasks","taskItems","tsk","cpSorted","taskA","taskB","completeDate","yesterday","thisWeek","thisMonth","setMonth","tasksToday","tsks","tasksYesterday","tasksWeek","tasksMonth","evenBefore","tz","username","desc","isFlagged","isFloating","timezone","repeat","rule","cdyrslf","npd","od","ds","odid","dsID","nice","sequential","blocked","click","pspDir","pspsp","specific","sp","promotion","online","dis","patreon","yiipee","getTasks","removeParamFromTask","modifyProject","modifyPerspective","completeTask","associateProject","dissociateProject","deleteTask","deletePerspective","getDSRow","deleteTag","onBoard","getTags","perspectiveHandler","cgs","taskFilter","taskCaptureGroup","logicCaptureGroup","globalCaptureGroup","clear","lastIndex","parseTaskCaptureGroup","str","parseSpecialVariables","vr","compileTask","pPaT","additionalFilter","queries","taskCache","antiCache","dbObj","pS","compileLogicCaptureGroup","ltr","taskInfo","taskCompValues","util_datesequal","dateA","dateB","pStr","pRes","fquery","logicSort","exec","test","Set","flat","taskObjs","aval","it","dbRefObj","__init__","use","useDb","dbFuncs","pspObj","flush","parseFromTimeZone","LocalNotifications","Plugins","Permissions","Gruntman","notifPermissionGranted","requestPermission","granted","platforms","getPlatforms","registerActionTypes","types","actions","title","requiresAuthentication","foreground","addListener","handleNotificationAction","hashCode","s","reduce","charCodeAt","refresher","callbackRefresherReleased","conflictResolution","releaseTimeout","TEMPTEMPTEMP","doers","macro","applyOrder","ntObject","Intl","DateTimeFormat","resolvedOptions","timeZone","ntID","tInfo","update__project","oldProject","update__uncomplete","update__complete","toISOString","rRule","defDistance","rOn","on","dow","oDow","setFullYear","message","TODO","update__name","projectName","update__pstate","associate","dissociate","pObj","npspid","update__perspective","delete__perspective","undoers","backlog","undolog","taskLog","canUndo","schedulers","updateLock","updateInterval","clearTimeout","interval","schedule","notifications","at","sound","attachments","extra","actionTypeId","action","actionId","notification","cancel","expectedID","getPending","pending","needed","callback","identifier","wait","actionName","bypassUpdates","isUndo","unsafe_FORCE_UPDATES","actionID","nodes","shift","resources","Auth","Storage","authMode","showExtra","view","firebase","setPersistence","Persistence","LOCAL","signInWithEmailAndPassword","$","currentUser","emailVerified","service","addClass","problem","createUserWithEmailAndPassword","html","sendEmailVerification","updateProfile","reload","sendPasswordResetEmail","autoComplete","doLogin","doCreate","doRecover","dispatchCreate","doLocal","Loader","justifyContent","maxWidth","setupConfig","swipeBackEnabled","App","matchMedia","matches","removeClass","Engine","dbType","onAuthStateChanged","user","requestRefresh","authDispatch","signOut","isError","Boolean","location","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","Repeat","advanced","loadTask","newOn","elem","oldOn","TagEditor","tagList","setTagState","AnimationFactory","Keyframes","Spring","hide","taskHeight","taskMargin","taskBackground","taskPadding","taskEditOpacity","taskEditMaxHeight","taskOpacity","taskNameDecoration","taskPosition","taskDisplay","taskMaxHeight","reset","show","complete","Task","componentWillUnmount","removeEventListener","detectOutsideClick","toggleTask","expanded","deferDate","dueDate","decoration","showRepeat","showTagEditor","deferPopoverShown","duePopoverShown","haveBeenExpanded","startOpen","notificationPopoverShown","initialRenderDone","me","checkbox","TagEditorRef","actualCheck","duePopover","deferPopover","notificationPopover","showTageEditor","nativeEvent","refreshDecorations","addEventListener","contains","closeTask","openTask","native","animatedProps","freeze","minHeight","maxHeight","background","padding","hideRepeat","defaultChecked","htmlFor","textDecoration","showBackdrop","showNotificationPopover","DateInput","TimeInput","portalId","showTimeInput","dateFormat","customTimeInput","customInput","isClearable","classNamePrefix","styles","menuPortal","provided","menuPortalTarget","option","isMulti","base","newValue","actionMeta","tids","__isNew__","originalTags","tagIDs","storageType","memoryDB","firebaseDB","fsRef","readiness","FilesystemDirectory","FilesystemEncoding","Filesystem","Device","unsubscribeCallbacks","getFirebaseRef","assert","collectionGroup","collection","nav","DocumentReference","Query","isArray","where","generateRandomString","TODOstring","JSON","stringify","onSnapshot","next","diskJSONDB","dbRoot","Data","read","readFile","directory","encoding","UTF8","parse","write","writeFile","pointer","some","parsed","docRefs","docID","round","pop","cacheRef","cachedRead","storageRef","storageAdd","storageRead","storageSet","storageUpdate","storageDel","loaders","features","initializeApp","dbkeys","deploy","firestore","enablePersistence","synchronizeTabs","getInfo","resourcesPath","sqliteDB","dbPath"],"mappings":"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","file":"static/js/main.6b2ea9af.chunk.js","sourcesContent":["import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport '../Calendar.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\n\nfunction CalendarPopover(props) {\n    let [dateSelected, setDateSelected] = useState(props.initialDate ? props.initialDate : new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    \n    let [heat, setHeat] = useState({});\n    \n \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    \n    useEffect(()=>{\n        (async function() {\n            let map = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([_, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n            });\n            let values = Array.from(map.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]=hexes[i]});\n            }\n            setHeat(hm);\n        })();\n    },[dateSelected, props.initialDate]);\n    return (\n        <IonModal ref={props.reference} isOpen={props.isShown} onDidDismiss={() => {if(props.onDidDismiss) props.onDidDismiss()}} style={{borderRadius: 5}} cssClass=\"calendar-popover\">\n            <div id=\"calendar-page-calendar-wrapper\" style={{display: \"inline-block\", ...props.style}}>\n                <div id=\"calendar-wrapper-popover\">\n                    <div id=\"calendar-daterow\">\n                        <span className=\"calendar-daterow-item\">Sun</span>\n                        <span className=\"calendar-daterow-item\">Mon</span>\n                        <span className=\"calendar-daterow-item\">Tues</span>\n                        <span className=\"calendar-daterow-item\">Wed</span>\n                        <span className=\"calendar-daterow-item\">Thu</span>\n                        <span className=\"calendar-daterow-item\">Fri</span>\n                        <span className=\"calendar-daterow-item\">Sat</span>\n                    </div>\n                    <div id=\"calendar-container\">\n                        {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                        <span className={`calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                            backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                                `#${heat[i.content]}` :\n                                \"inherit\"),\n                            border:  (i.type === \"actual\" && i.content === dateSelected.getDate()) ? \n                            \"2px solid var(--decorative-light)\" :\n                            \"0\"}} \n\n                            onClick={(e)=>{\n\n                                let date;\n                                if (i.type === \"pre\")\n                                    date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                                if (i.type === \"actual\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                                if (i.type === \"post\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                                setDateSelected(date);\n                                if (props.onDateSelected)\n                                    props.onDateSelected(date);\n                            }}>{i.content}</span>\n                        )}\n                    </div>\n                    <div id=\"calendar-infopanel\">\n                    <div className=\"calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                    <div className=\"calendar-infopanel-datename\">{dateSelected.toLocaleString('en-us', {  weekday: 'long' })}</div>\n                    <div className=\"calendar-infopanel-month\">{dateSelected.toLocaleString('en-us', { month: 'long' })}</div>\n                    <div className=\"calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                    </div>\n                    {(()=>{\n                        if (props.useTime)\n                            return <div className=\"calendar-timeunit\">   \n                                <span className=\"calendar-time\">\n                                    Time\n                                </span>\n                                <input\n                                    className=\"calendar-timebox\"\n                                    defaultValue={dateSelected.toLocaleTimeString()}\n                                    onKeyPress={e => {\n                                        // TIMEHANDLING is here. If you are searching for that, it's here.\n                                        // But anyway, on change, parse the time\n                                        let d = chrono.parseDate(e.target.value); //TODO bad?\n                                        // ...and throw away the date \n                                        if (d && e.key === \"Enter\") {\n                                            let newDate = new Date(dateSelected.getFullYear(), dateSelected.getMonth(), dateSelected.getDate(), d.getHours(), d.getMinutes(), d.getSeconds());\n                                            setDateSelected(newDate); // TODO make this with the onChange API\n                                            e.target.value = newDate.toLocaleTimeString();\n                                            if (props.onDateSelected)\n                                                props.onDateSelected(newDate);\n\n                                        }\n                                    }}\n                                />\n                            </div>\n                    })()}\n                    <div id=\"calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected)\n                            props.onDateSelected(new Date());\n\n                    }}>Today</div>\n                    <div className=\"calendar-today\" style={{marginRight: 10, float: \"right\"}} onClick={props.onDidDismiss}>Done</div>\n                </div>\n                </div>\n            </div>\n        </IonModal>\n    )\n}\n\n\n\nexport default CalendarPopover;\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDrag } from 'react-use-gesture'\nimport { useSprings, animated, interpolate } from 'react-spring'\n\nimport '../Projects.css';\n\nimport Task from './Task';\n\n\n\n/*\n *\n * Hello human,\n * good afternoon.\n *\n * I am clumsy sortable!\n *\n * Use me to sort things\n * and make sortable task lists\n *\n * TODO => put actual documentation here\n *\n * So there.\n *\n * @jemoka\n *\n */\n\nconst SortableTaskList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:\"task\", content:i}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((id, i) => {\n        let anim = springs[i];\n        return (\n            <div ref={(e)=>{dragEnvelope.current=e}}>\n            <animated.div \n                {...bind(i)} \n                className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                style={{\n                    borderRadius: 7,\n                    position: \"relative\",\n                    cursor: \"pointer\",\n                    zIndex: anim.zIndex,  // z-index is 1000 during drag\n                    transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                }} \n                onClickCapture={(e)=>{\n                    if (activelyDragging.includes(i)){ // if we are still dragging\n                        e.stopPropagation(); // no clicky!\n                    }\n                }}\n            >\n                <Task ref={objRefs[i]} tid={id} key={id+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[id]} envelope={dragEnvelope} setDragEnabled={setDragEnabled} />\n            </animated.div>\n            </div>\n    )\n    });\n}\n\nconst SortableProjectList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:i.type, content:i.type===\"project\"?i.content.id:i.content}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((item, i) => {\n        let anim = springs[i];\n        if (item.type === \"task\")\n            return (\n                <div ref = {dragEnvelope}>\n                    <animated.div \n                        {...bind(i)} \n                        className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                        style={{\n                            borderRadius: 7,\n                            position: \"relative\",\n                            cursor: \"pointer\",\n                            zIndex: anim.zIndex,  // z-index is 1000 during drag\n                            transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                        }} \n                        onClickCapture={(e)=>{\n                            if (activelyDragging.includes(i)){ // if we are still dragging\n                                e.stopPropagation(); // no clicky!\n                            }\n                        }}\n                    >\n                        <Task ref={props.activeTaskID===item.content ? props.activeTaskRef : objRefs[i]} tid={item.content} key={item.content+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[item.content]} envelope={dragEnvelope} setDragEnabled={setDragEnabled}/>\n                    </animated.div>\n                </div>\n            )\n        else if (item.type === \"project\") {\n            return (\n            <div ref={dragEnvelope}>\n                <animated.div \n                    {...bind(i)} \n                    className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                    style={{\n                        borderRadius: 7,\n                        position: \"relative\",\n                        cursor: \"pointer\",\n                        zIndex: anim.zIndex,  // z-index is 1000 during drag\n                        transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                    }} \n                    onClickCapture={(e)=>{\n                        if (activelyDragging.includes(i)){ // if we are still dragging\n                            e.stopPropagation(); // no clicky!\n                        }\n                    }}\n                >\n                    <a className=\"subproject\" style={{opacity:props.availability[item.content.id]?\"1\":\"0.35\"}} onClick={()=>{props.paginate(\"projects\", item.content.id);props.history.push(`/projects/${item.content.id}`)}}><div><i className=\"far fa-arrow-alt-circle-right subproject-icon\"/><div style={{display: \"inline-block\"}}>{props.possibleProjects[item.content.id]}</div></div></a>\n                </animated.div>\n            </div>\n            )\n        }\n    });\n}\n\nexport { SortableTaskList, SortableProjectList };\n\n\n\n","// A whole lotta imports\n\n// Ionic components\nimport { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, isPlatform } from '@ionic/react';\nimport { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, calendar } from 'ionicons/icons';\n\n// Routing\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// Cool components that we need\nimport Upcoming from './Upcoming';\nimport Calendar from './Calendar';\nimport Completed from './Completed';\nimport Perspectives from './Perspectives';\nimport Projects from './Projects';\nimport ABTIB from './Components/FloatingActionButton';\nimport Keybinds from './Components/KeybindManager';\n\n// Our very own CSS\nimport './Home.css';\n\n// Tootips\nimport ReactTooltip from 'react-tooltip';\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\nconst history = isPlatform(\"electron\") ? createHashHistory() : createBrowserHistory();\n\n/* \n *\n * Hello, human\n * Good morning\n * Read me please.\n *\n * Use the **state**'s itemSelected \n *     to manage the menu\n * use the **React Router URL** \n *     to manage the page\n *\n * Otherwise, unreload-reload won't work.\n *\n * Thanks. @jemoka.\n *\n */\n\n// Welp. The Home.\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects:[], // list of top level projects\n            perspectives:[], // list of perspectives\n            itemSelected:{item:\"upcoming\", id:undefined}, // so what did we actually select\n        };\n\n\n        // AutoBind!\n        autoBind(this);\n\n        this.abtibRef = React.createRef();\n\n        this.menu = React.createRef();\n\n    }\n\n    paginate = (to, id) => this.setState({itemSelected:{item:to ,id}}) // Does not actually paginate; instead, it... uh... sets the highlighting of the menu\n\n    componentDidMount() {\n        // This is, indeed, the view\n        // Get the current URI to set which view is selected\n        let url = (new URL(document.URL))\n        let uri = url.pathname.split(\"/\");\n        let hash = url.hash.split(\"/\");\n        if (uri[1] === \"\")\n            this.setState({itemSelected:{item:\"upcoming\", id:\"\"}});\n        else if (isPlatform(\"electron\"))\n            this.setState({itemSelected:{item:hash[1], id:hash[2]}});\n        else\n            this.setState({itemSelected:{item:uri[1], id:uri[2]}});\n\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.to !== this.state.to && this.state.to !== undefined)\n             this.setState({sends:{to:undefined, id:undefined}})\n    }\n\n    async refresh() {\n        // Load the top level projects and perspectives\n        // to set into the state and to add to the menu\n        let tlp = await this.props.engine.db.getTopLevelProjects(this.props.uid);\n        let psp = await this.props.engine.db.getPerspectives(this.props.uid);\n\n        this.setState({projects: tlp[2], perspectives:psp[2]});\n    }\n\n\n\n\n    render() {\n        const Router = isPlatform(\"electron\") ? IonReactHashRouter : IonReactRouter; // Router workaround for electron\n        return (\n            <IonPage>\n                {/* The central router that controls the routing of views */}\n                <Router history={history}>\n\t\t    <Keybinds \n\t\t\tpaginate={this.paginate} \n\t\t\tref={this.keybindRef} \n\t\t\tperspectives={this.state.perspectives}\n\t\t\tprojects={this.state.projects}\n\t\t\tabtib={this.abtibRef}\n\t\t    />\n                    {/* OoIp */}\n                    <ReactTooltip />\n                    {/* App container */}\n                    <IonContent noBounce forceOverscroll={false}>\n                        {/* Menu pane to control mobile view splitting */}\n                        <IonSplitPane id=\"main-split\" contentId=\"main\" mode=\"md\">\n                            {/* The left: menu! */}\n                            <IonMenu id=\"main-menu\" contentId=\"main\" ref={this.menu}>\n                                <br />\n                                <IonContent id=\"menu-content\" className={(()=>{\n                                    if (!isPlatform(\"electron\")) // if we are not running electron\n                                        return \"normal\"; // normal windowing proceeds\n                                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                                        return \"darwin\"; // frameless setup\n                                    }\n                                    else if (process.platform === \"win32\") // windows\n                                        return \"windows\"; // non-frameless\n\n                                })()}>\n                                    {/* === Built Ins: upcoming + completed == */}\n                                    {/* Upcoming button + link */}\n                                    <Link to=\"/upcoming\" onClick={()=>this.setState({itemSelected:{item:\"upcoming\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Upcoming button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"upcoming\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20}} icon={chevronForwardCircle} />Upcoming</div>\n                                    </Link>\n\n                                    {/* Completed button + link */}\n                                    <Link to=\"/completed\" onClick={()=>this.setState({itemSelected:{item:\"completed\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Completed button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"completed\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={checkmarkCircle} />Completed</div>\n                                    </Link>\n\n                                    {/* Calendar button + link */}\n                                    <Link to=\"/calendar\" onClick={()=>this.setState({itemSelected:{item:\"calendar\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Calendar button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"calendar\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={calendar} />Calendar</div>\n                                    </Link>\n\n                                    {/* === Perspectives == */}\n                                    <div className=\"menu-sublabel menu-decoration\">Perspectives <a onClick={()=>{\n                                        if (this.menu.current)\n                                            this.menu.current.close();\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"perspective.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/perspectives/${npid}/do`);\n                                            this.paginate(\"perspectives\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n\n                                    {/* === Perspective button + link == */}\n                                    {this.state.perspectives.map((psp) => {\n                                        return (\n                                            <Link key={psp.id} to={`/perspectives/${psp.id}`} onClick={()=>this.setState({itemSelected:{item:\"perspectives\", id:psp.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"perspectives\" && this.state.itemSelected.id === psp.id ? \"menu-item-selected\" : \"\")}><i className=\"fas fa-layer-group\" style={{paddingRight: 2}}></i> {psp.name}</div> \n                                            </Link>\n                                        )\n                                    })}\n\n\n                                    {/* === Projects == */}\n                                    <div className=\"menu-sublabel menu-decoration\">Projects <a onClick={()=>{\n                                        if (this.menu.current)\n                                            this.menu.current.close();\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"project.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/projects/${npid}/do`);\n                                            this.paginate(\"projects\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n                                    {/* === Project Contents == */}\n                                    {this.state.projects.map((proj) => {\n                                        return (\n                                            <Link key={proj.id} to={`/projects/${proj.id}`} onClick={()=>this.setState({itemSelected:{item:\"projects\", id:proj.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"projects\" && this.state.itemSelected.id === proj.id ? \"menu-item-selected\" : \"\")}><IonIcon icon={listOutline}/>{proj.name}</div></Link> \n                                        )                            \n                                    })}\n\n                                </IonContent>\n\n                                {/* Logout button */}\n                                <div className=\"menu-item\" id=\"logout\" onClick={()=>{history.push(`/`);this.props.dispatch({operation: \"logout\"})}}><i className=\"fas fa-snowboarding\" style={{paddingRight: 5}} />Logout</div>\n                            </IonMenu>\n                            <IonPage id=\"main\">\n                                {/* the add button to inbox button*/}\n                                <ABTIB reference={this.abtibRef} uid={this.props.uid} gruntman={this.props.gruntman} />\n                                {/* the portal root for DOM elements to park */}\n                                <div id=\"parking-lot\"></div>\n                                {/* The actual page */}\n                                <IonRouterOutlet>\n                                    {/* empty => /upcoming*/}\n                                    <Route render={() => <Redirect to=\"/upcoming\"/>}/>\n                                    {/* / => /upcoming */}\n                                    <Route exact path=\"/\" render={() => <Redirect to=\"/upcoming\" />} />\n                                    {/* and the perspective switch */}\n                                    <Switch>\n                                        {/* upcoming renders upcoming */}\n                                        <Route path=\"/upcoming\" exact render={()=><Upcoming engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} displayName={this.props.displayName} />} />\n                                        {/* completed renders completed */}\n                                        <Route path=\"/calendar\" exact render={()=><Calendar engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} />} />\n\n                                        {/* completed renders completed */}\n                                        <Route path=\"/completed\" exact render={()=><Completed engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} />} />\n\n                                        {/* perspective renders perspectives */}\n                                        <Route path=\"/perspectives/:id/:create?\" render={({match})=><Perspectives engine={this.props.engine} paginate={this.paginate} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh}  options={match.params.create}/>}  />\n\n                                        {/* project renders perspectives */}\n                                        <Route path=\"/projects/:id/:create?\" render={({match})=><Projects engine={this.props.engine} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh} paginate={this.paginate} options={match.params.create}/>}  />\n                                        {/* TODO projects */}\n                                    </Switch>\n                                </IonRouterOutlet>\n                            </IonPage>\n                        </IonSplitPane>\n                    </IonContent>\n                </Router>\n            </IonPage>\n        );\n    }\n};\n\nexport default Home;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform, IonInfiniteScroll, IonInfiniteScrollContent } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Upcoming.scss';\nimport './Pages.css';\n\nimport { SortableTaskList } from './Components/Sortable';\n\nimport Task from './Components/Task';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\n/* \n * The lack of a poem here is scathing\n * so I thought\n * I'd contribute.\n *\n * The homepage needs no introduction\n * For it explains itself in production.\n *\n * But alas,\n * I still write this.\n *\n * What for?\n *\n * @Jemoka\n *\n */\n\n\nclass Upcoming extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        let tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate()+1);\n\n        let greetings = [\"Hello,\", \"Hey,\", \"Heyo,\", \"Aloha,\", \"Yo!\"];\n\n        this.state = {\n            inbox: [], // define the inbox\n            dueSoon: [], // whats due soon? \n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            timeline: [],\n            timelineShown: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        autoBind(this);\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pandt = await this.props.engine.db.getInboxandDS(this.props.uid, avail) // get inbox and due soon \n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.updatePrefix = this.random();\n\n        let timeline = await this.props.engine.db.selectTasksInRange(this.props.uid, new Date(), new Date(2100, 1, 1), true);\n        \n                            //timeline.push({type: \"label\", content: timelineRenderedUntil});\n                        //for (let task of fTasks)\n                            //timeline.push({type:\"task\", content:task});\n\n                        //this.setState({timelineRenderedUntil, timelineSoFar: timeline});\n        // Date same date check https://stackoverflow.com/questions/4428327/checking-if-two-dates-have-the-same-date-info\n        timeline = timeline.filter((x)=>!pandt[1].includes(x[0]))\n        Date.prototype.isSameDateAs = function(pDate) {\n          return (\n            this.getFullYear() === pDate.getFullYear() &&\n            this.getMonth() === pDate.getMonth() &&\n            this.getDate() === pDate.getDate()\n          );\n        }\n\n        let refrenceDate = new Date();\n        let tcontent = [];\n        for (let task of timeline) {\n            let due = new Date(task[1].due.seconds*1000);\n            if (!due.isSameDateAs(refrenceDate)) {\n                tcontent.push({type:\"label\", content: due});\n                refrenceDate = due;\n            }\n            tcontent.push({type:\"task\", content: task[0]});\n        }\n\n        this.setState({inbox: pandt[0], dueSoon: pandt[1], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, timeline: tcontent});\n    }\n\n    componentDidMount() {\n        this.refresh();\n\n        //// Jack and the Misadventures of Hiding the Scrollbar\n        //const content = this.pageRef.current;\n        //const styles = document.createElement('style');\n        //styles.textContent = `\n            //.scroll-y::-webkit-scrollbar {\n                //display: none;\n            //}\n        //`;\n        {/*content.shadowRoot.appendChild(styles);*/}\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n\n    render() {\n\n        return (\n            <IonPage>\n                <div style={{overflow: \"hidden\"}}>\n\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n                        <div className=\"header-container\" onTouchMove={(e)=>e.preventDefault()}>\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle><i className=\"fas fa-bars\" style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} /></IonMenuToggle> <h1 className=\"page-title\"><i style={{paddingRight: 10}} className=\"fas fa-chevron-circle-right\"></i>Upcoming</h1> \n\n                                    \n                            <div className=\"greeting-datewidget\">\n                                <div style={{display: \"inline-block\"}} className=\"greeting-date\">{(new Date()).getDate()}</div>\n                                <div style={{display: \"inline-block\"}} className=\"greeting-datename\">{new Date().toLocaleString('en-us', {  weekday: 'long' })}</div>\n                            </div>\n                            \n\n\n                                <div className=\"greeting-container\"><span id=\"greeting\">{this.state.greeting}</span> <span id=\"greeting-name\" style={{fontWeight: 600}}>{this.props.displayName}</span></div>\n                            </div>\n                        </div>\n                        <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", flexGrow: 5}}>\n                            <div>\n                                {(()=>{\n                                    if (this.state.inbox.length > 0)\n                                        return <div className=\"page-label\">Unsorted<IonBadge className=\"count-badge\">{this.state.inbox.length}</IonBadge></div>\n                                })()}\n                                <SortableTaskList list={this.state.inbox} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                            </div>\n                            <div>\n                                {(()=>{\n                                    if (this.state.dueSoon.length > 0)\n                                        return <div className=\"page-label\">Due Soon<IonBadge className=\"count-badge\">{this.state.dueSoon.length}</IonBadge></div>\n                                })()}\n                                {this.state.dueSoon.map(id => (\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                            </div>\n                            <div>\n                                <div className=\"timeline-button\">\n                                    <a \n                                        onClick={()=>\n                                                this.setState({timelineShown: !this.state.timelineShown})} \n                                        // for some reason, css classes don't work, so we have to style here\n                                        // @jack? why don't they? well, styling here's fine anyways. most likely b/c they are overrode by className=timeline-button\n                                        style={{\n                                            marginLeft: 15,\n                                            marginTop: 20, \n                                            display: \"inline-block\", \n                                            fontWeight: 600, \n                                            fontSize: 13, \n                                            //color: \"var(--decorative-light-alt)\", \n                                            cursor: \"pointer\"}}\n                                    >\n                                        <i \n                                            className=\"fas fa-calendar-week\" \n                                            style={{paddingRight: 5}}\n                                        ></i> {this.state.timelineShown? \"Hide\" : \"Show\"} timeline</a>\n                                </div> \n                                {\n                                    (()=>{\n                                        if (this.state.timelineShown)\n                                            return this.state.timeline.map(timelineItem => {\n                                                if (timelineItem.type === \"task\")\n                                                    return <Task tid={timelineItem.content} key={timelineItem.content+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[timelineItem.content]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                                        else if (timelineItem.type === \"label\")\n                                                    return <div className=\"timeline-box\"><div className=\"timeline-line-container\"><div className=\"timeline-line\">&nbsp;</div></div><div className=\"timeline-text\"><span className=\"timeline-weekname\">{timelineItem.content.toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</span></div></div>\n\n\n                                            })\n                                    })()\n                                }\n                                {\n                                    (()=>{\n                                            if (this.state.timelineShown)\n                                            return <span style={{fontSize: 8, color:\"var(--commitid)\", paddingLeft:10, paddingTop:10}}>Commit ID: {process.env.REACT_APP_COMMIT_HASH}</span>\n                                    })()\n                                }\n                            </div>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\n// Hiding scrollbar, a journey\n\n\n\nexport default Upcoming;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport {withGetScreen} from 'react-getscreen'\nimport './Calendar.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport CalendarPopover from './Components/CalendarPopover';\nimport CalendarTasklistPopover from './Components/CalendarTasklistPopover';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n *\n * Apparently,\n * People like calendars.\n *\n * WHY?\n *\n * People don't respect \n * the existance \n * of the whole idea of GTD.\n *\n * Seriously.\n *\n * Why. A calendar?! in a GTD app.\n *\n * FINE. Here's your calendar.\n *\n * @jemoka\n *\n *\n */\n\nlet refreshed = 0;\n\nfunction CalPageBigOllendar(props) {\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let [dateSelected, setDateSelected] = useState(new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    let [heat, setHeat] = useState({});\n\n    let [isPopoverShown, setIsPopoverShown] = useState(false);\n\n    let [shownList, setShownList] = useState([]);\n    \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    let refresh = (async function() {\n            let map = new Map();\n            let names = new Map();\n            let ids = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([id, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n                if(names.has(time))\n                    names.set(time, [...names.get(time), val.name]);\n                else\n                    names.set(time, [val.name]);\n                if(ids.has(time))\n                    ids.set(time, [...ids.get(time), id]);\n                else\n                    ids.set(time, [id]);\n\n            });\n            let values = Array.from(map.values());\n            let nameList = Array.from(names.values());\n            let idList = Array.from(ids.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]={color:hexes[i], value:values[i], names:nameList[i], ids: idList[i]}});\n            }\n            setHeat(hm);\n        })\n\n    useEffect(()=>{\n        refresh();\n    },[dateSelected, refreshed]);\n\n    return (\n        <div id=\"calendar-page-bigol-calendar-wrapper\" style={{display: \"inline-block\", height: \"85%\", width: \"95%\", ...props.style}}>\n            <CalendarTasklistPopover uid={props.uid} engine={props.engine} isShown={isPopoverShown} onDidDismiss={()=>setIsPopoverShown(false)} list={shownList} availability={props.availability} datapack={props.datapack} gruntman={props.gruntman} currentDate={dateSelected}/>\n            <div id=\"bigol-calendar-wrapper\">\n                <div id=\"bigol-calendar-daterow\">\n                    <span className=\"bigol-calendar-daterow-item\">Sun</span>\n                    <span className=\"bigol-calendar-daterow-item\">Mon</span>\n                    <span className=\"bigol-calendar-daterow-item\">Tues</span>\n                    <span className=\"bigol-calendar-daterow-item\">Wed</span>\n                    <span className=\"bigol-calendar-daterow-item\">Thu</span>\n                    <span className=\"bigol-calendar-daterow-item\">Fri</span>\n                    <span className=\"bigol-calendar-daterow-item\">Sat</span>\n                </div>\n                <div id=\"bigol-calendar-container\">\n                    {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                    <span className={`bigol-calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                        backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                            `#${heat[i.content].color}` :\n                            \"inherit\")\n                    }}\n                        onClick={(e)=>{\n                            let date;\n                            if (i.type === \"pre\")\n                                date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                            if (i.type === \"actual\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                            if (i.type === \"post\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                            setDateSelected(date);\n                            if (heat[i.content])\n                                setShownList(heat[i.content].ids);\n                            else\n                                setShownList([]);\n                            setIsPopoverShown(true)\n                            if (props.onDateSelected)\n                                props.onDateSelected(date);\n                        }}>\n                        <div className=\"calendar-date-text\">\n                            {i.content}<span className=\"calendar-date-value\">{(heat[i.content]&&i.type===\"actual\")?`${heat[i.content].value} Tasks`:null}</span></div><div style={{marginLeft: 6, marginRight: 5, marginBottom: 2}}>{((heat[i.content]&&i.type===\"actual\")?heat[i.content].names:[]).map((name)=><span className=\"calendar-date-taskname\"><div className=\"calendar-task-circle\">&nbsp;</div>{name}</span>)}</div>\n                    </span>\n                    )}\n                </div>\n                <div id=\"bigol-calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected)\n                            props.onDateSelected(new Date());\n\n                    }}>Today</div>\n\n\n                </div>\n\n                <div id=\"bigol-calendar-infopanel\">\n                    <div id=\"bigol-calendar-dategroup\">\n                        <div className=\"bigol-calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                        <div className=\"bigol-calendar-infopanel-datename\">{dateSelected.toLocaleString('en-us', {  weekday: 'long' })}</div>\n                        <div className=\"bigol-calendar-infopanel-month\">{dateSelected.toLocaleString('en-us', { month: 'long' })}</div>\n                        <div className=\"bigol-calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nclass Calendar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let today = new Date();\n        today.setHours(0,0,0,0);\n\n        this.state = {\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            currentDate: (today), // new date\n            taskList: [],\n            popoverIsVisible: false,\n\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        let endDate = new Date(this.state.currentDate);\n        endDate.setHours(23,59,59,60);\n        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, this.state.currentDate, endDate);\n\n        refreshed++;\n\n        this.setState({\n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB, \t\t\t      // and the project db \n            taskList\n        }); // once we finish, set the state\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                {/* the perspective editor! */}\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-calendar-alt\">\n                                    </i>\n                                    Calendar\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                            </div> \n                        </div>\n                    </div>\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", height: \"100%\"}}>\n                        <div id=\"calendar-page-wrapper\">\n                            {(()=>{\n                                if (this.props.isMobile())\n                                    return <CalendarPopover uid={this.props.uid} engine={this.props.engine} isShown={this.state.popoverIsVisible} onDidDismiss={()=>this.setState({popoverIsVisible: false})}  onDateSelected={(async function(d){\n                                        let endDate = new Date(d.getTime());\n                                        endDate.setHours(23,59,59,60);\n                                        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, d, endDate);\n                                        this.setState({currentDate: d, taskList});\n                                    }).bind(this)}/>\n                                else \n                                    return <CalPageBigOllendar gruntman={this.props.gruntman}  uid={this.props.uid} engine={this.props.engine} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n{/*                                    return <CalPagelendar uid={this.props.uid} engine={this.props.engine} onDateSelected={(async function(d){*/}\n                                        //let endDate = new Date(d.getTime());\n                                        //endDate.setHours(23,59,59,60);\n                                        //let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, d, endDate);\n                                        //this.setState({currentDate: d, taskList});\n                                    {/*}).bind(this)}/>*/}\n                            })()}\n                            {(()=>{\n                                if (this.props.isMobile())\n                            return <div id=\"calendar-page-taskpage-wrapper\">\n                                <span id=\"calendar-page-header\">\n                                    <div class=\"calendar-page-count\">{this.state.taskList.length}</div>\n                                    <div class=\"calendar-page-title\">tasks due on</div>\n                                    <div class=\"calendar-page-date\" onClick={()=>this.setState({popoverIsVisible: true})}>{this.state.currentDate.toLocaleString('en-us', {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'  })}</div>\n                                </span>\n                                {this.state.taskList.map(id=>(\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                                {(()=>{\n                                    if (this.props.isMobile() && this.state.taskList.length == 0)\n                                        return <span class=\"calendar-page-hint\">Hint: tap the date above to change date!</span>\n                                })()}\n\n                            </div>\n                            })()}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\nexport default withGetScreen(Calendar, {mobileLimit: 720, tabletLimit:768, shouldListenOnResize: true});\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { createRef, useEffect, useRef } from 'react';\nimport '../Calendar.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\nimport Task from '../Components/Task';\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the calendar popover\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\n\nfunction CalendarTasklistPopover(props) {\n\n    let refs = useRef([]);\n\n    useEffect(()=>{\n        refs.current=props.list.map((_)=>createRef());\n    }, [props.list]);\n\n    return (\n        <IonModal ref={props.reference} isOpen={props.isShown} onDidDismiss={() => {if(props.onDidDismiss) props.onDidDismiss()}} style={{borderRadius: 5}} cssClass=\"calendar-list-popover\">\n                <div id=\"airplane-hanger\"></div> {/*to mount the calendar*/}\n            <div className=\"popover-list\">\n                <span id=\"calendar-page-header\">\n                    <div class=\"calendar-page-count\">{props.list.length}</div>\n                    <div class=\"calendar-page-title\">tasks due on</div>\n                    <div class=\"calendar-page-date\" >{props.currentDate.toLocaleString('en-us', {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'  })}</div>\n                </span>\n\n                {props.list.map((id, i)=>\n                    <div ref={refs.current[i]}>\n                        <Task tid={id} key={id} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[id]} datapack={props.datapack} envelope={refs.current[i]} onModal={true}/>\n                    </div>\n                )}\n                <div className=\"bottom-helper\" style={{height: 150}}>&nbsp;</div>\n            </div>\n        </IonModal>\n    )\n}\n\nexport default CalendarTasklistPopover;\n\n","// IMPORTS\nimport { IonContent, IonPage, IonMenuToggle, isPlatform } from '@ionic/react'; \nimport React, { Component, useEffect } from 'react';\nimport './Completed.css';\nimport './Pages.css';\nimport Task from './Components/Task';\nconst autoBind = require('auto-bind/react'); // autobind is a lifesaver\n\n/*\n\n * Sometimes we complete.\n *\n * This is not always correct,\n *\n * so we have this page! \n *\n * @enquirer\n\n*/\n\n// construtor for rendered object\nfunction TaskObject(type, contents) {\n    this.type = type; // set the type to the type (label or task)\n    this.contents = contents; // set the contents to the contents (title or id)\n}\n\n// define the main component!\nclass Completed extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // the objects we render\n            tasksShown: 1, // track the number of times we have fetched more\n            taskCats: [\"Today\", \"Yesterday\", \"This Week\", \"This Month\", \"Even Before\"], // define task categories (cats!)\n            rendering: true, // define whether or not the element is rendering \n            possibleProjects:{}, // see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    async refresh() {\n        let taskArr = []; // define temp array\n        let full = await this.props.engine.db.getCompletedTasks(this.props.uid); // get the tasks from the database \n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n        // loop through the tasks, converting to objects and inserting labels between each cat\n        full.forEach((cat, i) => {\n            taskArr.push(new TaskObject(\"label\", this.state.taskCats[i])) // each iteration, push the next label to the temp arr\n            cat.forEach(task => { // this loops through each cat\n                taskArr.push(new TaskObject(\"task\", task)) // convert each task to an object then push it to the temp arr\n            })\n        });\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.setState({taskList: taskArr, rendering: false, possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB}); // once we finish, set the state\n        // also set rendering to false. \n        // This is a hacky solution instead of creating an entirely new async function.\n    }\n\n    async componentDidMount() {\n        this.refresh(); // refresh when the component mounts\n    }\n\n    handleFetchMore() {\n        this.setState({rendering: true}) // trigger loading screen\n        const loader =  setTimeout(() => { // set a timeout to set the rendering to false \n            this.setState({rendering: false})\n\n        }, 2);\n\n        const updateTasks =  setTimeout(() => { // set another timeout for the actual task update\n            this.setState({tasksShown: this.state.tasksShown+1}) \n            // increment tasksShown by one whenever fetch more is clicked\n            // this renders 10 more items \n            this.setState({rendering: false}) // set rendering to false\n        }, 1)\n\n        // disclaimer: I do not understand how this works. I was just messing around trying to debug and this happened to work.\n        // if it ain't broke, dont fix it? \n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                <div style={{overflowY: \"scroll\"}}>\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n\n                        <div className=\"header-container\">\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle>\n                                    <i class=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-check-circle\">\n                                    </i>\n                                    Completed\n                                </h1> \n                            </div>\n                        </div>\n                        {/* loop through the taskList ten times, multiplyed by the times we have fetched more */}\n                        {/* if the cat is empty or the final item rendered is a label, don't render it */}\n                        {/* otherwise, render a task */}\n                        {/* for the fetch more, if we are currently rendering, render a loading animation. */}\n                        {/* Otherwise, render a fetch more.*/}\n                        <div style={{overflowY: \"scroll\"}}>\n                            {this.state.taskList.slice(0, 10*this.state.tasksShown).map((content, i) => (\n                                <div style={{marginLeft: 10, marginRight: 10}}>\n                                    {(content.type == \"label\")?  \n                                            (this.state.taskList[i+1] ? \n                                                ((this.state.taskList[i+1].type == \"label\" || this.state.taskList.slice(0, 10*this.state.tasksShown).length == i+1) ? \n                                                \"\" : <p className=\"page-label\" style={{marginBottom:0}}>{content.contents}</p>) : \"\") : \n                                                <Task \n                                                    tid={content.contents} \n                                                    startingCompleted={true}\n                                                    key={content.contents+\"-\"+this.updatePrefix} \n                                                    uid={this.props.uid} \n                                                    engine={this.props.engine} \n                                                    gruntman={this.props.gruntman} \n                                                    availability={this.state.availability[content.contents]} \n                                                    datapack={[this.state.tagSelects,\n                                                        this.state.projectSelects, \n                                                        this.state.possibleProjects, \n                                                        this.state.possibleProjectsRev, \n                                                        this.state.possibleTags, \n                                                        this.state.possibleTagsRev]}\n                                                />\n                                    }\n                                </div>\n                            ))}\n\n                        <div className=\"fetch-more\" > \n                            {/* define the fetch more button */}\n                            {this.state.rendering? <p className=\"loader\" >Loading...</p> : <p onClick={this.handleFetchMore}>Fetch more...</p>}\n                        </div> \n                    <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default Completed;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Perspectives.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport PerspectiveEdit from './Components/PerspectiveEditor';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n * To sort, we give our tasks tags\n *\n * We can also give them flags\n * \n * With perspectives we filter,\n *\n * To keep our tasks in kilter,\n *\n * Then refactor the code if it lags!\n *\n *\n * @enquirer\n *\n */\n\n\nclass Perspectives extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // what tasks should we display? \n            perspectiveName: \"\", // whats the perspective name? \n\t    perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n\t    perspectiveAvail: {}, // whats the perspective availability? \n\t    perspectiveTord: {},  // whats the perspective ordering?\n\t    // not truth or dare. jack doent even know what that is! ^^ \n            showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n\n        };\n\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let possiblePerspectives = await this.props.engine.db.getPerspectives(this.props.uid); // get all possible perspectives\n        let perspectiveObject = possiblePerspectives[0][this.props.id] // get the one we want based on page id \n        let taskList = await this.props.engine.perspective.calc(this.props.uid, perspectiveObject.query, perspectiveObject.avail, perspectiveObject.tord) // then get the tasks from that perspective\n\n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.setState({\n            taskList: taskList,                           // set the tasklist, \n            perspectiveName: perspectiveObject.name,     // set the perspective name \n\t    perspectiveQuery: perspectiveObject.query,  // set the perspective query \n\t    perspectiveAvail: perspectiveObject.avail, // set the perspective avail \n\t    perspectiveTord: perspectiveObject.tord,  // set the perspective tord \n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB \t\t\t      // and the project db \n        }); // once we finish, set the state\n    }\n\n    updateName(e) {\n        if (e) { // if the name if defined, \n            this.props.gruntman.registerScheduler(() => {\n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n\t\t\t// pass it the things \n                        uid: this.props.uid, // the user id \n                        id: this.props.id,  // the perspective id \n                        payload: {name: e.target.value} // the action, setting name to the new value \n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n            this.setState({perspectiveName: e.target.value}) // set the perspectiveName\n        }\n    } \n\n\n    handleDelete() {\n        this.props.history.push(\"/upcoming\"); // go back\n        this.props.paginate(\"upcoming\"); // idk man \n        this.props.gruntman.do( // call a gruntman function\n            \"perspective.delete__perspective\", { \n                uid: this.props.uid, // pass it the user id \n                id: this.props.id, // and the current id \n            }\n        ).then(()=>{\n            this.props.menuRefresh(); // refresh menubar\n\n        }) // call the homebar refresh\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) { // if we updated the defer date\n            this.setState({\n                taskList: [], // what tasks should we display? \n                perspectiveName: \"\", // whats the perspective name? \n                perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n                perspectiveAvail: {}, // whats the perspective availability? \n                perspectiveTord: {},  // whats the perspective ordering?\n                // not truth or dare. jack doent even know what that is! ^^ \n                showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n                possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n                possibleTags:{}, \n                possibleProjectsRev:{}, \n                possibleTagsRev:{}, \n                availability: [], \n                projectSelects:[], \n                tagSelects: [], \n                projectDB: {}\n\n            });\n\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n        }\n        // so we want to refresh the perspective that's rendered\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.setState({showEdit: true});\n\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n\t\t{/* the perspective editor! */}\n                <PerspectiveEdit \n                    reference={this.repeater} \n                    isShown={this.state.showEdit} \n                    onDidDismiss={this.hideEdit}\n                    uid={this.props.uid} \n                    engine={this.props.engine} \n                    gruntman={this.props.gruntman}\n                    id={this.props.id}\n                    perspectiveName={this.state.perspectiveName}\n                    query={this.state.perspectiveQuery}\n                    avail={this.state.perspectiveAvail}\n                    tord={this.state.perspectiveTord}\n                    menuRefresh={this.props.menuRefresh}\n                    updateName={this.updateName}\n                    startHighlighted={this.props.options === \"do\"}\n                />\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n\t\t    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-layer-group\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.perspectiveName} // TODO: jack this is hecka hacky\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n\n                                <div className=\"greeting-container\" style={{marginLeft: 11, marginTop: 7}}>\n                                    <a \n                                        onClick={this.showEdit} \n                                        data-tip=\"LOCALIZE: Edit\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}}>\n                                        <i className=\"fas fa-edit\" \n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, \n                                                transform: \"translate(2px, -2px)\"}} \n                                        ></i>\n                                    </a>\n\n                                    <a \n                                        onClick={this.handleDelete} \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}>\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\"}}>\n\n                        {this.state.taskList.map(id => (\n                            <Task \n                                tid={id}\n                                key={id+\"-\"+this.updatePrefix} \n                                uid={this.props.uid} \n                                engine={this.props.engine} \n                                gruntman={this.props.gruntman} \n                                availability={this.state.availability[id]} \n                                datapack={[\n                                    this.state.tagSelects, \n                                    this.state.projectSelects, \n                                    this.state.possibleProjects, \n                                    this.state.possibleProjectsRev, \n                                    this.state.possibleTags, \n                                    this.state.possibleTagsRev\n                                ]}\n                            />\n                        ))}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Perspectives);\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\nimport '../Perspectives.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\nconst autoBind = require('auto-bind/react');\n\n\n/* \n * perspectives are amazing \n *\n * dab on them haters \n *\n * I just said the cringiest thing ever\n *\n * oh my god huxley i swear to god \n *\n * i will rebase your commits \n *\n *\n * - @zbuster05, recorded by @enquirer\n *\n */\n\nclass PerspectiveEdit extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            inputEvent: \"\", // define our input event for the perspective title \n        }\n\n        this.name = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.startHighlighted) // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    handleQueryChange(e) {\n        if (e) { // if the event is defined \n            this.props.gruntman.registerScheduler(() => { \n                //Register a scheduler to deal with React's onChange\n                //check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n                        // pass it the things \n                        uid: this.props.uid, // pass it the uid \n                        id: this.props.id,  // pass it the perspective id \n                        payload: {query: e.target.value} // pass it the action, updating the query\n                    }\n                )\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n        } else {console.log(e)}\n    }\n\n    handleHelp() { // TODO TODO TODO: jack what do u want here? \n        alert(\"You really think we have documentation ready? I mean, if they are there, they are at docs.condution.com\")\n        console.log(\"no one is here to help. grow up.\")\n    }\n\n    render() {\n        return (\n            <IonModal \n                ref={this.props.reference} \n                isOpen={this.props.isShown} \n                onWillPresent={() => {this.props.gruntman.lockUpdates();}}\n                onDidDismiss={() => {\n                    this.props.gruntman.unlockUpdates(); \n                    this.props.updateName(this.state.inputEvent);\n                    if (this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}\n                } \n                cssClass={\"perspective-modal\"}\n            > \n\n                <div>\n                    {/* Header */}\n                    <div className=\"perspective-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\", whiteSpace: \"nowrap\"}}>\n                            <b className=\"bold-prefix\" >Let&#39;s build &nbsp;</b> \n                            <input className=\"editable-title pbuilder-pname\" \n                                ref={this.name}\n                                defaultValue={this.props.perspectiveName} \n                                onChange={(e)=> {e.persist(); this.props.updateName(e); this.setState({inputEvent: e})}}\n                                style={{minWidth: 0}}\n                                placeholder=\"Tap to set name\"\n                            />\n\n                            <div className=\"repeat-task-name\">{this.state.name}</div>\n                        </span>\n                        {/* Close button */} \n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss} style={{transform: \"translate(-10px, 3px)\"}}><i className=\"fa fa-times\"></i></a>\n\n                    </div>\n                    <div className=\"build-input\">\n                        <span className=\"bold-prefix\" style={{minWidth: \"70px\", marginTop: \"4px\"}}>Filter by</span>\n                        <input \n                            className=\"build-input-edit\"\n                            defaultValue={this.props.query}\n                            onChange={(e)=> {e.persist(); this.handleQueryChange(e)}}\n                            placeholder=\"LOCALIZE: perspective query\"\n                        >\n                        </input> \n                    </div>\n\n\n                    <div className=\"perspective-basic-row\">\n                        <span className=\"pbasic-container\" style={{marginRight: \"25px\"}}>\n                            <span>\n                                <i className=\"repeat-label fas fa-exchange-alt\"></i>\n                                <span className=\"perspective-label\">Include</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.avail} // TODO: make a database hit \n                                mode=\"ios\"\n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the user id \n                                            id: this.props.id,  // pass it the perspective id\n                                            payload: {avail: e.detail.value} // set the availability \n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"remain\">Remaining</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"avail\">Available</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"flagged\">Flagged</IonSelectOption>\n                            </IonSelect>\n                        </span>\n\n                        <span className=\"pbasic-container\">\n                            <span>\n                                <i className=\"repeat-label fas fa-sort-amount-down-alt\"></i>\n                                <span className=\"perspective-label\">Order</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.tord} \n                                mode=\"ios\" \n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the things, you know the drill \n                                            id: this.props.id, \n                                            payload: {tord: e.detail.value}\n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duas\">Ascend by Due</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duds\">Descend by Due</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deas\">Ascend by Defer</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deds\">Descend by Defer</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"alph\">Alphabetical</IonSelectOption>\n                            </IonSelect>\n                            <div className=\"help-icon\" onClick={this.handleHelp}>\n                                <i \n                                    className=\"far fa-question-circle\" \n                                ></i>\n                            </div>\n                        </span>\n\n\n                    </div> \n\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default PerspectiveEdit;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Projects.css';\nimport './Pages.css';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport Task from './Components/Task';\n\nimport { withRouter } from \"react-router\";\n\nimport { SortableProjectList } from './Components/Sortable';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\nclass Projects extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '', // project name\n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            parent: \"\",\n            is_sequential: false,\n            currentProject: {children:[]},\n            activeTask: \"\"\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        this.activeTask = React.createRef();\n\n        this.name = React.createRef();\n\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) // if we updated the defer date\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.updatePrefix = this.random();\n        let cProject = (await views.props.engine.db.getProjectStructure(this.props.uid, this.props.id, false));\n        this.setState({name:pPandT[0][0][this.props.id], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, currentProject: cProject, is_sequential: cProject.is_sequential, parent: cProject.parentProj});\n    }\n\n    componentDidMount() {\n        this.refresh();\n        if (this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    updateName(e) {\n        if (e) {\n            this.props.gruntman.registerScheduler(() => { \n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"project.update__name\", { \n                        uid: this.props.uid, // pass it the things vvv\n                        id: this.props.id, \n                        name: e.target.value\n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `project.this.${this.props.id}-update`) // give it a custom id\n            this.setState({name: e.target.value})\n        } else { console.log(e)}\n    } \n\n    render() {\n        return (\n            <IonPage>\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    {(()=> {\n                                        if (this.state.parent !== \"\")\n                                            return <a className=\"fas fa-chevron-left backbutton\" onClick={()=>{this.props.paginate(\"projects\", this.state.parent);this.props.history.push(`/projects/${this.state.parent}`)}} />\n                                    })()}\n                                    <i style={{paddingRight: 4}} \n                                        className=\"fas fa-tasks\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.name} // TODO: jack this is hecka hacky\n                                        style={{transform: \"transformY(-2px)\"}}\n                                        ref={this.name}\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                                <div className=\"greeting-container\" style={{marginLeft: 5, marginTop: 7}}>\n                                    <a \n                                        onClick={()=> {\n                                            this.setState({is_sequential: !this.state.currentProject.is_sequential}, () => {\n                                                this.props.gruntman.do( // call a gruntman function\n                                                    \"project.update__pstate\", { \n                                                        uid: this.props.uid, // pass it the things vvv\n                                                        id: this.props.id, \n                                                        is_sequential: this.state.is_sequential\n                                                    }\n                                                );\n                                            }); // change the icon\n                                        }} \n                                        data-tip=\"LOCALIZE: Sequencial/Paralellel\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className={this.state.is_sequential ? \"fas fa-arrows-alt-v\":\"fas fa-arrows-alt-h\"}\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 13, transform: this.state.is_sequential ? \"translate(3.5px, -1px)\" : \"translate(0.25px, -1px)\"}}>\n                                        </i>\n                                    </a>\n                                    <a \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        onClick={()=>{\n                                            this.props.gruntman.do( // call a gruntman function\n                                                \"project.delete\", { \n                                                    uid: this.props.uid, // pass it the things vvv\n                                                    pid: this.props.id, \n                                                    parent: (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent\n                                                }\n                                            ).then(()=>{\n                                                this.props.menuRefresh(); // refresh menubar\n                                                this.props.history.push((this.state.parent === \"\" || this.state.parent === undefined) ? \"/upcoming/\" : `/projects/${this.state.parent}`); // go back\n                                                this.props.paginate((this.state.parent === \"\" || this.state.parent === undefined) ? \"upcoming\" : `projects`, (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent);\n                                            }) // call the homebar refresh\n                                        }}\n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}\n                                        >\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", overflowX: \"hidden\"}}>\n\n                        <SortableProjectList list={this.state.currentProject.children} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]} possibleProjects={this.state.possibleProjects} history={this.props.history} paginate={this.props.paginate} activeTaskRef={this.activeTask} activeTaskID={this.state.activeTask}/>\n\n                        <div style={{marginTop: 10}}>\n                            <a className=\"newbutton\" onClick={()=>{\n                                this.props.gruntman.do( // call a gruntman function\n                                    \"task.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        pid: this.props.id, \n                                    },\n                                    true // bypass updates to manually do it + make it quicker\n                                ).then((result)=>{\n                                    let cProject = this.state.currentProject; // get current project\n                                    let avail = this.state.availability; // get current availibilty\n                                    avail[result.tid] = true; // set the current one to be available, temporarily so that people could write in it\n                                    cProject.children.push({type: \"task\", content:result.tid}); // add our new task\n                                    this.setState({activeTask:result.tid, currentProject: cProject, availability: avail}, () =>  this.activeTask.current._explode() ) // wosh!\n                                }) // call the homebar refresh\n                            }}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>Add a Task</div></div></a>\n                            <a className=\"newbutton\" onClick={async function() {\n                                let npid = (await this.props.gruntman.do( // call a gruntman function\n                                    \"project.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        parent: this.props.id, \n                                    },\n                                )).pid;\n                                this.props.history.push(`/projects/${npid}/do`);\n                            }.bind(this)}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>Add a Project</div></div></a>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Projects);\n\n","//import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport React, { useState } from 'react';\nimport './FloatingActionButton.css';\nimport * as chrono from 'chrono-node';\nimport {useSpring, animated} from 'react-spring'\n\n\n/*\n * Hello human,\n * You know I'm not Jack because my pen has no nib\n * You know I'm not Huxley because I can't adlib\n * If I said I could do frqnt end, I'd be telling a fib\n * And now, as punishment, I've lost a rib\n * But alas, here is abtib ^-^\n *\n * ~~@Exr0n~~\n * @Ex-rib\n *\n */\n\nconst defaultValue = \"Add something to the inbox?\";\n\nfunction handleABTIBInput(value) {\n    console.log('abtib reportin to handle input ^-^');\n    console.log(value);\n    // TODO: nlp it\n    // TODO: create the task\n}\n\nfunction ABTIB(props) {\n    const [isExpanded, setisExpanded] = useState(false);\n    const [isSaving, setisSaving] = useState(false);\n\n    const anim = useSpring({\n\tto: \n\t    (isSaving ? \n\t\t{\n\t\t    width: 280, \n\t\t    color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd-success)\"\n\t\t} \n\n\t\t: \n\n\t\t{\n\t\t    width: isExpanded ? 280:250, \n\t\t    color:\"var(--quickadd-text)\", \n\t\t    //color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd)\",\n\t\t    //backgroundColor: \"var(--quickadd-success)\"\n\t\t}\n\t    )\n    })\n\n    return <animated.input \n\t\tid=\"abtib\" \n\t\treadOnly={false} \n\t\ttype=\"text\" \n\t\tdefaultValue={\"\"} \n\t\tstyle={anim} \n\t\tclassName=\"attib\"\n\t\tref={props.reference}\n\n        onFocus={\n            (event) => {\n                event.target.value = \"\";\n                setisExpanded(true);\n            }\n        }\n        onBlur={e=>{\n            setisExpanded(false);\n            setisSaving(false);\n            e.target.value = \"\";\n        }}\n        onKeyUp={\n            (event) => {\n                if (event.key === 'Enter') {\n                    event.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                    setisSaving(true);\n                    let taskName = event.target.value;\n                    let dateInfo = chrono.parse(taskName);\n                    let due = undefined;\n                    let defer = undefined;\n                    if (dateInfo.length > 0) {\n                        // we got a date!\n                        if (dateInfo[0].end) {\n                            // both start (defer) and end (due)\n                            // get end (due) date\n                            due = dateInfo[0].end.date();\n                            defer = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n\n                        }\n                        else {\n                            // only start (due)\n                            due = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n                        }\n                    }\n                    let npobj = { \n                            uid: props.uid, // pass it the things vvv\n                            pid: \"\",\n                            due,\n                            defer,\n                            name: taskName\n                    };\n                    props.gruntman.do( // call a gruntman function\n                        \"task.create\", npobj,\n                    ).then(()=>{\n                        event.target.blur();\n                    });\n                }\n            }\n        }\n        placeholder={ defaultValue + ((Math.random()*128 < 1) ? \" ^-^\" : \"\")}\n     />;\n}\n\nexport default ABTIB;\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport { IonModal, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonSearchbar, IonFooter } from '@ionic/react';\nimport './QuickSwitcher.css'\nimport '../Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\n\n\nclass QuickSwitcher extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    searchRef: '',\n\t    items: [],\n\t    filteredList: [],\n\t    query: '',\n\t    firstItem: '',\n\t    direction: true, \n\t    selected: 0,\n\t    prop_store: '',\n\t    initialRenderingDone: false, \n\t}\n\tthis.searcher = React.createRef();\n    }\n\n    componentDidUpdate() {\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.processItems() // process the items \n\t}\n\n    }\n\n    componentDidMount() {\n\tthis.processItems() // when we mount, process the items. probs delete this. \n\tthis.setState({prop_store: this.props, options: this.state.items, initialRenderingDone: true}) // set the prop store and the items \n    }\n\n    focusRef() {\n       if (this.searcher.current) // if the ref exists, \n            this.searcher.current.setFocus(); // focus it \n\t    this.setState({query: ''}) // and reset the query \n    }\n\n\n    filterItems(searchTerm, org) {\n\tlet filteredItems = this.state.items.filter(item => {\n\t    return item[0].toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n\t});\n\treturn filteredItems\n    }\n\n\n    processItems() {\n\t// name, url prefix, id\n\tthis.setState({items: \n\t    [\n\t\t[':upcoming', 'upcoming', ''], // set the first item to upcoming \n\t\t// (i could do + but i think thats less efficent \n\t\t[':completed', 'completed', ''], // set the second item to completed\n\t\t[':calendar', 'calendar', ''], // set the third item to calendar\n\t\t...this.props.items[0].map(o => ['!'+o.name, 'perspectives', o.id]), // map the perspectives\n\t\t...this.props.items[1].map(o => ['.'+o.name, 'projects', o.id]) // and the projects \n\t    ],\n\t    prop_store: this.props //  and update the props \n\t})\n    }\n\n\n    handleKeydown(e) {\n\tconst keyname = e.key;\n\tif (keyname == \"Enter\") {\n\t    let selectedItem = this.filterItems(this.state.query)[this.state.selected]\n\t    // TODO: jack make the sidebar styling work \n\t    if ((!selectedItem || !this.state.query) && this.state.selected == 0) {\n\t\tif (this.state.direction && this.props.history.length > 2) { \n\t\t    this.props.history.goBack() \n\t\t} \n\t\telse if (this.props.history.length > 2) { this.props.history.goForward() }\n\t\tthis.setState({direction: !this.state.direction})\n\t\t\n\t    } else {\n\t\tconst slicedSelectedItem = selectedItem.slice(1)\n\t\tthis.props.history.push(`/${selectedItem[1]}/${selectedItem[2]}`) // push to the history\n\t\tthis.props.paginate(...slicedSelectedItem); // paginate-ify it!\n\t\tthis.props.updateIdx(slicedSelectedItem)\n\t    }\n\t    this.props.dismiss() // dismiss the modal\n\t} else {\n\t    const idx = this.state.selected\n\t    const len = this.filterItems(this.state.query).length-1\n\t    if (keyname == \"ArrowUp\") {\n\t\tconsole.log(idx, \"up\")\n\t\tif (idx > 0) {\n\t\t    this.setState({selected: idx-1})\n\t\t} else { this.setState({selected: len})}\n\t    } else if (keyname == \"ArrowDown\") {\n\t\tconsole.log(idx, \"down\")\n\t\tif (idx == len) {\n\t\t    this.setState({selected: 0})\n\t\t} else { this.setState({selected: idx+1}) }\n\t    }\n\t}\n\n    }\n\n\n    render() { \n\treturn (\n\t    <IonModal \n\t\tisOpen={this.props.qs_show} \n\t\tanimated={false}\n\t\tcssClass='qs_modal'\n\t\tautoFocus={true}\n\t\tonDidPresent={this.focusRef}\n\t\tonDidDismiss={this.props.dismiss}\n\t    >\n\t\t<div className='modal-content-wrapper'>\n\t\t    <IonSearchbar \n\t\t\tautoFocus={true}\n\t\t\tref={this.searcher} \n\t\t\tanimated={true}\n\t\t\tspellcheck={true}\n\t\t\tclassName='search-bar'\n\t\t\tplaceholder=\"Previous  |  Let's go to..\" // TODO: jack do you like this? \n\t\t\tonIonChange={e => this.setState({query: e.detail.value, selected: 0})}\n\t\t\tdebounce={0}\n\t\t\tonKeyDown={this.handleKeydown}\n\t\t    />\n\t\t    <div className='option-wrapper'> \n\t\t\t{this.filterItems(this.state.query).map((item, i) => {\n\t\t\t    return (\n\t\t\t\t<p \n\t\t\t\t    className= {`option-text ${(this.state.selected == i)? 'option-text-hover' : ''}`}\n\t\t\t\t    onMouseEnter={() => {\n\t\t\t\t\tthis.setState({selected: i}); \n\t\t\t\t\tconsole.log(this.state.selected)\n\t\t\t\t    }}\n\t\t\t\t    onClick={()=>{\n\t\t\t\t\tthis.props.history.push(`/${item[1]}/${item[2]}`) // push to the history\n\t\t\t\t\tthis.props.paginate(...item.slice(1)); // paginate-ify it!\n\t\t\t\t\tthis.props.dismiss()\n\t\t\t\t    }}\n\t\t\t\t>{item[0]}</p>\n\t\t\t\t)\n\n\t\t\t    }\n\t\t\t)}\n\n\t\t    </div> \n\t\t</div>\n\n\t    </IonModal>\n\t) \n    }\n\n}\n\nexport default withRouter(QuickSwitcher);\n\n\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport bindGlobal from 'mousetrap-global-bind';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport QuickSwitcher from './QuickSwitcher'\n\nconst autoBind = require('auto-bind/react');\n\n\nclass Keybinds extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    sidebar_list: [], // what's in the sidebar? \n\t    sidebar_index: 0, // how far down the sidebar are we? \n\t    prop_store: '', // store props so we can check if they have changed \n\t    qs_show: false // is the quick switcher shown? \n\t}\n    }\n\n    // define the bindings! 2d array of keybind and function \n    // TODO TODO: for some reason binding works now, so replace that later? \n    // TODO: expand these keybinds. ie, n/p and up/down arrows\n    bindings = [\n\t[\"alt+1\", ()=>{this.sidebar_switcher(this, 0)}], // nav to upcoming keybind\n\t[\"alt+2\", ()=>{this.sidebar_switcher(this, 1)}], // nav to completed keybind\n\t[\"alt+3\", ()=>{this.sidebar_switcher(this, 2)}], // nav to item 3 keybind\n\t[\"alt+4\", ()=>{this.sidebar_switcher(this, 3)}], // nav to item 4 keybind\n\t[\"alt+5\", ()=>{this.sidebar_switcher(this, 4)}], // nav to item 5 keybind\n\t[\"alt+6\", ()=>{this.sidebar_switcher(this, 5)}], // nav to item 6 keybind\n\t[\"alt+7\", ()=>{this.sidebar_switcher(this, 6)}], // nav to item 7 keybind\n\t[\"alt+8\", ()=>{this.sidebar_switcher(this, 7)}], // nav to item 8 keybind\n\t[\"alt+9\", ()=>{this.sidebar_switcher(this, 8)}], // nav to item 9 keybind\n\t[\"alt+0\", ()=>{this.sidebar_switcher(this, this.state.sidebar_list.length-1)}], // nav to last item keybind\n\t[\"alt+j\", ()=>{this.sidebar_incrimentor(this, 1)}], // nav down keybind \n\t[\"alt+k\", ()=>{this.sidebar_incrimentor(this, -1)}], // nav up keybind \n    [\"command+enter\", ()=>{this.focusElement(this.props.abtib)}], // nav up keybind \n    ]\n\n    globalBindings = [\n\t[\"command+k\", ()=>{this.manageQs(this)}], // toggle quick swithcher keybind \n    ]\n    \n    //TODO: this doesnt work with clicking or like anything else but eh\n\n    sidebar_switcher(that, num){\n\tconst loca = this.state.sidebar_list[num]; // set our location to index in sidebar\n\tthat.props.history.push(`/${loca[0]}/${loca[1]}`) // push to the history\n\tthat.props.paginate(...loca); // paginate-ify it!\n\tthis.setState({sidebar_index: num}) // update the sidebar index \n    }\n\n    sidebar_incrimentor(that, num) {\n\tconst next_loca = this.state.sidebar_list[this.state.sidebar_index+num] // store the variable -- we can delet this. \n\tif (next_loca) { // if its defined, \n\t    this.sidebar_switcher(that, this.state.sidebar_index+num) // go there\n\t    // if it's not defined and it's at the end, \n\t} else if (this.state.sidebar_index == this.state.sidebar_list.length-1) {\n\t    this.sidebar_switcher(that, 0) // wrap around and go back to the beginning \n\t} else { // if it's not defined and not at the end, then it must be at the beginning,\n\t    this.sidebar_switcher(that, this.state.sidebar_list.length-1) // so go to the end \n\t}\n    }\n\n    setSidebarIndex(item) {\n\tlet idx\n\tthis.state.sidebar_list.forEach((sidebarItem, i) => {\n\t    if (this.arraysAreIdentical(sidebarItem, item)) {\n\t\tidx = i\n\t    }\n\t})\n\tthis.setState({sidebar_index: idx})\n    }\n\n\n    arraysAreIdentical(arr1, arr2){\n\tfor (let i = 0, len = arr1.length; i < len; i++){\n\t    if (arr1[i] !== arr2[i]){\n\t\treturn false;\n\t    }\n\t}\n\treturn true; \n    }\n\n\n    manageQs(that) {\n\tthis.setState({qs_show: !this.state.qs_show}); \n    }\n\n    focusElement(ref) {\n\tif (ref) {\n\t    ref.current.focus()\n\t}\n    }\n\n    componentDidUpdate(){\n\t//TODO: safe-proof(?) this\n\t// update the props\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.setState({\n\t\tsidebar_list: [\n\t\t    ['upcoming', ''], // set the first item to upcoming \n\t\t    // (i could do + but i think thats less efficent \n\t\t    ['completed', ''], // set the second item to completed\n\t\t    ['calendar', ''], // set the third item to calendar\n\t\t    ...this.props.perspectives.map(o => ['perspectives', o.id]), // map the perspectives\n\t\t    ...this.props.projects.map(o => ['projects', o.id]) // and the projects \n\t\t], \n\t\tprop_store: this.props //  and update the props \n\t    })\n\t}\n\n\t// TODO: get the current url and set the index that way \n\t//if (!this.state.sidebar_index) {\n\t//    this.setState({sidebar_index: side\n\n\t//}\n    }\n\n    // loop through and bind all our things!\n    componentDidMount() {\n\tthis.setState({prop_store: this.props})\n\n        this.bindings.map(combo => {\n\t\tMousetrap.bind(...combo)\n        })\n\n\tthis.globalBindings.map(combo => {\n\t\tMousetrap.bindGlobal(...combo)\n\t})\n    }\n\n    // loop through and unbind all our things!\n    componentWillUnmount() { \n        this.bindings.map(combo => {\n            Mousetrap.unbind(...combo)\n        })\n    }\n\n    render() { \n\treturn (\n\t    <QuickSwitcher \n\t\tqs_show={this.state.qs_show} \n\t\tdismiss={()=> this.setState({qs_show: false})}\n\t\titems={[this.props.perspectives, this.props.projects]}\n\t\tpaginate={this.props.paginate}\n\t\tupdateIdx={this.setSidebarIndex}\n\n\t    /> \n\t)\n    }\n\n}\n\nexport default withRouter(Keybinds);\n\n\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t423,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t424,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t425,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t426,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t427,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t428,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t429,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t430,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t431,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t432,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t433,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t434,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t435,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t436,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t437,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t438,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t439,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t440,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t441,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t442,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t443,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t444,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t445,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t446,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t447,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t448,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t449,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t450,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t451,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t452,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t453,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t454,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t455,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t456,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t457,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t458,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t459,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t460,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t461,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t462,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t463,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t464,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t465,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 215;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t469,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 217;\nmodule.exports = webpackAsyncContext;","import dbManager from \"./DBManager\"\nlet cRef = dbManager.cRef;\n\nconst util = {\n    select: {\n        compare: (lhs, cmp, rhs) => {\n            switch (cmp) {\n                case \"<\":\n                    return lhs < rhs;\n                case \">\":\n                    return lhs > rhs;\n                case \"<=\":\n                    return lhs <= rhs;\n                case \">=\":\n                    return lhs >= rhs;\n                case \"==\":\n                    return lhs == rhs;\n                case \"!=\":\n                    return lhs != rhs;\n                case \"has\":\n                    return lhs.includes(rhs);\n                case \"!has\":\n                    return !lhs.includes(rhs);\n                default:\n                    throw new TypeError(\"Unkown comparator \" + cmp);\n            }\n        },\n        all: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (!util.select.compare(dat[lhs], cmp, rhs))\n                    return false;\n            return true;\n        },\n        any: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs))\n                    return true;\n            return false;\n        },\n        atLeast: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter >= threshold)\n                        return true;\n                }\n            return false;\n        },\n        atMost: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter > threshold)\n                        return false;\n                }\n            return true;\n        }\n    },\n    debug: {\n        log: (arg) => {\n            console.log(arg);\n            return arg;\n        },\n        trace: (arg) => {\n            console.trace(arg);\n            return arg;\n        }\n    }\n};\n\nasync function getTasks(userID) {\n    return cRef(\"users\", userID, \"tasks\").get()\n    .then(snap => snap.docs\n        .map(doc => doc.id)\n    ).catch(err => {\n        console.error('Error getting documents', err);\n    });\n}\n\nasync function getTasksWithQuery(userID, query) {\n    let taskDocs = await cRef(\"users\", userID, \"tasks\")\n        .get()\n        .then(snap => snap.docs\n            .filter(query)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return taskDocs.map(doc => doc.id);\n}\n\nasync function getInboxTasks(userID) {\n    let inboxDocs = await cRef(\n        \"users\", userID,\n        \"tasks\")\n        //['project', '==', ''],\n        //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(util.select.all(['project', '==', ''], ['isComplete', '==', false]))\n            .sort((a,b) => a.data().order - b.data().order)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return inboxDocs.map(doc => doc.id);\n}\n\nasync function getDSTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(dsTime.getHours() + 24);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function dueTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(23,59,59,999);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function selectTasksInRange(userID, min=(new Date(1900, 1, 1)), max=(new Date(2100, 1, 1)), returnFull=false) {\n/*    let maxT = max;*/\n    //let minT = min;\n    //maxT.setHours(23, 59, 59, 999);\n    /*minT.setHours(0, 0, 0, 0);*/\n    let tasks = await cRef(\"users\", userID, \"tasks\")\n                    .get()\n                    .then(snap => snap.docs\n                        .filter(doc =>\n                            (doc.data().due ?\n                                (doc.data().defer ?\n                                    (new Date(doc.data().due.seconds*1000)) <= max && (new Date(doc.data().due.seconds*1000)) >= min && (new Date() >= (new Date(doc.data().defer.seconds*1000)))\n                                : false) \n                                : false)\n                        )\n                        .filter(doc => !doc.data().isComplete)\n                        .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n                    ).catch(console.error);\n    return returnFull ? tasks.map(doc => [doc.id, doc.data()]):tasks.map(doc => doc.id);\n}\n\nasync function getDSRow(userID, avaliable) {\n    console.warn(\"DEPERCATED: use instead selectTasksInRange\");\n    let ibt = await getInboxTasks(userID);\n    let d = new Date();\n    let dsTasks = [];\n    let prev = [];\n    for (let i=0; i<=7; i++) {\n        let content = (await dueTasks(userID, avaliable, d))\n        let cache = content;\n        dsTasks.push(content.filter(x => !prev.includes(x)));\n        prev = cache;\n        d.setDate(d.getDate() + 1)\n    }\n    return dsTasks.map(dst => dst.filter(x => ibt.indexOf(x) < 0));\n}\n\nasync function getInboxandDS(userID, avalibility) {\n    let ibt = await getInboxTasks(userID);\n    let dst = await getDSTasks(userID, avalibility);\n    let dstWithoutIbt = dst.filter(x => ibt.indexOf(x) < 0);\n    return [ibt, dstWithoutIbt]\n}\n\nasync function getTaskInformation(userID, taskID) {\n    let dat = (await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs\n            .filter(doc => doc.id === taskID))\n    )[0]\n    if (dat) return dat.data();\n}\n\nasync function removeParamFromTask(userID, taskID, paramName) {\n    let ti = await getTaskInformation(userID, taskID);\n    delete ti[paramName];\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .set(ti)\n        .catch(console.error);\n}\n\nasync function getTopLevelProjects(userID) {\n    let projectIdByName = {};\n    let projectNameById = {};\n    let projectsSorted = []; \n\n    let snap = (await cRef('users', userID, \"projects\")\n        .get());\n\n    snap.docs.forEach(proj => {\n        if (proj.exists && proj.data().top_level === true) {\n            projectNameById[proj.id] = proj.data().name;\n            projectIdByName[proj.data().name] = proj.id;\n            let projElem = {};\n            projElem.id = proj.id;\n            projElem.name = proj.data().name;\n            projElem.sortOrder = proj.data().order;\n            projectsSorted.push(projElem);\n        }\n    });\n\n    projectsSorted.sort((a,b) => a.sortOrder-b.sortOrder);\n    let ret = [projectNameById, projectIdByName, projectsSorted];\n    return ret;\n}\n\nasync function getTags(userID) {\n    let tags = [];\n\n    await cRef(\"users\", userID, \"tags\").get()\n        .then(snap => snap.docs.forEach( tag => {\n            if (tag.exists) {\n                tags.push(tag.data());\n            }\n        }\n    )).catch(console.error);\n    console.log(tags);\n    return tags;\n}\n\nasync function getProjectsandTags(userID) {\n    // NOTE: no longer console.error when  !project/tag.exists\n    let projectIdByName = {};\n    let projectNameById = {};\n    await cRef(\"users\", userID, \"projects\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(proj => {\n            if (proj.exists) {\n                projectNameById[proj.id] = proj.data().name;\n                projectIdByName[proj.data().name] = proj.id;\n            }\n        }))\n        .catch(console.error);\n\n    let tagIdByName = {};\n    let tagNameById = {};\n    await cRef(\"users\", userID, \"tags\").get()\n        .then(snap => snap.docs.forEach(tag => {\n            if (tag.exists) {\n                tagNameById[tag.id] = tag.data().name;\n                tagIdByName[tag.data().name] = tag.id;\n            }\n        }))\n        .catch(console.error);\n\n    return [[projectNameById, projectIdByName], [tagNameById, tagIdByName]];\n}\n\nasync function getPerspectives(userID) {\n    let pInfobyName = {};\n    let pInfobyID = {};\n    let ps = [];\n    await cRef(\"users\", userID, \"perspectives\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(pstp => {\n            if (pstp.exists) {\n                pInfobyID[pstp.id] = {name: pstp.data().name, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                pInfobyName[pstp.data().name] = {id: pstp.id, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                ps.push({id: pstp.id, ...pstp.data()});\n            }\n        }))\n        .catch(console.error);\n\n    ps.sort((a,b) => a.order-b.order);\n\n    return [pInfobyID, pInfobyName, ps];\n}\n\nasync function modifyProject(userID, projectID, updateQuery) {\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyTask(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyPerspective(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"perspectives\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function newTask(userID, taskObj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    if (taskObj.project === \"\") {\n        let ibtL = (await getInboxTasks(userID)).length;\n        taskObj.order = ibtL;\n    } else {\n        let projL = (await getProjectStructure(userID, taskObj.project)).children.length;\n        taskObj.order = projL;\n    }\n\n    // Perspectives cannot have empty defer dates\n    // But! We could set no defer to defer today.\n    if (!taskObj.defer)\n        taskObj.defer = new Date();\n\n    let taskID = (await cRef(\"users\", userID, \"tasks\").add(taskObj)).id;\n\n    return taskID;\n}\n\nasync function newProject(userID, projObj, parentProj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    let projL;\n    // Util func to get size of ob\n    Object.size = function(obj) {\n        var size = 0, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) size++;\n        }\n        return size;\n    };\n\n    if (parentProj) {\n        projL = (await getProjectStructure(userID, parentProj)).children.length;\n        projObj.parent = parentProj;\n    } else {\n        projL = Object.size((await getTopLevelProjects(userID))[0]);\n        projObj.parent = \"\";\n    }\n    projObj.order = projL;\n    projObj.children = {};\n\n    let pid = (await cRef(\"users\", userID, \"projects\").add(projObj)).id;\n    return pid;\n}\n\nasync function newPerspective(userID, pstObj) {\n    return (await cRef(\"users\", userID, \"perspectives\").add({order: (await getPerspectives(userID))[2].length, ...pstObj})).id;\n}\n\nasync function newTag(userID, tagName) {\n    return (await cRef(\"users\", userID, \"tags\").add({name: tagName})).id;\n}\n\nasync function completeTask(userID, taskID) {\n    await cRef(\"users\", userID, \"tasks\", taskID).update({\n        isComplete: true\n    });\n}\n\nasync function dissociateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[taskID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[taskID] = \"task\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[assosProjID] = \"project\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function dissociateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[assosProjID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function deleteTask(userID, taskID, willDissociateTask = true) {\n    let taskData = await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs.filter(doc => doc.id === taskID)[0].data()); // Fetch task data\n\n    if (taskData.project!== \"\" && willDissociateTask) {\n        await dissociateTask(userID, taskID, taskData.project);\n    }\n    await cRef(\"users\", userID, \"tasks\", taskID).delete()\n        .catch(console.error);\n}\n\nasync function deletePerspective(userID, perspectiveID) {\n    await cRef(\"users\", userID, \"perspectives\", perspectiveID).delete();\n}\n\nasync function deleteProject(userID, projectID) {\n    let struct = await getProjectStructure(userID, projectID)\n    for (let i of struct.children) {\n        if (i.type === \"project\") deleteProject(userID, i.content.id)\n        else modifyTask(userID, i.content, {project:\"\"});\n    }\n   \n    let cpLtTasks = await getCompletedTasks(userID);\n    const cpLt = [].concat(...cpLtTasks);\n    for (let t of cpLt)\n        if ((await getTaskInformation(userID, t)).project === projectID)\n            modifyTask(userID, t, {project:\"\"});\n\n    await cRef(\"users\", userID, \"projects\", projectID).delete()\n        .catch(console.error);\n}\n\nasync function deleteTag(userID, tagID) {\n    await cRef(\"users\", userID, \"tags\", tagID).delete()\n        .catch(console.error);\n}\n\nasync function getProjectStructure(userID, projectID, recursive=false) {\n    let children = [];\n\n    // absurdly hitting the cache with a very broad query so that the\n    // cache will catch all projects and only hit the db once\n\n    let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n    if (!project) {\n        return { id: projectID, children: [], is_sequential: false, sortOrder: 0, parentProj: 0};\n    }\n    for (let [itemID, type] of Object.entries(project.data().children)) {\n        if (type === \"task\") {  // TODO: combine if statements\n            let task = await getTaskInformation(userID, itemID);\n            if(task){\n                if (!task.isComplete) {\n                    children.push({type: \"task\", content: itemID, sortOrder: task.order});\n                }\n            }\n           \n        } else if (type === \"project\") {\n            if (recursive) {\n                let project = await getProjectStructure(userID, itemID);\n                if(project) children.push({type: \"project\", content: project, is_sequential: project.is_sequential, sortOrder: project.sortOrder}); \n            } else {\n                let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === itemID)[0];\n                if(project) children.push({type: \"project\", content: {id: itemID}, is_sequential: project.data().is_sequential, sortOrder: project.data().order}); \n            }\n        }\n    }\n    children.sort((a,b) => a.sortOrder-b.sortOrder); //  sort by ascending order of order, TODO: we should prob use https://firebase.google.com/docs/reference/js/firebase.firestore.Query#order-by\n    return { id: projectID, children: children, is_sequential: project.data().is_sequential, sortOrder: project.data().order, parentProj: project.data().parent};\n}\n\nasync function getItemAvailability(userID) {\n    let t = new Date();\n    let tlps = (await getTopLevelProjects(userID))[2];\n    let blockstatus = {};\n    let timea = new Date();\n    async function recursivelyGetBlocks(userID, projectID) {\n        let bstat = {};\n        let project = (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n        let projStruct = (await getProjectStructure(userID, projectID));\n        if (project.data().is_sequential) {\n            let child = projStruct.children[0];\n            if (child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }\n        } else {\n            let children = projStruct.children;\n            await Promise.all(children.map(async function(child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }));\n        }\n        return bstat;\n    };\n    await Promise.all(tlps.map(async function(p) {\n        blockstatus[p.id] = true;\n        let blocks = await recursivelyGetBlocks(userID, p.id);\n        Object.assign(blockstatus, blocks);\n    }));\n    await (await getInboxTasks(userID)).forEach((id) => blockstatus[id] = true);\n    return blockstatus;\n}\n\nasync function getCompletedTasks(userID) {\n    let completedTasks = await getTasksWithQuery(userID, util.select.all([\"isComplete\", \"==\", true]));\n    let taskItems = {};\n    await Promise.all(completedTasks.map(async function(tsk){\n        taskItems[tsk] = await getTaskInformation(userID, tsk);\n    }));\n    const cpSorted = completedTasks.sort(function(b,a) {\n        let taskA = taskItems[a];\n        let taskB = taskItems[b];\n        if (!taskA || !taskB) {\n            return 1;\n        }\n        return ((\n            (taskA.completeDate) ?\n                (taskA.completeDate.seconds) :\n                1\n        )-(\n            (taskB.completeDate) ?\n                (taskB).completeDate.seconds :\n                1\n        ));\n    });\n    let today = new Date();\n    let yesterday = new Date();\n    let thisWeek = new Date();\n    let thisMonth = new Date();\n    today.setHours(0,0,0,0);\n    yesterday.setDate(yesterday.getDate()-1);\n    yesterday.setHours(0,0,0,0);\n    thisWeek.setDate(thisWeek.getDate()-7);\n    thisWeek.setHours(0,0,0,0);\n    thisMonth.setMonth(thisMonth.getMonth()-1);\n    thisMonth.setHours(0,0,0,0);\n    let tasksToday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= today : false;\n    });\n    let tasksYesterday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= yesterday && new Date(tsks.completeDate.seconds * 1000) < today : false;\n    });\n    let tasksWeek = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisWeek && new Date(tsks.completeDate.seconds * 1000) < yesterday : false;\n    });\n    let tasksMonth = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisMonth && new Date(tsks.completeDate.seconds * 1000) < thisWeek : false;\n    });\n    let evenBefore = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) < thisMonth : true;\n    });\n    //console.log(tasksYesterday);\n    //console.log(tasksWeek);\n    //console.log(tasksMonth);\n    /*console.log(evenBefore);*/\n    return [tasksToday, tasksYesterday, tasksWeek, tasksMonth, evenBefore];\n}\n\nasync function onBoard(userID, tz, username, payload) {\n    // Inbox, in reverse cronological order\n    await newTask(userID, {\n            name: payload[0] + ` ${username}, ` + payload[1],\n            desc: payload[2],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[3],\n            desc: payload[4],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[5],\n            desc: payload[6],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n\n    let cdyrslf = await newProject(userID, {name: payload[7], top_level: true, is_sequential: false});\n    let npd = await newProject(userID, {name: payload[8], top_level: true, is_sequential: false});\n    let od = new Date();\n    let ds = new Date();\n    od.setHours(od.getHours() - 24);\n    ds.setHours(ds.getHours() + 20);\n    let odid = await newTask(userID, {\n            name: payload[9],\n            desc: payload[10],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: od,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let dsID = await newTask(userID, {\n            name: payload[11],\n            desc: payload[12],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: ds,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, odid, npd);\n    await associateTask(userID, dsID, npd);\n    ds.setHours(ds.getHours() + 2);\n    let checkoutID = await newTask(userID, {\n            name: payload[13],\n            desc: payload[14],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let nice = await newTask(userID, {\n            name: payload[15],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, nice, cdyrslf);\n    let sequential = await newTask(userID, {\n            name: payload[16],\n            desc: payload[17],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sequential, cdyrslf);\n    let blocked = await newTask(userID, {\n            name: payload[18],\n            desc: payload[19],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, blocked, cdyrslf);\n    let click = await newTask(userID, {\n            name: payload[20],\n            desc: payload[21],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, click, cdyrslf);\n    let pspDir = await newTask(userID, {\n            name: payload[22],\n            desc: payload[23],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, pspDir, cdyrslf);\n    let pspsp = await newProject(userID, {name: payload[24], top_level: true, is_sequential: false});\n    let tags = await Promise.all([newTag(userID, payload[25]), newTag(userID, payload[26]), newTag(userID, payload[27]), newTag(userID, payload[28])]);\n    let specific = await newTask(userID, {\n            name: payload[29],\n            desc: payload[30],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[2], tags[3]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, specific, pspsp);\n    let sp = await newTask(userID, {\n            name: payload[31],\n            desc: payload[32],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[0]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sp, pspsp);\n    await newPerspective(userID, {name: payload[33], query: payload[34]});\n    let promotion = await newProject(userID, {name: payload[35], top_level: true, is_sequential: false});\n    let online = await newTask(userID, {\n            name: payload[36],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, online, promotion);\n    let dis = await newTask(userID, {\n            name: payload[37],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, dis, promotion);\n    let patreon = await newTask(userID, {\n        name: payload[38],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, patreon, promotion);\n    let yiipee = await newTask(userID, {\n        name: payload[39],\n            desc: payload[40],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, yiipee, promotion);\n}\n\nexport default {util, getTasks, getTasksWithQuery, getInboxTasks, getDSTasks, getInboxandDS, removeParamFromTask, getTopLevelProjects, getProjectsandTags, getPerspectives, modifyProject, modifyTask, modifyPerspective, newProject, newPerspective, newTag, newTask, completeTask, dissociateTask, associateTask, associateProject, dissociateProject, deleteTask, deletePerspective, deleteProject, selectTasksInRange, getProjectStructure, getItemAvailability, getTaskInformation, getDSRow, deleteTag, getCompletedTasks, onBoard, getTags};\n\n","import dbObj from \"./ObjectManager\";\n\nconst perspectiveHandler = function(){\n    let cgs = {\n        taskFilter: /([^\\w\\d\\s\\[]{1,2}[\\w\\s]+)/gi,\n        taskCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\]/gi,\n        logicCaptureGroup: /(.*) *([<=>]) *(.*)/gi,\n        globalCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\](\\$\\w+)* *[<=>]* * *(\\$\\w+)*/gi,\n        clear: function() {\n            this.taskFilter.lastIndex = 0;\n            this.taskCaptureGroup.lastIndex = 0;\n            this.logicCaptureGroup.lastIndex = 0;\n            this.globalCaptureGroup.lastIndex = 0;\n        }\n    };\n\n    let getCaptureGroups = (str) => str.match(cgs.globalCaptureGroup);\n\n    let parseTaskCaptureGroup = (str) => (str.split(\"$\").map(i=>i.trim()));\n\n    let parseSpecialVariables = function(...val) {\n        let vr;\n        switch(val[0]) {\n           case \"today\":\n               vr = new Date();\n               break;\n        }\n        return vr;\n    };\n\n    let compileTask = async function(uid, str, pPaT, additionalFilter) {\n        let queries = additionalFilter ? [additionalFilter] : [];\n        let taskCache = [];\n        let antiCache = [];\n        await Promise.all(str.match(cgs.taskFilter).map(async function(e) {\n            e = e.trim();\n            if (e[0] !== \"!\") {\n                switch (e[0]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(1, e.length)];\n                        queries.push(['project', '==', pid]);\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                taskCache = [...taskCache, ...(await compileTask(uid, str.replace(e.slice(1, e.length), pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', 'has',  pPaT[1][1][e.slice(1, e.length)]]);\n                }\n            } else {\n                switch (e[1]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(2, e.length)];\n                        queries.push(['project', '!=', pid]);\n\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                antiCache = [...antiCache, ...(await compileTask(uid, str.replace(e, \".\"+pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', '!has',  pPaT[1][1][e.slice(2, e.length)]]);\n                }\n            }\n            queries.push(['isComplete', '==', false]);\n        }));\n        return [...taskCache, ...(await dbObj.getTasksWithQuery(uid, dbObj.util.select.all(...queries)))].filter(i=>(!antiCache.includes(i)));\n    };\n\n    let compileLogicCaptureGroup = async function(uid, tasks, cmp, value, ltr) {\n        let taskInfo = await Promise.all(tasks[0].map(async function(t){\n            return [await dbObj.getTaskInformation(uid, t), t];\n        }));\n        let taskCompValues;\n        // TODO: add more?\n        if (tasks[1].includes(\"due\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].due ? new Date((t[0].due.seconds)*1000) : undefined)]);\n        } else if (tasks[1].includes(\"defer\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].defer ? new Date((t[0].defer.seconds)*1000) : undefined)]);\n        }\n        let filteredResults;\n        let util_datesequal = function(dateA, dateB) {\n            return dateA.getFullYear() === dateB.getFullYear() && dateA.getMonth() === dateB.getMonth() && dateA.getDate() === dateB.getDate();\n        };\n        switch (cmp) {\n            case \"=\":\n                taskCompValues = taskCompValues.filter(t=>util_datesequal(t[1], value));\n                break;\n            case \">\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] > value) : taskCompValues = taskCompValues.filter(t => t[1] < value);\n                break;\n            case \"<\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] < value) : taskCompValues = taskCompValues.filter(t => t[1] > value);\n                break;\n            case \">=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] >= value) : taskCompValues = taskCompValues.filter(t => t[1] <= value);\n                break;\n            case \"<=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] <= value) : taskCompValues = taskCompValues.filter(t => t[1] >= value);\n                break;\n\n        }\n        return (taskCompValues.map(t => t[0]));\n    };\n\n    let getPerspectiveFromString = async function(uid, pStr, filter, order) {\n        let pPaT = await dbObj.getProjectsandTags(uid);\n        let pRes = await getCaptureGroups(pStr);\n        if (!pRes) {\n            return [];\n        }\n        let fquery; \n        switch (filter) {\n            case \"avail\":\n                fquery = [\"defer\", \"<\", ((new Date()).getTime())/1000];\n                break;\n            case \"flagged\":\n                fquery = [\"isFlagged\", \"==\", true];\n                break;\n        }\n        let tasks = await Promise.all(pRes.map(async function(i) {\n            cgs.clear();\n            let logicSort = cgs.logicCaptureGroup.exec(i);\n            let t;\n            if(logicSort) {\n                // handle logic group\n                let [, lhs, cmp, rhs] = logicSort;\n                [lhs, rhs] = [parseTaskCaptureGroup(lhs), parseTaskCaptureGroup(rhs)];\n                if (cgs.taskCaptureGroup.test(lhs)) {\n                    lhs = [await compileTask(uid, lhs[0], pPaT, fquery), lhs[1]];\n                    rhs = parseSpecialVariables(rhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, lhs, cmp, rhs, true)); // true (that is, left to right order)\n                } else {\n                    rhs = [await compileTask(uid, rhs[0], pPaT, fquery), rhs[1]];\n                    lhs = parseSpecialVariables(lhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, rhs, cmp, lhs, false)); // false (that is, right to left order)\n                }\n            } else {\n                // handle standard group\n                t = (await compileTask(uid, i, pPaT, fquery));\n            }\n            return t;\n        }));\n        tasks = [...new Set(tasks.flat(1))];\n        let taskObjs = await Promise.all(tasks.map(async function(t){\n            return {id: t, ...(await dbObj.getTaskInformation(uid, t))}\n        })).then(values=>values);\n        switch (order) {\n            case \"duas\":\n                taskObjs.sort((a,b)=>(a.due?a.due.seconds:10000000000)-(b.due?b.due.seconds:10000000000));\n                break;\n            case \"duds\":\n                taskObjs.sort((a,b)=>(b.due?b.due.seconds:1)-(a.due?a.due.seconds:1));\n                break;\n            case \"deas\":\n                taskObjs.sort((a,b)=>(a.defer?a.defer.seconds:10000000000)-(b.defer?b.defer.seconds:10000000000));\n                break;\n            case \"deds\":\n                taskObjs.sort((a,b)=>(b.defer?b.defer.seconds:1)-(a.defer?a.defer.seconds:1));\n                break;\n\n        }\n        // Final availability filter for sequential\n        let aval = await dbObj.getItemAvailability(uid);\n        if (filter === \"avail\") taskObjs = taskObjs.filter(it => (aval[it.id] !== undefined)); \n        return taskObjs.map(t=>t.id);\n    };\n\n    return {calc: getPerspectiveFromString};\n}();\n\nexport default perspectiveHandler;\n\n","import dbFuncs from \"./src/ObjectManager\"\nimport pspObj from \"./src/PerspectiveManager\"\nimport dbRefObj from \"./src/DBManager\"\n\n\nexport default {start:dbRefObj.__init__, use:dbRefObj.useDb, db: dbFuncs, perspective: pspObj, flush: dbRefObj.flush};\n\n","import { Plugins } from '@capacitor/core';\nimport { getPlatforms } from '@ionic/react';\n\nconst { parseFromTimeZone } = require('date-fns-timezone')\n\nconst { LocalNotifications, Permissions } = Plugins;\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\nclass Gruntman {\n\n    /*\n     * Hello human,\n     * good afternoon.\n     * I am gruntman.\n     *\n     * Register refreshers with me\n     * so I could handle refreshes.\n     *\n     * Do actions with me\n     * so I could reverse them.\n     *\n     * Undo happens from me\n     * refresh happens from me.\n     *\n     *\n     * @jemoka\n     *\n     */\n\n    constructor(engine) {\n        this.notifPermissionGranted = false;\n        Permissions.query({name: \"notifications\"}).then((async function (e) {\n            if (e.state === \"prompt\")\n                this.notifPermissionGranted = (await LocalNotifications.requestPermission()).granted;\n            else if (e.state === \"granted\")\n                this.notifPermissionGranted = true;\n\n            let platforms = getPlatforms();\n            if (this.notifPermissionGranted && !platforms.includes(\"mobileweb\") && !platforms.includes(\"desktop\")) {\n                // notification specific setup\n                //\n                // TODO TODO TODO TODO TODO TODO TODO TODO\n                //\n\n                LocalNotifications.registerActionTypes({types: [{id: \"completeOrSnooze\", actions: [{id:\"complete\", title: \"LOCALIZE: Complete\", requiresAuthentication: \"true\", foreground: \"false\"}, {id:\"snooze\", title: \"LOCALIZE: Snooze\", requiresAuthentication: \"true\", foreground: \"false\"}]}]});\n            }\n            LocalNotifications.addListener(\"localNotificationActionPerformed\", this.handleNotificationAction);\n        }).bind(this));\n\n        this.hashCode = s => Math.abs(s.split('').reduce((a,b)=>{a=((a<<5)-a)+b.charCodeAt(0);return a&a},0));\n\n        this.e = engine;\n        this.refresher = ()=>{};\n        this.callbackRefresherReleased = true; // prevent live callback merge conflicts\n        this.conflictResolution = 1000; // 1000 ms = 1s worth of conflict time.\n        this.releaseTimeout = undefined;\n        this.TEMPTEMPTEMP()\n\n        this.doers = {\n            macro: {\n                applyOrder: async function (options) {\n                    // TODO undo handler?\n                    if (options.items.length !== options.order.length) \n                        console.error(\"Length of items and order length must be the same!\")\n                    await Promise.all(options.order.map((e,i) => {\n                        let item = options.items[e];\n                        if (item.type === \"task\") \n                            return engine.db.modifyTask(options.uid, item.content, {order: i});\n                        else if (item.type === \"project\")\n                            return engine.db.modifyProject(options.uid, item.content, {order: i});\n                            //await engine.db.modifyProject(options.uid, e.content, {order: options.order[i]});\n                    }));\n                    return {uid:options.uid}; // TODO HANDLE UNDO\n                }\n            },\n            tag: {\n                create: async function (options) {\n                    let newTag = await engine.db.newTag(options.uid, options.name);\n                    return {uid: options.uid, id: newTag};\n                }\n            },\n            task: {\n                create: async function (options) {\n                    let ntObject = {\n                        desc: \"\",\n                        isFlagged: false,\n                        isFloating: false,\n                        isComplete: false,\n                        project: options.pid?options.pid:\"\",\n                        tags: [],\n                        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n                        repeat: {rule: \"none\"},\n                        name: options.name?options.name:\"\",\n                    };\n\n                    if (options.due)\n                        ntObject.due = options.due\n                    if (options.defer)\n                        ntObject.defer = options.defer\n\n                    let ntID = await engine.db.newTask(options.uid, ntObject)\n\n                    if (options.pid && options.pid != \"\")\n                        engine.db.associateTask(options.uid, ntID, options.pid);\n\n                    return {uid: options.uid, tid: ntID};\n                },\n                update: async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, options.query)\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__project:  async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {project: options.project})\n\n                    if (options.oldProject)\n                        await engine.db.dissociateTask(options.uid, options.tid, options.oldProject);\n\n                    if (options.project !== \"\")\n                        await engine.db.associateTask(options.uid, options.tid, options.project);\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__uncomplete: async function (options) {\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: false, completeDate: new Date()});\n                    return {uid: options.uid, tid: options.tid, taskInfo};\n                },\n                update__complete: async function (options) {\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: true, completeDate: new Date()})\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    let due = (\n                        taskInfo.due ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.due.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.due.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ):\n                        undefined\n                    );\n                    let defer = (\n                        taskInfo.defer ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.defer.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.defer.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ): undefined\n                    );\n                    let repeat = taskInfo.repeat;\n                    if (repeat.rule !== \"none\" && due) {\n                        let rRule = repeat.rule;\n                        if (rRule === \"daily\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        } else if (rRule === \"weekly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let current = \"\";\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                    defer.setDate(defer.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let current = \"\";\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"monthly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let dow = due.getDate();\n                                let oDow = due.getDate();\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let dow = due.getDate();\n                                    let oDow = due.getDate();\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"yearly\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        }\n                    }\n                    return {message: \"Todo TODO TODO Todo: undo pack?\"}\n                }\n            },\n            project: {\n                create: async function (options) { // create project\n                    let projObj = {\n                        name: \"\",\n                        top_level: options.parent === undefined,\n                        is_sequential: false,\n                    };\n                    let npid = options.parent ? await engine.db.newProject(options.uid, projObj, options.parent) : await engine.db.newProject(options.uid, projObj) // make a project... with or without a parent\n                    if (options.parent) {\n                        engine.db.associateProject(options.uid, npid, options.parent);\n                    }// associate the two\n                    return {uid: options.uid, pid: npid}\n                },\n                delete: async function (options) {\n                    await engine.db.deleteProject(options.uid, options.pid);\n                    if (options.parent)\n                        engine.db.dissociateProject(options.uid, options.pid, options.parent);\n\n                    return {uid: options.uid, TODO: \"TODO\"} // TODO: how do we undelete a project?\n                },\n                update__name: async function (options) { // update the project name!\n                    let possibleProjects = await engine.db.getProjectsandTags(options.uid);\n                    // get all possible project\n                    let projectName = possibleProjects[0][0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {name: options.name});\n                    // return what we need to undo\n                    return {projectName, uid: options.uid}\n                },\n                update__pstate: async function (options) { // update the project name!\n                    let currentProject = await engine.db.getProjectStructure(options.uid, options.id, false); // get current project info\n                    // get all possible project\n                    let is_sequential = currentProject;\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {is_sequential: options.is_sequential});\n                    // return what we need to undo\n                    return {is_sequential, uid: options.uid}\n                },\n                associate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.associateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                },\n                dissociate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.dissociateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                }\n            },\n            perspective: {\n                create: async function(options) {\n                    let pObj = {\n                        name: \"\",\n                        avail: \"remain\",\n                        tord: \"duds\",\n                        query: \"\"\n                    }\n                    let npspid = await engine.db.newPerspective(options.uid, pObj);\n                    return {uid: options.uid, pid: npspid};\n                },\n                update__perspective: async function (options) { // update the perspective name!\n                    let possiblePerspectives = await engine.db.getPerspectives(options.uid);\n                    // get all possible perspectives\n                    let perspectiveObject = possiblePerspectives[0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the perspective\n                    await engine.db.modifyPerspective(options.uid, options.id, options.payload);\n\n                    // return what we need to undo\n                    return {perspectiveObject, uid: options.uid}\n                },\n\n                delete__perspective: async function (options) { // update the perspective name!\n                    console.log(\"perspective delete gruntman func\")\n                    // TODO: is this it? @jack\n                    await engine.db.deletePerspective(options.uid, options.id);\n                }\n            },\n        } // type:action:functionaction (return resources)\n        this.undoers = {\n            task: {\n                update: \"task.set\"\n            }\n        } // action: string\n        this.backlog = []; // actionID\n        this.undolog = []; // actionID\n        this.taskLog = {\n        } // actionID: [type, resources]\n        this.canUndo = {\n            task: {\n                update: true,\n            }\n        }\n        this.schedulers = {\n        } // util function onChange fixer-upper\n        this.updateLock = false;\n        this.updateInterval = undefined;\n\n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    halt() {\n        for (let key in this.schedulers)\n            clearTimeout(this.schedulers[key])\n        //this.refresher = ()=>{}; TODO TODO may cause memory leaks in _very_ narrow circumstances but uncomming will break project toggles due to refresher mounting too quickly\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    lockUpdates() {\n        this.updateLock = true;\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    unlockUpdates(interval=580) {\n        this.updateLock = false;\n        this.updateInterval = setTimeout(this.refresher, interval);\n    }\n\n    requestRefresh() {\n        if (!this.updateLock && this.callbackRefresherReleased)\n            this.refresher();\n    }\n\n    async scheduleNotification(id, uid, title, desc, time) {\n        return await LocalNotifications.schedule({\n            notifications: [\n                {\n                    title: title,\n                    body: desc,\n                    schedule: { at: time},\n                    sound: null,\n                    id: this.hashCode(\"id\"),\n                    attachments: `${id}`,\n                    extra: uid,\n                    actionTypeId: \"completeOrSnooze\"\n                }\n            ]\n        });\n    }\n\n    async handleNotificationAction(action) {\n        let taskID, userID;\n        switch (action.actionId) {\n            case \"complete\":\n                taskID = action.notification.attachments;\n                userID = action.notification.extra;\n                // TODO TODO\n                //this.do(\"task.update__complete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                break;\n            case \"snooze\":\n                // TODO TODO\n                taskID = action.notification.attachments;\n                userID = action.notification.extra;\n                break;\n        }\n    }\n\n    async cancelNotification(id) {\n        return await LocalNotifications.cancel({notifications: [{id:`${this.hashCode(id)}`}]});\n    }\n\n    async checkNotification(id) {\n        let expectedID = this.hashCode(id);\n        let pending = await LocalNotifications.getPending();\n        let needed = pending.notifications.map(e=>e.id).filter(e=>e==expectedID); // two equal signs to ignore type\n        return needed.length >= 0;\n    }\n\n    async TEMPTEMPTEMP() {\n        //await this.scheduleNotification(\"TESTID\", \"hi\", \"I am bob\", new Date()+5000);\n    }\n\n    /*\n     * @param refresher: refresher function to refresh what you registered\n     */\n\n    registerRefresher(r) {\n        this.refresher = r;\n        // lock updates every time a new page loads to prevent MeRGE Conflicts\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n    }\n\n    registerScheduler(callback, identifier, wait=500) {\n        if (this.schedulers[identifier])\n            clearTimeout(this.schedulers[identifier]); // clear the timeout\n        this.schedulers[identifier] = setTimeout(callback, wait);\n    }\n\n    async do(actionName, options, bypassUpdates, isUndo, unsafe_FORCE_UPDATES) {\n        /*\n         * @param actionName => action directive like task.edit or project.create\n         * @param options => options\n         *\n         */\n\n        // Lock updates every time cacheRef is called to prevent mErGE ConFLIcTS\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n\n        let actionID = this.random();\n\n        let nodes = actionName.split(\".\");\n\n        let action = this.doers;\n        while (nodes.length > 0) {\n            action = action[nodes.shift()];\n        }\n\n        if (isUndo) this.undolog.push(actionID);\n        else this.backlog.push(actionID);\n\n        let resources = await action(options);\n\n        this.taskLog[actionID] = [actionName, resources];\n\n        if (!this.updateLock && !bypassUpdates)\n            this.refresher();\n\n        if (unsafe_FORCE_UPDATES)\n            this.refresher();\n\n        return await resources;\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n}\n\nexport default Gruntman;\n\n","import React, { Component } from 'react';\nimport { Plugins } from '@capacitor/core';\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\n\nimport $ from \"jquery\";\n\n\nimport './Auth.css';\n\n\nimport '../themefiles/condutiontheme-default.css';\nimport '../themefiles/condutiontheme-default-dark.css';\nimport '../themefiles/condutiontheme-default-light.css';\nimport '../themefiles/condutiontheme-default-adapter.css';\n\n\n\nconst autoBind = require('auto-bind/react');\n\n\nconst { Storage } = Plugins;\n\nclass Auth extends Component {\n    constructor(props) {\n        super(props);\n\n        let greetings = [\"Hello,\", \"Hey,\", \"Heyo,\", \"Aloha,\", \"Yo!\"];\n\n        /*\n         * mode 0 = login in progress, \n         *      1 = new account in progress,\n         *      2 = recovery in progress, \n         *      3 = email unverified,\n         *      4 = email verified, proceed create\n         *      5 = recovery executed, shepeard them back\n         *\n         */\n\n        this.state = {\n            authMode: 0,\n            showExtra: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        autoBind(this);\n    }\n\n    doLogin() {\n        let view = this;\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            firebase.auth().signInWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).then(function() {\n                if (firebase.auth().currentUser.emailVerified)\n                     view.props.dispatch({service: \"firebase\", operation: \"login\"});\n                else\n                    view.setState({authMode: 3});\n            }).catch(function(error) {\n                    // Handle Errors here.\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log(error);\n                    $(\".auth-upf\").addClass(\"wrong\");\n            });\n        });\n    }\n\n    doCreate() {\n        // TODO: actually create the account\n        let view = this;\n        let problem = false;\n        firebase.auth().createUserWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).catch(function(error) {\n            view.setState({showExtra: true}, ()=>$('#need-verify').html(error.message));\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                firebase.auth().currentUser.sendEmailVerification();\n                firebase.auth().currentUser.updateProfile({displayName: $(\"#name\").val()});\n                view.setState({authMode: 4, showExtra: true});\n            }\n        })\n    }\n\n    dispatchCreate() {\n        firebase.auth().currentUser.reload().then(()=>{;\n            if (firebase.auth().currentUser.emailVerified)\n                this.props.dispatch({service: \"firebase\", operation: \"create\"});\n            else\n                $('#need-verify').html(\"Please double-check that you tapped the verification link in your email.\");\n        });\n    }\n\n    doRecover() {\n        let problem = false;\n        let view = this;\n        firebase.auth().sendPasswordResetEmail($(\"#email\").val()).catch(function(error) {\n            view.setState({showExtra: true});\n            $('#need-verify').html(error.message);\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                view.setState({authMode: 5});\n            }\n        })\n        // TODO: actually recover the account\n    }\n\n    doLocal() {\n        this.props.dispatch({service: \"json\", operation: \"login\"});\n    }\n\n    render() {\n        return (\n            <div id=\"auth-content-wrapper\">\n                <div id=\"auth-left-menu\">\n                    <div className=\"menu-area\" style={{height:\"100%\"}}>\n                        <div className=\"auth-component\"></div>\n                        <div className=\"auth-component\"></div>\n                        <span id=\"auth-image-credit\">Image by <span style={{fontWeight: 500}}>Tobias Keller/Paweł Czerwiński</span></span>\n                    </div>\n                </div>\n                <div id=\"authwall\">\n                    <h1 id=\"greeting-auth\">{this.state.greeting}</h1><span id=\"welcome-auth-msg\">Welcome to Condution.</span>\n                    <h3 className=\"greeting-auth-subtitle\" id=\"greeting-auth-normal\">{(()=>{\n                        switch (this.state.authMode) {\n                            case 2:\n                                return \"No worries! Let's recover your password.\";\n                            default:\n                                return \"Good to see you. Please sign in or tap Use Locally.\";\n\n                        }\n                    })()}</h3> \n                    <input className=\"auth-upf\" id=\"name\" type=\"text\" autoComplete=\"off\" defaultValue=\"\" placeholder=\"What should we call you?\" style={{display: this.state.authMode === 1 ? \"block\" : \"none\"}}/>\n                    <input className=\"auth-upf\" id=\"email\" type=\"email\" autoComplete=\"off\" defaultValue=\"\" placeholder=\"Email\" />\n                    <input className=\"auth-upf\" id=\"password\" type=\"password\" autoComplete=\"off\" defaultValue=\"\" placeholder=\"Password\" style={{display: this.state.authMode !== 2 ? \"block\" : \"none\"}} onKeyPress={(event)=>{\n                        if (event.key === \"Enter\") {\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                                case 5: \n                                    this.doLogin();\n                                    break;\n                            }\n                        }\n                    }}/>\n                    {(() => {\n                        if (this.state.authMode === 3 || this.state.authMode ===  4 || this.state.authMode === 5 || this.state.showExtra) return <span id=\"need-verify\">\n                            {(()=>{\n                                switch(this.state.authMode){\n                                    case 3:\n                                        return \"Check and verify your email, then tap Let's Do This!\";\n                                    case 4:\n                                        return \"Check and verify your email, then tap Proceed!\";\n                                    case 5:\n                                        return \"Check and verify your email, then return to login.\";\n\n                            }})()}\n                        </span>\n                    })()}\n                    <span id=\"recover-password\" style={{display: this.state.authMode === 3 ? \"none\" : \"block\"}} onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 2});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return \"Remembered? Login\";\n                                default:\n                                    return \"Recover Password\";\n\n                            }\n                        })()}</span>\n                    <div id=\"auth-actiongroup\">\n                        <div id=\"newuser\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 1});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return \"Log in\";\n                                default:\n                                    return \"Make an account\";\n\n                            }\n                        })()}</div>\n                        <div id=\"login\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                            }\n                        }}>\n                            <i className=\"fas fa-snowboarding\" style={{paddingRight: \"5px\"}}></i><span id=\"login-text\">{(() => {\n                                switch(this.state.authMode) {\n                                    case 0:\n                                    case 3:\n                                        return \"Let's Do This!\";\n                                    case 1:\n                                        return \"Verify Email!\";\n                                    case 2:\n                                        return \"Let's Recover!\";\n                                    case 4:\n                                        return \"Proceed!\";\n                                    case 5:\n                                        return \"Proceed!\";\n                                }\n                            })()}</span>\n                        </div>\n                        {(() => {\n                            if (this.state.authMode !== 2) return <div className=\"convert-src\" id=\"ulac\" onClick={this.doLocal}>Use Locally</div>\n                        })()}\n                    </div>\n                </div>\n            </div>\n      );\n    }\n}\n\nexport default Auth;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\nfunction Loader(props) {\n    return (\n        <div style={{width: \"100%\", height: \"100%\", position: \"absolute\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{marginRight: 20, maxWidth: 500}}>\n                <b>Condution v1.0.0-alpha.0</b> <br />\n\n                    <i>Like, why are you reading this?</i> <br />\n\n                    If there is something here [{props.error}], <br />\n                then talk to Jack or something. Or fix it. <br />\n                    INTERNAL USE ONLY. DO NOT DISTRIBUTE.\n            </div>\n            <div style={{marginLeft: 20, maxWidth: 500}}>\n                <br />\n\n                <pre style={{fontSize: 10}}>\n                    {`\n    Copyright (C) 2019-2020. Shabang Systems, LLC\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see https://www.gnu.org/licenses/.\n                    `}\n                </pre>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Loader;\n\n","/* Global Imports */\nimport React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, IonMenu, setupConfig } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Themefiles */\nimport './themefiles/condutiontheme-default-adapter.css';\nimport './themefiles/condutiontheme-default.css';\nimport './themefiles/condutiontheme-default-dark.css';\nimport './themefiles/condutiontheme-default-light.css';\n//import './themefiles/condutiontheme-default-new.css';\nimport './themefiles/condutiontheme-black-n-red.css';\n\n/* Font awesome */\nimport './static/fa/scripts/all.min.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n/* Capacitor core plugins + jQuery */\nimport { Plugins } from '@capacitor/core';\nimport $ from \"jquery\";\n\n/* Our Lovley Core Engine */\nimport Engine from './backend/CondutionEngine';\nimport Gruntman from './gruntman';\n\n/* Firebase */\nimport * as firebase from \"firebase/app\";\n\n/* Auth and store modules */\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n/* Views that we need */\nimport Auth from './pages/Auth';\nimport Loader from './pages/Loader';\nimport Home from './pages/Home';\n\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\n\n/* Storage Plugins */\nconst { Storage } = Plugins;\n\n\n/* \n * Hello human, good morning.\n *\n * Hope you are doing well. Thanks (why are you) visiting App.jsx?\n *\n * I manage global routing, auth handling, and all that jazz.\n * You should not touch me to change the interface.\n * But I guess I change the interface. So.\n *\n * I kind of change the interface?\n *\n * Anyways, I return one of Loader, Auth, or Home depending on auth state.\n *\n * And check for the auth state to determine which one to return\n *\n * It's not really a poem, isn't it.\n *\n * @Jemoka\n *\n */\n\nsetupConfig({ swipeBackEnabled: false, }); // globally disable swipe b/c we implemented our own\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        // We start with setting our state. We don't know our user's UID (duh)\n        this.state = {authMode: \"loader\", uid: \"\", displayName: \"\"};\n        \n        // We also set the theme based on the user's media query\n        if (window.matchMedia('(prefers-color-scheme:dark)').matches) {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-dark\");\n        }\n        else {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-light\");\n        }\n\n        // Make ourselves a nice gruntman\n        this.gruntman = new Gruntman(Engine);\n        \n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    async componentDidMount() {\n        // This IS in fact the view\n        let view = this;\n\n        // Light the fire, kick the tires an instance \n        // of {firebase}, and initializing the firebase \n        // and json engines\n        await Engine.start({firebase}, \"firebase\", \"json\");\n\n\n        // ==Handling cached dispatch==\n        // So, do we have a condution_stotype? \n        Storage.get({key: 'condution_stotype'}).then((dbType) => {\n            switch (dbType.value) {\n                // If its firebase \n                case \"firebase\":\n                    // Check if we actually has a user\n                    firebase.auth().onAuthStateChanged(function(user) {\n                        if (!user)\n                            view.authDispatch({operation:\"logout\"});\n                        // If we have one, shift the engine into firebase mode\n                        else {\n                            Engine.use(\"firebase\", view.gruntman.requestRefresh);\n                            // Load the authenticated state, set authmode as \"firebase\" and supply the UID\n                            view.setState({authMode: \"firebase\", uid: user.uid, displayName: user.displayName});\n                        }\n                    })\n                    break;\n                // If its json\n                case \"json\":\n                    // Shift the engine into json mode\n                    Engine.use(\"json\", view.gruntman.requestRefresh);\n                    // Load the authenticated state, set the authmode as \"json\" and supply \"hard-storage-user\" as UID\n                    this.setState({authMode: \"json\", uid:\"hard-storage-user\"});\n                    break;\n                // If there is nothing, well, set the authmode as \"none\"\n                default:\n                    this.setState({authMode: \"none\", uid:undefined});\n                    break;\n            }\n        });\n    }\n\n    // authDispatch handles the dispatching of auth operations. {login, create, and logout}\n    authDispatch(mode) {\n        // TODO: that's a state machine! @zbuster05\n        let uid;\n        let name;\n        switch (mode.operation) {\n            // operation mode login\n            case \"login\":\n                // shift the engine into whatever mode we just logged into\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                // write the login state into cookies\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                // get the UID\n\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n                // load the authenicated state and supply the UID\n                this.setState({authMode: mode.service, uid, displayName: name});\n                break;\n            // operation mode create\n            case \"create\":\n                // setthe engine as whatever service\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n\n                // TODO: do onboarding\n                // Here\n                console.log(\"I would be onboarding, but... alas.\");\n                // TODO: be done with onboarding\n                // Set the storage type and write it into cookies\n                // load the authenicated state and TODO supply the UID\n                this.setState({authMode: mode.service, uid, displayName: name});\n                break;\n            case \"logout\":\n                // Set the storage type to nada and write it into cookies\n                Storage.set({key: 'condution_stotype', value: \"none\"});\n                // Sign out if we are signed in\n                firebase.auth().signOut();\n                // Load the auth view\n                this.setState({authMode: \"none\", name: \"\"});\n                break;\n        }\n    }\n\n    render() {\n        // Check for onboarding here\n        // then continue\n        // Which authmode?\n        switch (this.state.authMode) {\n            // if we are at the first-paint load mode, do this:\n            case \"loader\":\n                return <Loader />\n            // if we did not authenticate yet, load the auth view:\n            case \"none\":\n                return <Auth dispatch={this.authDispatch}/>;\n            // if we did auth, load it up and get the party going\n            case \"firebase\":\n            case \"json\":\n                return <Home engine={Engine} uid={this.state.uid} dispatch={this.authDispatch} gruntman={this.gruntman} displayName={this.state.displayName}/>;\n            // wut esta this auth mode? load the loader with an error\n            default:\n                console.error(`CentralDispatchError: Wut Esta ${this.state.authMode}`);\n                return <Loader isError={true} error={this.state.authMode}/>\n        }\n    }\n}\n\nexport default App;\n//class App extends Component {\n    //render() {\n        //return (\n            //<IonApp>\n                //<Home />\n            //</IonApp>\n        //);\n    //}\n//}\n\n/*export default App;*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\nconst autoBind = require('auto-bind/react');\n\nclass Repeat extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            name: \"\", // task's name\n            rule: \"none\", // the repeat rule\n            advanced: false, // advanced or not\n            on: undefined, // advanced repeat rules\n        }\n    }\n\n    async loadTask() {\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n        this.setState({\n            name: taskInfo.name, // name is name\n            rule: taskInfo.repeat ? taskInfo.repeat.rule : \"none\", // rule is rule, if there's a rule\n            advanced: taskInfo.repeat ? (taskInfo.repeat.on !== undefined) : false, // on is on, if there's a rule\n            on: taskInfo.repeat ? taskInfo.repeat.on : undefined, // on is on, if there's a rule\n        });\n    }\n\n    componentDidMount() {\n        this.loadTask();\n    }\n\n    render() {\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}} cssClass={\"task-repeat \"+(()=>{\n                // Different repeat modes require different height modals\n                 switch (this.state.rule) {\n                      case \"none\":\n                          return \"task-repeat__default\";\n                      case \"daily\":\n                          return \"task-repeat__default\";\n                      case \"weekly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-weekly\" : \"task-repeat__default\");\n                      case \"monthly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-monthly\" : \"task-repeat__default\");\n                      case \"yearly\":\n                          return \"task-repeat__default\";\n                  }\n            })()}>\n                <div>\n                    {/* Header */}\n                    <div className=\"repeat-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\"}}>\n\t\t\t                <b className=\"bold-prefix\" >Repeat</b> \n\t\t\t                <div className=\"repeat-task-name\">{this.state.name}</div>\n\t\t\t            </span>\n                        {/* Close button */}\n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                    </div>\n                    <div>\n                        <div className=\"repeat-basic-row\">\n                            <div className=\"repeat-rule-selector\">\n                            <span>\n                                <i className=\"repeat-label fa fa-redo\"></i>\n                                <span className=\"repeat-label\">Repeat</span>\n                            </span>\n                            {/* The big select, force iOS style */}\n                            <IonSelect className=\"repeat-select\" interface=\"popover\" value={this.state.rule} mode=\"ios\" onIonChange={e=>{\n                                    // Set the repeat\n                                    this.props.gruntman.do(\n                                        \"task.update\", \n                                        { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: e.detail.value}}}\n                                    )\n\n                                    // Set the state too!\n                                    this.setState({rule: e.detail.value, advanced: false, on: undefined});\n \n                                }}>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"none\">None</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"daily\">Daily</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"weekly\">Weekly</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"monthly\">Monthly</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"yearly\">Yearly</IonSelectOption>\n                            </IonSelect>\n                            </div>\n                                {\n                                    \n                                <a style={{color: \"var(--decorative-light-alt)\", float: \"right\", cursor: \"pointer\", display: [\"weekly\", \"monthly\"].includes(this.state.rule) ? \"inline\" : \"none\" }} className={\"fas \" + (this.state.advanced ? \"fa-caret-down\":\"fa-caret-up\")} onClick={()=> {\n                                    if (this.state.advanced) {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule}}}\n                                        ) // undo advanced \n                                        this.setState({rule: this.state.rule, advanced: false, on: undefined}); // set the state too!\n                                    } else {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: []}}}\n                                        ) // do advanced \n                                        this.setState({rule: this.state.rule, advanced: true, on: []}); // set the state too!\n                                    }\n                                }}></a>\n                                }\n                        </div>\n                    </div>\n                    <div style={{margin: \"10px 20px\", color: \"var(--content-normal-alt)\"}}>\n                        {(()=>{\n                            if (this.state.advanced)\n                                switch (this.state.rule) {\n                                    case \"weekly\":\n                                        return (\n                                            <div className=\"repeat-weekgrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {/* [\"originalString\", \"localizedString\"] <= localize in this way */}\n                                                {[[\"M\", \"M\"], [\"T\", \"T\"], [\"W\", \"W\"], [\"Th\", \"Th\"], [\"F\", \"F\"], [\"S\", \"S\"], [\"Su\", \"Su\"]].map(e => <a key={e} className={\"repeat-weekgrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e[0]) ? \"repeat-weekgrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e[0])) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e[0]);\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e[0]);\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e[1]}</a>)}\n                                            </div>\n                                        )\n                                    case \"monthly\":\n                                        return (\n                                            <div className=\"repeat-dategrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"Last\"].map(e => <a key={e} className={\"repeat-dategrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e.toLowerCase()) ? \"repeat-dategrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e.toLowerCase())) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e.toLowerCase());\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e.toLowerCase());\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e}</a>)}\n                                            </div>\n                                        );\n                                }\n                        })()}\n                    </div>\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default Repeat;\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport './TagEditor.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n/*\n * Although I do not agree\n * Jack told me to make this feat\n * I did not make this carefree\n * yet this is far from elite\n *\n * I resolved to give it a try\n * and encountered this very strange bug\n * This thing makes me want to cry\n * Front-end is far from a drug\n *\n * I may be exageratting\n * Maybe this bug wasn't so bad\n * But still I cannot add padding\n * and it still makes me very sad\n *\n * React may feel like a drug\n * Until you find the next bug\n *\n * by @zbuster05\n * */\n\nconst autoBind = require('auto-bind/react');\n\nclass TagEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tagList: []\n        }\n    }\n\n   async setTagState() {\n        this.state.tagList = await this.props.engine.db.getTags(this.props.uid);\n        console.log(this.state.tagList)\n    }\n/*\n    componentDidMount() {\n        this.setTagState()\n    }\n*/\n    render() {\n        // TODO just do this when the tag pane is opened\n        // use on modal did present or something check quick switcher\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidPresent={() => {this.setTagState()}} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5, border: \"1px solid red\"}} cssClass={\"tag-editor\"}>\n\n                {/*Text Header*/}\n                <div className=\"TagEditor-header\">\n                    <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\n\t\t\t            <b className=\"bold-prefix\" >Tags</b> \n\t\t\t        </span>\n\n                    {/*Close Button*/}\n                    <a className=\"TagEditor-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                </div>\n                \n                {/*Like actual tag setting stuff*/}\n                <div className=\"tag-pane-container\">\n                    <div className=\"tag-list\">\n                        {this.state.tagList.map(tag => {\n                            console.log(tag.name)\n                            return (<div className=\"tag-in-list\">\n                                {tag.name} \n                            </div>)\n                        })}\n                    </div>\n                    <div className=\"tag-settings\"></div>\n                </div>\n            </IonModal>\n        )\n    }\n}\n\nexport default TagEditor\n","// A whole lotta imports\n\n// Ionic components\nimport { IonItem, IonInput, IonContent, IonGrid, IonRow, IonCol, IonSegment, IonLabel, IonButton, IonPopover } from '@ionic/react';\n\n// Detect whether is mobile\nimport { getPlatforms } from '@ionic/react';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// React Spring animation packages\nimport { Spring, animated, Keyframes } from 'react-spring/renderprops'\n\n// Cool components \nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable';\n\n// Our very own repeat UI\nimport Repeat from './Repeat';\n\n// Our very own tag editor UI\nimport TagEditor from './TagEditor';\n\n// Our very own calendar popover\nimport CalendarPopover from './CalendarPopover';\n\n// Our very own CSS\nimport './Task.css';\n\n// Oooips\nimport ReactTooltip from 'react-tooltip';\n\n// FNS date parcing utils\nconst { parseFromTimeZone } = require('date-fns-timezone')\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\n\n/*\n *\n * Hello human,\n *\n * I am a task.\n *\n * You seriously are reading the help poem about this?\n *\n * @jemoka\n *\n */\n\n\n// Our very own custom animatinos\nconst AnimationFactory = Keyframes.Spring({\n    // Open->close animation\n    hide: {\n        to: {\n            taskHeight:38, \n            taskMargin: \"2px 8px\", \n            taskBackground:\"\", \n            taskPadding: 3,\n            taskEditOpacity: 0,\n            taskEditMaxHeight: 0,\n            taskOpacity: 1,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskDisplay: \"\",\n            taskMaxHeight: 40,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n\n    },\n    // Close->open animation\n    show: {\n        to: {\n            taskHeight:38, \n            taskMargin:\"15px 25px\", \n            taskBackground:\"var(--task-selected)\", \n            taskPadding: 10,\n            taskEditOpacity: 1,\n            taskDisplay: \"\",\n            taskOpacity: 1,\n            taskEditMaxHeight: 300,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskMaxHeight: 500,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n    },\n    // Incomplete->complete animation\n    complete: [\n        {\n            to: {\n                taskMargin: \"14px 8px\", \n                taskNameDecoration: \"line-through\",\n                taskOpacity: 1,\n                taskPosition: \"\",\n            },\n            config: {\n                tension: 200,\n                friction: 25,\n                mass: 1\n            },\n\n        }, \n        {\n            to: {\n                taskMaxHeight: 0,\n                taskHeight:0, \n                taskOpacity: 0,\n                taskMargin: \"0px 8px\", \n                taskPadding: 0,\n                taskPosition: \"absolute\",\n            },\n            config: {\n                tension: 800,\n                friction: 50,\n                mass: 1\n            },\n        }\n    ],\n})\n\n// Aww sheat, here we go\nclass Task extends Component {\n\n    constructor(props) {\n        // Invoke React's constructor\n        super(props);\n\n        // Bind it good!\n        autoBind(this);\n\n        this.state = { \n            expanded: false, // are we expanded?\n            deferDate: undefined, // what's our defer date?\n            dueDate: undefined, // what's our due date?\n            name: \"\", // what's our name string?\n            desc: \"\",  // what's our description string?\n            isFlagged: false, // are we flagged?\n            isFloating: false, // are we floating? or just eating jello?\n            project:\"\", // what's our project ID?\n            tags: [], // what are the IDs of our tags?\n            decoration: \"\",  // are we \"od\" \"ds\" or just just good ol' \"\"?\n            availability: true, // are we avaliable? or are we deferred or blocked (in which case it'd be false.)\n            isComplete: false, // are we completed?\n            showRepeat: false, // is our repeat UI shown?\n            showTagEditor: false, // is our TagEditor UI shown?\n            deferPopoverShown: false, // is the defer calendar popover shown?\n            duePopoverShown: false, // is the due calendar popover shown?\n            startingCompleted: this.props.startingCompleted, // disable immediate onComplete animation for completed\n            possibleTags: this.props.datapack[0], // tags will need to be dynamically added, so\n            haveBeenExpanded: (this.props.startOpen !== undefined && this.props.startOpen !== false), // did we render the edit part yet? optimization\n            notificationPopoverShown: [false, null], // is our notification popover shown?\n        }\n        this.initialRenderDone = false; // wait for data to load to make animation decisions\n        this.me = React.createRef(); // who am I? what am I?\n        this.repeater = React.createRef(); // what's my repeater?\n        this.checkbox = React.createRef(); // what's my pseudocheck\n        this.TagEditorRef = React.createRef(); // what's my tag editor\n        this.actualCheck = React.createRef(); // what's my (actual, non-seen) checkmark\n        this.duePopover = React.createRef(); // what's my due popover?\n        this.deferPopover = React.createRef(); // what's my defer popover?\n        this.notificationPopover = React.createRef(); // what's my notification popover?\n    }\n\n    showRepeat() {this.setState({showRepeat: true})} // util func for showing repeat\n    hideRepeat() {this.setState({showRepeat: false})} // util func for hiding repeat\n\n    showTagEditor() {this.setState({showTagEditor: true})} // function for showing tag editor\n    showTageEditor() {this.setState({showTageEditor: false})}  // function for hiding tag editor\n\n    showNotificationPopover(e) {this.setState({notificationPopoverShown: [true, e.nativeEvent]})}\n\n    // Monster function to query task info TODO TODO #cleanmeup\n    async loadTask() {\n\n        // Obviously we need this, the task info\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n\n        // Setting state to update the rest of them elements\n        this.setState({\n            name: taskInfo.name, // Set name field\n            desc: taskInfo.desc, // Set task description\n            project: taskInfo.project,  // Set project ID\n            tags: taskInfo.tags, // Set tag ID array\n            isFloating: taskInfo.isFloating, // Set isFloating bool\n            isFlagged: taskInfo.isFlagged, // Set is Flagged bool\n            isComplete: taskInfo.isComplete, // Set is complete style\n            dueDate: (\n                taskInfo.due ? // If we have a due date\n                (taskInfo.isFloating ? // and if we are floating\n                    new Date(taskInfo.due.seconds*1000) : // then the due date in just... the due date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.due.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ):\n                undefined \n            ), \n            deferDate: (\n                taskInfo.defer ? // If we have a defer date\n                (taskInfo.isFloating ?  // and if we are floating\n                    new Date(taskInfo.defer.seconds*1000) : // then the defer date is just... the defer date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.defer.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ): undefined\n            )\n        });\n        this.refreshDecorations(); // flush and generate them decorations!\n        this.initialRenderDone = true;\n    }\n\n    refreshDecorations() {\n        if (this.state.dueDate) // if we gotta due date\n            if (this.state.dueDate-(new Date()) < 0) // and this kid has not done his homework\n                this.setState({decoration: \"od\"}); // give 'em a red badge\n        else if (this.state.dueDate-(new Date()) < 24*60*60*1000) // or if this kid has not done his homework a day earlier\n            this.setState({decoration: \"ds\"}); // give 'em an orange badge\n        else \n            this.setState({decoration: \"\"}); // give 'em an nothing badge\n\n        if (this.state.deferDate) // if we gotta defer date\n            if (this.state.deferDate-(new Date()) > 0) // and this kid is trying to start early\n                this.setState({availability: false}); // tell 'em it's not avaliable\n        else if (this.props.availability === true) //  otherwise, if this thing's avaliable\n            this.setState({availability: true}); // set it to be so!\n        else if (!this.props.availability) // or if my props make me disabled\n            this.setState({availability: false}); // well then you gotta follow them props, no?\n    }\n\n    componentDidMount() {\n        this.loadTask(); // load the task when we mount   \n        document.addEventListener('mousedown', this.detectOutsideClick, false); // and listen for clicks everywhere\n    }\n\n    componentWillUnmount = () => document.removeEventListener('mousedown', this.detectOutsideClick, false); // remove the listener... no memory leaks plez\n\n    toggleTask = () => this.setState(state => ({expanded: !state.expanded})); // util function to toggl a task\n    \n    closeTask() {\n        this.setState({expanded: false});\n    }\n    //closeTask = () => this.setState({expanded: false}); // util function to close a task\n\n    openTask() {\n        if (this.state.haveBeenExpanded)\n            this.setState({expanded: true});\n        else \n            this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }// util function to open a task\n\n    _explode() {\n        // You should probably be calling openTask()\n        this.initialRenderDone = true;\n        this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }\n\n    detectOutsideClick(e) {\n\n        if (this.me.current) // if we are mounted\n            if (this.me.current.contains(e.target)) // if we are clicking me\n                return; //click inside\n\n        if (this.repeater.current) // if our repeater is a thing that mounted\n            if (this.repeater.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.duePopover.current) // if our due popover is a thing that mounted\n            if (this.duePopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.deferPopover.current) // if our defer popover is a thing that mounted\n            if (this.deferPopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.notificationPopover.current) // if our notification popover is a thing that mounted\n            if (this.notificationPopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        \n        if (this.TagEditorRef.current) // if our repeater is a thing that mounted\n            if (this.TagEditorRef.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n        \n        //if (this.props.envelope) // if we have a drag envelope\n            //if (this.props.envelope.current) // if we have a drag envelope\n                //if (this.props.envelope.current.contains(e.target)) // and we are clicking inside that\n                    {/*return; //click inside*/}\n\n        // DRAG ENVELOPES ARE SUPPOSED TO PROTECT AGAINST DRAGGING, AND ARE UNIVERSAL ACROSS ALL TASKS\n        // UNCOMMENTING THIS WILL MAKE MULTIPLE TASKS OPEN AT ONCE ON UPCOMING\n\n        if (document.getElementById(\"parking-lot\").contains(e.target))\n            return;\n\n        if (this.props.onModal)\n            if (document.getElementById(\"airplane-hanger\").contains(e.target))\n                return;\n\n        if (this.state.showRepeat) // if we are showing our repeat\n            return; //click inside\n\n        if (this.state.showTagEditor) // if we are showing TagEditor\n            return; // click inside\n\n        //otherwise,\n        this.closeTask();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevState.deferDate !== this.state.deferDate) // if we updated the defer date\n            this.refreshDecorations();\n        if (prevState.dueDate !== this.state.dueDate) // if we updated the due date\n            this.refreshDecorations();\n        if (prevState.expanded !== this.state.expanded && this.state.expanded === true) {// if we opened a task for updating\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"none\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(false); // disable drag\n            this.props.gruntman.lockUpdates(); // tell gruntman to chill\n        }\n        else if (prevState.expanded !== this.state.expanded && this.state.expanded === false) { // if we closed a task\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"block\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(true); // enable drag\n            this.props.gruntman.unlockUpdates(); // tell gruntman to... grunt!\n        }\n        if (prevProps.startOpen !== this.props.startOpen && this.props.startOpen) // we are newly starting open\n            this.openTask(); // open task\n    }\n\n\n    // ready fo this?\n\n    render() {\n\n        return (\n            <div>\n\n                {/*animation factory to orchistrate animations*/}\n\n                <AnimationFactory\n\n                    native  \n\n                    state = {\n                        this.initialRenderDone ?\n                            (this.state.isComplete? // if we are complete \n                                (this.state.startingCompleted? // and we start complete \n                                    (this.state.expanded? // and we are expanded \n                                        \"show\":\"hide\") // show, otherwise, hide \n                                        :\"complete\") // if we are complete,  and don't start completed, complete. \n                                        : // if we arnt complete, \n                                this.state.startingCompleted ?  // and we start complete \n                                \"complete\" :\n                                (this.state.expanded? \"show\":\"hide\")):\"hide\"\n                    } // if we are incomplete, and we start incomplete, then show or hide based on expanded \n\n                >\n                    {animatedProps => {\n                        return (\n                            // Actual task container, now\n                            <animated.div \n                                onClick={(e)=>{\n                                    if(!this.state.expanded && e.target !== this.checkbox.current && e.target !== this.actualCheck.current && !this.props.freeze && !(this.state.isComplete&&!this.state.startingCompleted)) { \n                                        this.openTask(); // open the task\n                                    }\n                                }}\n                                className={\"task \"+(this.state.expanded?\"expanded\":\"collapsed\")} \n\n                                ref={this.me} \n\n                                style={{\n                                    minHeight: animatedProps.taskHeight, \n                                    maxHeight: animatedProps.taskMaxHeight, \n                                    margin: animatedProps.taskMargin, \n                                    background:animatedProps.taskBackground, \n                                    opacity:animatedProps.taskOpacity, \n                                    overflow: \"hidden\",\n                                    display: animatedProps.taskDisplay,\n                                    position: animated.taskPosition,\n                                    padding: animatedProps.taskPadding}}\n                            >\n\n                                {/* Chapter 0: Utility Components */}\n\n                                {/* Gotta get those on hover tips */}\n                                {/* And load up + hide the repeat UI, too! */}\n                                <Repeat tid={this.props.tid} reference={this.repeater} isShown={this.state.showRepeat} onDidDismiss={this.hideRepeat} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                {/* As well as load up + hide the tag editor!*/}\n                                <TagEditor reference={this.TagEditorRef} isShown={this.state.showTagEditor} onDidDismiss={()=>this.setState({showTagEditor: false})} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                \n                                {/* Chapter 1: Task Checkmark */}\n                                {/* Who could have thought so much code goes into a checkbox? */}\n                                <div style={{display: \"inline-block\", transform: \"translateY(-3px)\"}}>\n                                    {/* First, an invisible checkmark */}\n                                    <input \n                                        type=\"checkbox\" \n\n     ref={this.actualCheck}\n                                        id={\"task-check-\"+this.props.tid} \n                                        className=\"task-check\"\n                                        defaultChecked={this.props.startingCompleted}\n                                        onChange={()=>{\n\n                                            // If we are uncompleting a task (that is, currently task is complete) \n                                            if (this.state.isComplete) {\n                                                this.props.gruntman.lockUpdates();\n                                                // Well, first, uncomplete it\n                                                this.setState({isComplete: false})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__uncomplete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                // Whatever this is\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                            // If we are completing a task (that is, currently task is incomplete)\n                                            else if (!this.state.isComplete) {\n                                                // Lock updates so that animation could finish\n                                                this.props.gruntman.lockUpdates();\n                                                // Complete it\n                                                this.setState({isComplete: true})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__complete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                //TODO wait for animation to finish before state update??\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                        }} \n                                        style={{opacity: this.state.availability?1:0.35}}\n                                    />\n\n                                    {/* Oh yeah, that checkmark above you can't actually see */}\n                                    {/* Here's what the user actually clicks on, the label! */}\n                                    <label ref={this.checkbox} className={\"task-pseudocheck \"+this.state.decoration} id={\"task-pseudocheck-\"+this.props.tid} htmlFor={\"task-check-\"+this.props.tid}>&zwnj;</label>\n                                </div>\n\n                                {/* The animated input box */}\n                                <animated.input \n                                    defaultValue={this.state.name} \n                                    placeholder={\"LOCALIZE: Task Name\"} \n                                    onChange={\n                                        (e)=>{\n                                            // THIS. REFER TO THIS. YOU ARE HERE. STOP SEARCHING.\n                                            // :point down: is FANCYCHANGE\n\n                                            // If somebody dares to do the complicated action of task name change\n                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n\n                                            // Register a scheduler to watch for more changes\n                                            // because dang react calls onChange on every freaking change\n                                            // TODO TODO destruct all schedulers on view change\n                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                \"task.update\", // the scheduler actually updates the task\n                                                {\n                                                    uid: this.props.uid, \n                                                    tid: this.props.tid, \n                                                    query:{name: e.target.value} // setting the name to the name\n                                                }\n                                            ), `task-name-${this.props.tid}-update`) // and we will schedule it as this\n                                        }\n                                    } \n\n                                    onFocus={(e)=>{ \n                                        // open the task if its not open already\n                                        if(!this.state.expanded) { \n                                            //this.openTask(); // open the task\n                                            if (getPlatforms().includes(\"mobile\")) e.target.blur(); // blur, only if mobile to fix bugs where even in attempted readonly the cursor blurs\n                                        }\n                                    }} \n                                    className={\"task-name \"+(this.state.expanded?\"\":\"no-select\")} \n                                    readOnly={(!this.state.expanded)} \n                                    type=\"text\" \n                                    autoComplete=\"off\" \n                                    placeholder=\"LOCALIZE: Task Name\" \n                                    style={{opacity: this.state.availability?1:0.35, textDecoration: animatedProps.taskNameDecoration}} />\n\n                                {/* Task edit. The thing that slides open on edit. */}\n                                {(() => {\n                                    if (this.state.haveBeenExpanded===true)\n                                        return(\n                                            <animated.div className=\"task-edit\" style={{opacity: animatedProps.taskEditOpacity, overflow: \"hidden\",maxHeight: animatedProps.taskEditMaxHeight}}>\n\n                                                {/* First, task description field */}\n                                                <textarea \n                                                    placeholder=\"LOCALIZE:Description\" \n                                                    className=\"task-desc\" \n                                                    style={{marginBottom: 10}} \n                                                    defaultValue={this.state.desc}\n                                                    onChange={\n                                                        (e)=>{\n                                                            // Register a scheduler to deal with React's onChange\n                                                            // Search for the word FANCYCHANGE to read my spheal on this\n                                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                                \"task.update\", \n                                                                {\n                                                                    uid: this.props.uid, \n                                                                    tid: this.props.tid, \n                                                                    query:{desc: e.target.value}\n                                                                }\n                                                            ), `task-desc-${this.props.tid}-update`)\n                                                        }\n                                                    }\n                                                >\n                                                </textarea>\n\n                                                {/* Task icon set. TODO delete task */}\n                                                <div style={{display: \"inline-block\", marginBottom: 6, transform: \"translateY(-5px)\"}}>\n                                                    {/* Flagged icon */}\n                                                    <a data-tip=\"LOCALIZE: Flagged\" className=\"task-icon\" style={{borderColor: this.state.isFlagged ? \"var(--task-icon-ring-highlighted)\":\"var(--task-icon-ring)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the flagged state to the opposite of whatever it is\n                                                        // Both on the db...\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFlagged: !this.state.isFlagged}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFlagged: !this.state.isFlagged});\n\n                                                    }}><i className=\"fas fa-flag\" style={{margin: 3, color: this.state.isFlagged ? \"var(--task-icon-highlighted)\" : \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Floating icon */}\n                                                    <a data-tip=\"LOCALIZE: Floating\" className=\"task-icon\" style={{borderColor: this.state.isFloating? \"var(--task-icon-ring-highlighted)\":\"var(--task-icon-ring)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the floating state to the opposite of whatever it is\n                                                        // Both on the db... TODO flush the timezone too?\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFloating: !this.state.isFloating}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFloating: !this.state.isFloating});\n\n                                                    }}><i className=\"fas fa-globe-americas\" style={{margin: 3, color: this.state.isFloating? \"var(--task-icon-highlighted)\" : \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Repeat icon that, on click, shows repeat */}\n                                                    <a onClick={this.showRepeat} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}} data-tip=\"LOCALIZE: Repeat\"><i className=\"fas fa-redo\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}} ></i></a>\n\n                                                    {/* Notification icon that, on click, shows notify popover */}\n                                                    <IonPopover\n                                                        showBackdrop={false}\n                                                        isOpen={this.state.notificationPopoverShown[0]}\n                                                        cssClass='notif-popover'\n                                                        onDidDismiss={e => this.setState({notificationPopoverShown: [false, null]})}\n                                                        event={this.state.notificationPopoverShown[1]}\n                                                        ref={this.notificationPopover}\n                                                    >\n                                                        <div>\n                                                            <div className=\"notification-popover-item\">Cancel Notification</div>\n                                                            <div className=\"notification-popover-item\">Change Notification</div>\n                                                        </div>\n                                                    </IonPopover>\n                                                    <a onClick={this.showNotificationPopover} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", marginRight: 20, cursor: \"pointer\"}} data-tip=\"LOCALIZE: Repeat\"><i className=\"fas fa-bell\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5.5px)\"}} ></i></a>\n\n                                                    {/* TagEditor icon that shows TagEditor on click*/}\n                                                    <a onClick={this.showTagEditor} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", marginRight: 20, cursor: \"pointer\"}} data-tip=\"LOCALIZE: Freaking TagEditor\"><i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}}></i></a>\n                                                    {/*<div className=\"task-icon\" style={{borderColor: \"var(--task-checkbox-feature-alt)\", marginRight: 20}}><a className=\"fas fa-globe-americas\" style={{margin: 3, color: \"var(--task-textbox)\", fontSize: 13, transform: \"translate(2.5px, -0.5px)\"}}></a></div>*/}\n                                                </div>\n\n\n                                                {/* Task date set */}\n                                                <div style={{display: \"inline-block\", marginBottom: 8}}>\n\n                                                    {/* Defer date container */}\n                                                    <div style={{display: \"inline-block\", marginRight: 10, marginBottom: 5, marginLeft: 6}}>\n                                                        {/* The. Defer. Date. */}\n                                                        <i className=\"fas fa-play\" data-tip=\"LOCALIZE: Defer Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        <CalendarPopover reference={this.deferPopover} uid={this.props.uid} engine={this.props.engine} isShown={this.state.deferPopoverShown} onDidDismiss={()=>this.setState({deferPopoverShown: false})} useTime initialDate={this.state.deferDate} onDateSelected={(d)=>{\n                                                            this.props.gruntman.do(\n                                                                \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                            )\n                                                            this.setState({deferDate: d});\n\n                                                        }}/>\n                                                        {(() => {\n                                                            {/* The. Defer. Date. Input. */}\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\"))} defaultValue={value}  onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // DATEHANDLING is here too. If you are looking for that, stop searching\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value); // NLP that date!\n                                                                            if (d) this.setState({deferDate: d}); // we we got a valid date, update the calendar UI\n                                                                            if (d) // and update the database too!\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n                                                                        }, `task-defer-${this.props.tid}-update`)\n                                                                    }} onFocus={(e) => {\n                                                                        if (getPlatforms().includes(\"mobile\"))\n                                                                            this.setState({deferPopoverShown: true})\n                                                                        else {\n                                                                            onClick();\n                                                                            e.target.focus();\n                                                                        }\n\n                                                                    }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // TIMEHANDLING is here. If you are searching for that, it's here.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds()); // TODO make this with the onChange API\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.deferDate}\n                                                                    portalId={this.props.onModal?\"airplane-hanger\":\"parking-lot\"}\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({deferDate: date});\n\n                                                                        // No longer needed. State updates handle decoration udpates. Kept here for decorative purposes:\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                    showTimeInput\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n\n                                                    <div style={{display: \"inline-block\", marginBottom: 5, marginLeft: 6}}>\n                                                        <i className=\"fas fa-stop\" data-tip=\"LOCALIZE: Due Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        {/* Due date popover */}\n                                                        <CalendarPopover reference={this.duePopover} uid={this.props.uid} engine={this.props.engine} isShown={this.state.duePopoverShown} onDidDismiss={()=>this.setState({duePopoverShown: false})} useTime initialDate={this.state.dueDate} onDateSelected={(d)=>{\n                                                            this.props.gruntman.do(\n                                                                \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                            )\n                                                            this.setState({dueDate: d});\n\n                                                        }}/>\n                                                        {(() => {\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\")) ? true : false} defaultValue={value} onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // Search for the word DATEHANDLING for what the heck the code actually does\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value);\n                                                                            if (d) this.setState({dueDate: d});\n                                                                            if (d)\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n\n                                                                        }, `task-due-${this.props.tid}-update`)\n                                                                    }\n                                                                        } onFocus={(e) => {\n                                                                            if (getPlatforms().includes(\"mobile\"))\n                                                                                this.setState({duePopoverShown: true})\n                                                                            else {\n                                                                                onClick();\n                                                                                e.target.focus();\n                                                                            }\n                                                                        }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // Search for TIMEHANDLING for notes on time handling.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds());\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.dueDate}\n                                                                    portalId={this.props.onModal?\"airplane-hanger\":\"parking-lot\"}\n                                                                    onChange={date => this.setState({dueDate: date})}\n                                                                    showTimeInput\n                                                                    isClearable\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({dueDate: date});\n\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    {/* Task project container */}\n                                                    <span className=\"task-project-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-list-ul\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, marginRight: 5, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Project select */}\n                                                        <Select \n                                                            options={this.props.datapack[1]}\n                                                            className='task-project'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            styles={{\n                                                                // Fixes the overlapping problem of the component\n                                                                menuPortal: provided => ({ ...provided, zIndex: \"99999 !important\" })\n                                                            }}\n                                                            menuPortalTarget={document.body}\n                                                            value={this.props.datapack[1].filter(option => option.value === this.state.project)}\n                                                            onChange={(e)=>{\n                                                                {/* :point up: filter for only options with this project and set that to be the value */}\n                                                                {/* Actually update the project */}\n                                                                this.props.gruntman.do(\"task.update__project\", { uid: this.props.uid, tid: this.props.tid, oldProject: this.state.project===\"\"?undefined:this.state.project, project: (e?e.value:\"\")})\n                                                                {/* And set the state, too! */}\n                                                                this.setState({project:(e?e.value:\"\")});\n                                                            }}\n                                                        />\n                                                    </span>\n                                                    {/* Task tag container */}\n                                                    <span className=\"task-tag-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Tag select */}\n                                                        <CreatableSelect\n                                                            options={this.props.datapack[0]}\n                                                            className='task-tag'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            isMulti\n                                                            styles={{ menuPortal: base => ({ ...base, zIndex: \"99999 !important\" }) }}\n                                                            menuPortalTarget={document.body}\n                                                            value={this.props.datapack[0].filter(option => this.state.tags.includes(option.value))}\n                                                            onChange={(newValue, actionMeta) => {\n                                                                let view = this;\n                                                                let tids = newValue?newValue.map(async function (e) { // for each tag\n                                                                    if (e.__isNew__) { // if it's a new tag\n                                                                        let tagID = (await view.props.gruntman.do( // create it!\n                                                                            \"tag.create\",\n                                                                            {\n                                                                                uid: view.props.uid,\n                                                                                name: e.label,\n                                                                            }, \n                                                                        )).id;\n                                                                        let originalTags = view.state.possibleTags; // get tags\n                                                                        originalTags.push({label: e.label, value: tagID}); // add our new tag\n                                                                        view.setState({possibleTags: originalTags}); // sax-a-boom!\n                                                                        return tagID;\n                                                                    } else\n                                                                        return e.value;\n                                                                }):[]; // find the correct tags sets, or set it to an empty set\n                                                                Promise.all(tids).then(tagIDs => {\n                                                                    this.setState({tags: tagIDs}); // set the state\n                                                                    this.props.gruntman.do(\n                                                                        \"task.update\", \n                                                                        {\n                                                                            uid: this.props.uid, \n                                                                            tid: this.props.tid, \n                                                                            query:{tags: tagIDs} // set a taskID\n                                                                        }\n                                                                    )\n                                                                });\n                                                            }}\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </animated.div>\n                                        )\n                                })()}\n                            </animated.div>\n                        )}\n                    } \n                </AnimationFactory>\n            </div >\n\n\n        )\n    }\n}\n\nexport default Task;\n\n","//\"use strict\";\n\n// Initialize Firebase Application\n// TODO TODO TODO !!!! Change this on deploy\n\nlet storageType;\nlet sqliteDB;\nlet memoryDB;\nlet firebaseDB, fsRef;\nlet requestRefresh;\n\nconst { FilesystemDirectory, FilesystemEncoding, Plugins } = require('@capacitor/core');\nconst { Device, Filesystem } = Plugins;\n\nlet readiness;\n\nconst initStorage = (payload, ...features) => {\n /*   // Firebase App (the core Firebase SDK) is always required and*/\n    //// must be listed before other Firebase SDKs\n    // const firebase = require(\"firebase/app\");\n\n    let loaders = [];\n\n    if (features.includes(\"firebase\")) {\n        const obj = require(\"./../secrets.json\");\n        if (process.env.NODE_ENV === \"development\")\n            payload.firebase.initializeApp(obj.dbkeys.debug);\n        else if (process.env.NODE_ENV === \"production\")\n            payload.firebase.initializeApp(obj.dbkeys.deploy);\n        [ firebaseDB, fsRef ] = [payload.firebase.firestore(), payload.firebase.firestore];\n        firebaseDB.enablePersistence({synchronizeTabs: true}).catch(console.error);\n        loaders.push(new Promise(function(resolve) {\n            return resolve(fsRef);\n        }));\n    } \n\n    if (features.includes(\"sqlite\")) {\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        // TODO: TODO: SQLITE 3!!\n        //const sqlite3 = require('sqlite3').verbose();   // see https://www.sqlitetutorial.net/sqlite-nodejs/connect/\n        const { FilesystemDirectory, Plugins } = require('@capacitor/core');\n        const { Device } = Plugins;\n        loaders.push((async function() {\n            const isMobile = (await Device.getInfo()).platform !== \"web\";\n            const dbRoot = isMobile ? FilesystemDirectory.Data : process.resourcesPath;\n            const dbPath = '/condution.db'; // TODO: use capacitor storage api\n            //sqliteDB = new sqlite3.Database(dbRoot+dbPath, (e)=>{if(e) console.error(e)});\n            return sqliteDB;\n        })());\n    } \n\n    if (features.includes(\"json\")) {\n        loaders.push((async function() {\n            const dbRoot = FilesystemDirectory.Data;\n            const dbPath = 'condution.json'; // TODO: use capacitor storage api\n            let contents;\n            try {\n                contents = (await Filesystem.readFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    encoding: FilesystemEncoding.UTF8\n                })).data;\n            } catch(e) {\n                contents = \"{}\";\n                await Filesystem.writeFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    data: JSON.stringify({}),\n                    encoding: FilesystemEncoding.UTF8\n                })\n            }\n            //contents = `{\"users\":{\"hard-storage-user\":{\"projects\":{\"asenuoth239p8\":{\"name\":\"bontehu\",\"is_sequential\":false,\"order\":0,\"parent\":\"\",\"top_level\":true, \"children\": []}}}}}`;\n            memoryDB = JSON.parse(contents);\n        })());\n    }\n\n    readiness = Promise.all(loaders);\n    return readiness;\n};\n\nconst useDb = (db, refresher=()=>{}) => {\n    storageType = db;\n    requestRefresh = refresher; // generate fresh refresher\n    return readiness;\n};\n\nconst [cRef, flush] = (() => {\n    //const { Plugins } = require('@capacitor/core');\n    //const { Network } = Plugins;\n\n    let cache = new Map();\n    let unsubscribeCallbacks = new Map();\n\n\n    function flush() {\n        /*\n         * Nukes the cache\n         *\n         * Used to log people out\n         *\n         * @return none\n         *\n         */\n        cache = new Map();\n        unsubscribeCallbacks = new Map();\n    }\n\n    function getFirebaseRef(path) {\n        /*\n         * Get a database reference.\n         *\n         * @param   path        A valid path array, see below.\n         * @return  reference   The generated reference\n         *\n         * Examples of valid path arrays:\n         *  [`collection/${docName}`] => DocumentReference\n         *  [\"collection\", \"docName\"] => DocumentReference\n         *  [\"collection\", \"docName\", \"collection\"] => CollectionReference\n         *  [\"collection\", [\"query\", \"params\"], [\"more\", \"params\"]] => Query\n         *  [\"collection\", [\"query\", \"params\"], \"docname\"] => DocumentReference\n         */\n        let ref = firebaseDB;\n        // special handling for first collection from root\n        console.assert(typeof path[0] === 'string');\n        if (path[0].includes('/'))\n            ref = ref.collectionGroup(path[0]);\n        else\n            ref = ref.collection(path[0]);\n        // generic handling\n        for (let nav of path.slice(1)) {\n            if (typeof nav === 'string') {\n                if (ref instanceof fsRef.DocumentReference) {\n                    ref = ref.collection(nav);\n                } else if (ref instanceof fsRef.Query) {\n                    ref = ref.doc(nav);\n                } else {\n                    throw new Error(\"Unknown reference\", ref.toString());\n                }\n            } else if (Array.isArray(nav)) {                // query, TODO shouldn't need to query\n                if (ref instanceof fsRef.Query) {\n                    ref = ref.where(...nav);\n                } else {\n                    throw new Error(\"Cannot query with\", nav.toString());\n                }\n                console.assert(ref instanceof fsRef.Query)\n            } else {\n                throw new Error(\"Cannot parse\", nav.toString());\n            }\n        }\n        return ref;\n    }\n\n    function generateRandomString() {\n        /*\n         * Generates a random string. Used for Ids.\n         * THIS IS NOT CRYPTOGRAPHICALLY SECURE\n         *\n         * @return  string  The random string\n         *\n         */\n\n        return Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2);\n    }\n\n    async function cachedRead(path) {   // TODO: make this also use hard storage, dupe for cachedSet\n        /*\n         * Get a snapshot from the cache.\n         *\n         * @param   path    The valid path to the reference\n         * @return  any     The result of calling `.get()` on the database reference\n         *\n         * Logic:\n         *  If the path is cached, return from cache.\n         *  Else, register a snapshot listener to update the cache\n         *      and return the newly cached value.\n         */\n        const TODOstring = JSON.stringify(path);        //  strigify to hash array\n        if (!cache.has(TODOstring)) {                   //  if path string isn't cached\n            // TODO: comment this out someday \\/\n            const ref = getFirebaseRef(path);           //  get the reference from the database\n            cache.set(TODOstring, ref.get());           //  save result in cache\n            unsubscribeCallbacks.set(TODOstring,        //  TODO: comment this code, someday\n                ref.onSnapshot({\n                    error: console.trace,\n                    next: (snap) => {\n                        cache.set(TODOstring, snap);\n                        requestRefresh();\n                    }\n                })\n            );\n        }\n        return await cache.get(TODOstring);\n    }\n\n    let diskJSONDB = function() {\n        const dbRoot = FilesystemDirectory.Data;\n        const dbPath = 'condution.json'; // TODO: use capacitor storage api\n        let read = async function() {\n            let contents = (await Filesystem.readFile({\n                path: dbPath,\n                directory: dbRoot,\n                encoding: FilesystemEncoding.UTF8\n            })).data;\n            memoryDB = JSON.parse(contents);\n        }\n\n        let write = async function() {\n            await Filesystem.writeFile({\n                path: dbPath,\n                directory: dbRoot,\n                data: JSON.stringify(memoryDB),\n                encoding: FilesystemEncoding.UTF8\n            })\n        }\n\n        return {read, write};\n    }()\n\n    async function storageRead(path) { \n        /*\n         * Read value in storage\n         *\n         * @param   path    The path to a reference\n         * @return  DocumentSnapshot    A snapshot of documents\n         *\n         */\n\n\n        let pointer;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Get an object pointer that's an option that\n             * looks like a noSQL object.  See JSON implimentation \n             * for tips and tricks.\n             *\n             */\n\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.some(i => {\n                pointer = pointer[i];\n                return (pointer === undefined); // https://stackoverflow.com/questions/2641347/short-circuit-array-foreach-like-calling-break\n            });\n        }\n\n        let parsed = (function parsePointer(pointer) {\n            /*\n             * Parse a dbPointerObject\n             *\n             * @param    pointer   A Javascript Object containing data\n             * @return   DocumentSnapshot   A Firebase-like Doc Snapshot\n             *\n             * TODO: also make this work for single documents, not just collections\n             */\n\n            let docRefs = [];\n            for (const docID in pointer) \n                docRefs.push({id: docID, data: ()=>Object.assign({}, pointer[docID]), exists: true}); // TODO TODO Better way to make JS objects immutable?\n            return {docs: docRefs}\n        })(pointer)\n        return parsed;\n    }\n\n    async function storageAdd(path, payload) {\n        /* \n         * Add a value\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            id = generateRandomString();\n            while (pointer[id]) id = generateRandomString();\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[id] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageDel(path) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @return  none\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            delete pointer[task];\n            await diskJSONDB.write();\n        }\n    }\n\n    async function storageSet(path, payload) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[task] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageUpdate(path, payload) {\n        /* \n         * Object.assigns the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer = Object.assign(pointer, payload);\n            await diskJSONDB.write();\n        }\n        return Object.assign(payload, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n\n\n    //async function storageSet(path, value) {\n        /*\n         * Set a value in the storage.\n         *\n         * @param   path    The valid path to reference\n         * @param   value   The value to set it to\n         * @return  none\n         */\n    //    const TODOstring = JSON.stringify(path);    // stringify array, please change someday\n    //    // update storage\n    //    if (decideWhetherToUseHardStorage())\n    //\n    //    // maintain the cache\n    //    if (!cache.has(TODOstring)) {\n    //        cache.set();\n    //    }\n    //    const ref = getFirebaseRef(path);\n    //    ref.set(value);\n    //    cache.set(stringPath, value)\n    //}\n\n    function cacheRef(path) {\n        /*\n         * Get a reference wrapper that forces cache hits.\n         * This function will be exposed to the outside world.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(getFirebaseRef(path));\n        \n        \n        return Object.assign(\n            getFirebaseRef(path),               //  default methods from firebase reference\n            { get: () => cachedRead(path) }     //  read on get, read from cache if available\n        );\n    }\n    function TODO() { console.error('bad news bears'); }\n    function storageRef(path) {\n        /*\n         * Get a reference wrapper that acts as a database blackbox.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(ref.add, ref.doc, ref.docs);\n        return {\n            id: TODO,\n            add: (payload) => storageAdd(path, payload),\n            //doc: not here, right?,\n            //docs: not here, rgiht?, // TODO: docs.filter\n            get: () => storageRead(path),\n            set: (payload) => storageSet(path, payload),\n            update: (payload) => storageUpdate(path, payload),\n            delete: () => storageDel(path),\n        };\n    }\n\n    function dispatch(...path) {\n        /* \n         * Get the currently initialized storageRef\n         *\n         * @return  storageRef/CacheRef\n         *\n         */\n\n        switch (storageType) {\n            case \"firebase\":\n                return cacheRef(path);\n            default:\n                return storageRef(path);\n        }\n    }\n\n    return [dispatch, flush];\n})();\n\nexport default {__init__:initStorage, cRef, flush, useDb};\n\n"],"sourceRoot":""}