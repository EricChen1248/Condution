{"version":3,"sources":["pages/Components/CalendarPopover.jsx","pages/Components/Sortable.jsx","pages/Home.jsx","pages/Upcoming.jsx","pages/Calendar.jsx","pages/Components/CalendarTasklistPopover.jsx","pages/Completed.jsx","pages/Perspectives.jsx","pages/Components/PerspectiveEditor.jsx","pages/Projects.jsx","pages/Components/FloatingActionButton.jsx","pages/Components/QuickSwitcher.jsx","pages/Components/KeybindManager.jsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","pages/Components/Repeat.jsx","pages/Components/TagEditor.jsx","pages/Components/Task.jsx","backend/src/ObjectManager.js","backend/src/PerspectiveManager.js","backend/CondutionEngine.js","gruntman.js","pages/Auth.jsx","pages/Loader.jsx","pages/Onboarding.jsx","App.jsx","serviceWorker.ts","index.jsx","backend/src/DBManager.js"],"names":["CalendarUnit","props","useState","initialDate","Date","dateSelected","setDateSelected","currentMonth","getMonth","currentYear","getFullYear","firstDayMonth","lastDayMonth","lastDayLastMonth","firstDayDayname","getDay","__util_calculate_gradient","left","right","gradientAmount","color1","color2","ratio","hex","x","toString","length","r","Math","ceil","parseInt","substring","g","b","daysBefore","Array","map","_","i","type","content","getDate","daysAfter","contentDays","heat","setHeat","prototype","max","apply","this","useEffect","a","Map","hm","engine","db","selectTasksInRange","uid","forEach","val","date","due","seconds","setHours","time","has","set","get","values","from","style","getComputedStyle","document","body","hexes","e","getPropertyValue","trim","slice","keys","id","display","className","backgroundColor","border","onClick","onDateSelected","disableOnclick","toLocaleString","gruntman","localizations","getLanguage","weekday","month","useTime","defaultValue","toLocaleTimeString","onKeyPress","d","chrono","target","value","key","newDate","getHours","getMinutes","getSeconds","clbtd","marginRight","float","onDidDismiss","CalendarPopover","ref","reference","isOpen","isShown","borderRadius","cssClass","SortableTaskList","activelyDragging","setActivelyDragging","order","useRef","moveApplied","currentIndex","dragEnvelope","dragEnabled","setDragEnabled","objRefs","list","React","createRef","getAnimationDestinationFromIndex","activeIndex","mY","currentOrder","noAnim","down","indx","y","indexOf","zIndex","config","tension","friction","mass","clamp","immediate","useSprings","current","springs","bind","useDrag","args","index","movement","movementY","first","last","tap","includes","onSortStart","sorted","sortedID","moveBy","floor","abs","newIndex","splice","setTimeout","filter","do","items","onSortEnd","newOrder","drag","delay","filterTaps","enabled","anim","div","position","cursor","transform","interpolate","onClickCapture","stopPropagation","tid","prefix","datapack","availability","envelope","SortableProjectList","item","activeTaskID","activeTaskRef","opacity","paginate","history","push","possibleProjects","autoBind","require","isPlatform","createHashHistory","createBrowserHistory","Home","to","setState","itemSelected","state","projects","perspectives","undefined","abtibRef","menu","url","URL","uri","pathname","split","hash","refresh","prevProps","prevState","snapshot","sends","getTopLevelProjects","tlp","getPerspectives","psp","Router","IonReactHashRouter","IonReactRouter","keybindRef","abtib","noBounce","forceOverscroll","contentId","mode","window","navigator","platform","process","fontSize","icon","chevronForwardCircle","upcoming","checkmarkCircle","completed","calendar","close","npid","pid","f","paddingRight","name","proj","listOutline","dispatch","operation","logout","render","exact","path","displayName","match","params","menuRefresh","options","create","Component","Upcoming","tomorrow","setDate","greetings","greetings_setA","inbox","dueSoon","possibleTags","possibleProjectsRev","possibleTagsRev","projectSelects","tagSelects","projectDB","timeline","timelineShown","greeting","random","updatePrefix","registerRefresher","getItemAvailability","avail","getInboxandDS","pandt","getProjectsandTags","pPandT","projectList","tagsList","label","views","pdb","topLevels","getProjectStructure","buildSelectString","p","level","children","isSameDateAs","pDate","refrenceDate","tcontent","task","halt","overflow","onTouchMove","preventDefault","marginLeft","color","fontWeight","overflowY","flexGrow","unsorted","ds","marginTop","hide","show","timelineItem","toLocaleDateString","year","day","paddingLeft","paddingTop","refreshed","CalPageBigOllendar","isPopoverShown","setIsPopoverShown","shownList","setShownList","names","ids","nameList","idList","height","width","currentDate","marginBottom","Calendar","today","taskList","popoverIsVisible","repeater","showEdit","endDate","effect","offset","top","isMobile","getTime","class","withGetScreen","mobileLimit","tabletLimit","shouldListenOnResize","CalendarTasklistPopover","refs","onModal","TaskObject","contents","Completed","tasksShown","taskCats","rendering","taskArr","getCompletedTasks","full","cat","startingCompleted","handleFetchMore","Perspectives","perspectiveName","perspectiveQuery","perspectiveAvail","perspectiveTord","possiblePerspectives","perspectiveObject","perspective","calc","query","tord","registerScheduler","payload","then","hideEdit","updateName","startHighlighted","onChange","persist","data-tip","borderColor","margin","handleDelete","withRouter","PerspectiveEdit","inputEvent","focus","console","log","alert","onWillPresent","lockUpdates","unlockUpdates","alignItems","whiteSpace","perspective_build_callout","minWidth","placeholder","handleQueryChange","perspective_include","interface","onIonChange","detail","psp_rem","psp_avil","psp_flg","perspective_order","psp_abd","psp_dbd","psp_abe","psp_dbe","psp_alpha","handleHelp","Projects","parent","is_sequential","currentProject","activeTask","cProject","parentProj","overflowX","result","_explode","nb_at","nb_ap","ABTIB","qa_content","isExpanded","setisExpanded","isSaving","setisSaving","useSpring","input","readOnly","onFocus","event","onBlur","onKeyUp","taskName","dateInfo","defer","end","start","replace","text","npobj","blur","QuickSwitcher","filteredList","direction","selected","prop_store","projs","searcher","currentlySelected","processItems","getProjs","subs","mod","Object","entries","setFocus","searchTerm","toLowerCase","o","keyname","selectedItem","filterItems","slicedSelectedItem","updateIdx","goBack","goForward","dismiss","idx","len","ctrlKey","scrollIntoView","behavior","block","qs_show","animated","autoFocus","onDidPresent","focusRef","spellcheck","debounce","onKeyDown","handleKeydown","Keybinds","bindings","sidebar_switcher","sidebar_list","sidebar_incrimentor","focusElement","globalBindings","manageQs","sidebar_index","that","num","loca","sidebarItem","arraysAreIdentical","arr1","arr2","combo","Mousetrap","bindGlobal","unbind","setSidebarIndex","webpackAsyncContext","req","__webpack_require__","Promise","resolve","Error","code","module","exports","Repeat","rule","advanced","on","getTaskInformation","taskInfo","repeat","loadTask","repeat_word","repeat_every_day","repeat_every_week","repeat_every_month","repeat_every_year","repeat_datework_weekname_m","repeat_datework_weekname_tu","repeat_datework_weekname_w","repeat_datework_weekname_th","repeat_datework_weekname_f","repeat_datework_weekname_sa","repeat_datework_weekname_su","newOn","elem","oldOn","TagEditor","tagList","getTags","setTagState","tag","parseFromTimeZone","AnimationFactory","Keyframes","Spring","taskHeight","taskMargin","taskBackground","taskPadding","taskEditOpacity","taskEditMaxHeight","taskOpacity","taskNameDecoration","taskPosition","taskDisplay","taskMaxHeight","reset","complete","Task","componentWillUnmount","removeEventListener","detectOutsideClick","toggleTask","expanded","deferDate","dueDate","desc","isFlagged","isFloating","project","tags","decoration","isComplete","showRepeat","showTagEditor","deferPopoverShown","duePopoverShown","haveBeenExpanded","startOpen","notificationPopoverShown","notificationCalendarShown","hasNotification","initialRenderDone","me","checkbox","TagEditorRef","actualCheck","duePopover","deferPopover","notificationPopover","notificationCalender","showTageEditor","nativeEvent","toISOString","timeZone","timezone","checkNotification","refreshDecorations","addEventListener","contains","getElementById","closeTask","getPlatforms","openTask","native","animatedProps","freeze","minHeight","maxHeight","background","padding","hideRepeat","defaultChecked","htmlFor","autoComplete","nt","textDecoration","cancelNotification","scheduleNotification","showBackdrop","notifPermissionGranted","showNotificationPopover","Intl","DateTimeFormat","resolvedOptions","DateInput","TimeInput","portalId","showTimeInput","dateFormat","customTimeInput","customInput","isClearable","classNamePrefix","styles","menuPortal","provided","menuPortalTarget","option","oldProject","isMulti","base","newValue","actionMeta","view","tids","__isNew__","tagID","originalTags","all","tagIDs","cRef","dbManager","util","select","compare","lhs","cmp","rhs","TypeError","requirements","doc","dat","data","any","atLeast","threshold","counter","atMost","debug","arg","trace","userID","snap","docs","catch","err","error","getTasksWithQuery","taskDocs","getInboxTasks","sort","inboxDocs","getDSTasks","available","wrt","dsTime","dsDocs","dueTasks","min","returnFull","tasks","avaliable","warn","ibt","dsTasks","prev","cache","dst","avalibility","dstWithoutIbt","taskID","paramName","ti","projectIdByName","projectNameById","projectsSorted","exists","top_level","projElem","sortOrder","ret","tagIdByName","tagNameById","pInfobyName","pInfobyID","ps","pstp","projectID","updateQuery","update","modifyTask","newTask","taskObj","ibtL","projL","add","newProject","projObj","size","obj","hasOwnProperty","newPerspective","pstObj","newTag","tagName","dissociateTask","dump","t","originalChildren","associateTask","assosProjID","willDissociateTask","taskData","delete","perspectiveID","deleteProject","struct","cpLtTasks","cpLt","concat","recursive","itemID","recursivelyGetBlocks","bstat","projStruct","child","assign","tlps","blockstatus","blocks","completedTasks","taskItems","tsk","cpSorted","taskA","taskB","completeDate","yesterday","thisWeek","thisMonth","setMonth","tasksToday","tsks","tasksYesterday","tasksWeek","tasksMonth","evenBefore","tz","username","cdyrslf","npd","od","odid","dsID","nice","sequential","blocked","click","pspDir","pspsp","specific","sp","promotion","online","dis","patreon","yiipee","getTasks","removeParamFromTask","modifyProject","modifyPerspective","completeTask","associateProject","dissociateProject","deleteTask","deletePerspective","getDSRow","deleteTag","onBoard","perspectiveHandler","cgs","taskFilter","taskCaptureGroup","logicCaptureGroup","globalCaptureGroup","clear","lastIndex","parseTaskCaptureGroup","str","parseSpecialVariables","vr","compileTask","pPaT","additionalFilter","queries","taskCache","antiCache","dbObj","pS","compileLogicCaptureGroup","ltr","taskCompValues","util_datesequal","dateA","dateB","pStr","pRes","fquery","logicSort","exec","test","Set","flat","taskObjs","aval","it","dbRefObj","__init__","use","useDb","dbFuncs","pspObj","flush","LocalNotifications","Plugins","Permissions","Gruntman","requestPermission","granted","platforms","addListener","handleNotificationAction","hashCode","s","reduce","charCodeAt","refresher","callbackRefresherReleased","conflictResolution","releaseTimeout","doers","macro","applyOrder","ntObject","ntID","tInfo","update__project","update__uncomplete","update__complete","rRule","defDistance","rOn","dow","oDow","setFullYear","message","TODO","update__name","projectName","update__pstate","associate","dissociate","pObj","npspid","update__perspective","delete__perspective","undoers","backlog","undolog","taskLog","canUndo","schedulers","updateLock","updateInterval","secretLocalizedStrings","clearTimeout","interval","title","schedule","notifications","at","sound","attachments","extra","action","notification","actionId","cancel","expectedID","getPending","pending","needed","callback","identifier","wait","actionName","bypassUpdates","isUndo","unsafe_FORCE_UPDATES","actionID","nodes","shift","resources","Auth","Storage","greetings_setB","authMode","showExtra","firebase","setPersistence","Persistence","LOCAL","signInWithEmailAndPassword","$","currentUser","emailVerified","service","addClass","problem","createUserWithEmailAndPassword","html","sendEmailVerification","updateProfile","reload","sendPasswordResetEmail","welcome_auth_msg","nowirres","greeting_auth_normal","what_should_we","email","password","doLogin","doCreate","doRecover","dispatchCreate","need_and_do","need_verify","need_and_login","remembered","rec_pswd","login","newuser","lds","verifem","lerec","proceed","doLocal","ulac","LoadSpinner","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loader","justifyContent","isStopped","isPaused","bottom","Onboarding","maxWidth","setupConfig","swipeBackEnabled","App","LocalizedStrings","en","zh","de","matchMedia","matches","removeClass","Engine","dbType","onAuthStateChanged","user","requestRefresh","authDispatch","onboarding_content","signOut","isError","Boolean","location","hostname","ReactDOM","serviceWorker","ready","registration","unregister","storageType","memoryDB","firebaseDB","fsRef","readiness","FilesystemDirectory","FilesystemEncoding","Filesystem","Device","unsubscribeCallbacks","getFirebaseRef","assert","collectionGroup","collection","nav","DocumentReference","Query","isArray","where","generateRandomString","TODOstring","JSON","stringify","onSnapshot","next","diskJSONDB","dbRoot","Data","read","readFile","directory","encoding","UTF8","parse","write","writeFile","pointer","some","parsed","docRefs","docID","round","pop","cacheRef","cachedRead","storageRef","storageAdd","storageRead","storageSet","storageUpdate","storageDel","loaders","features","initializeApp","dbkeys","deploy","firestore","enablePersistence","synchronizeTabs","getInfo","resourcesPath","sqliteDB","dbPath"],"mappings":"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","file":"static/js/main.a5ca96f4.chunk.js","sourcesContent":["import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport '../Calendar.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\n\nfunction CalendarPopover(props) {\n    let [dateSelected, setDateSelected] = useState(props.initialDate ? props.initialDate : new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    \n    let [heat, setHeat] = useState({});\n    \n \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    \n    useEffect(()=>{\n        (async function() {\n            let map = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([_, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n            });\n            let values = Array.from(map.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]=hexes[i]});\n            }\n            setHeat(hm);\n        })();\n    },[dateSelected, props.initialDate]);\n\n    // @NEEDLOC days of the week\n    return (\n        <IonModal ref={props.reference} isOpen={props.isShown} onDidDismiss={() => {if(props.onDidDismiss) props.onDidDismiss()}} style={{borderRadius: 5}} cssClass=\"calendar-popover\">\n            <div id=\"calendar-page-calendar-wrapper\" style={{display: \"inline-block\", ...props.style}}>\n                <div id=\"calendar-wrapper-popover\">\n                    <div id=\"calendar-daterow\">\n                        <span className=\"calendar-daterow-item\">Sun</span>\n                        <span className=\"calendar-daterow-item\">Mon</span>\n                        <span className=\"calendar-daterow-item\">Tues</span>\n                        <span className=\"calendar-daterow-item\">Wed</span>\n                        <span className=\"calendar-daterow-item\">Thu</span>\n                        <span className=\"calendar-daterow-item\">Fri</span>\n                        <span className=\"calendar-daterow-item\">Sat</span>\n                    </div>\n                    <div id=\"calendar-container\">\n                        {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                        <span className={`calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                            backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                                `#${heat[i.content]}` :\n                                \"inherit\"),\n                            border:  (i.type === \"actual\" && i.content === dateSelected.getDate()) ? \n                            \"2px solid var(--decorative-light)\" :\n                            \"0\"}} \n\n                            onClick={(e)=>{\n\n                                let date;\n                                if (i.type === \"pre\")\n                                    date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                                if (i.type === \"actual\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                                if (i.type === \"post\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                                setDateSelected(date);\n                                if (props.onDateSelected && !props.disableOnclick)\n                                    props.onDateSelected(date);\n                            }}>{i.content}</span>\n                        )}\n                    </div>\n                    <div id=\"calendar-infopanel\">\n                    <div className=\"calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                    <div className=\"calendar-infopanel-datename\">{dateSelected.toLocaleString('en-us', {  weekday: 'long' })}</div>\n                    <div className=\"calendar-infopanel-month\">{dateSelected.toLocaleString('en-us', { month: 'long' })}</div>\n                    <div className=\"calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                    </div>\n                    {(()=>{\n                        if (props.useTime)\n                            return <div className=\"calendar-timeunit\">   \n                                <span className=\"calendar-time\">\n                                    Time\n                                </span>\n                                <input\n                                    className=\"calendar-timebox\"\n                                    defaultValue={dateSelected.toLocaleTimeString()}\n                                    onKeyPress={e => {\n                                        // TIMEHANDLING is here. If you are searching for that, it's here.\n                                        // But anyway, on change, parse the time\n                                        let d = chrono.parseDate(e.target.value); //TODO bad?\n                                        // ...and throw away the date \n                                        if (d && e.key === \"Enter\") {\n                                            let newDate = new Date(dateSelected.getFullYear(), dateSelected.getMonth(), dateSelected.getDate(), d.getHours(), d.getMinutes(), d.getSeconds());\n                                            setDateSelected(newDate); // TODO make this with the onChange API\n                                            e.target.value = newDate.toLocaleTimeString();\n                                            if (props.onDateSelected && !props.disableOnclick)\n                                                props.onDateSelected(newDate);\n\n                                        }\n                                    }}\n                                />\n                            </div>\n                    })()}\n                    <div id=\"calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(new Date());\n\n                    }}>{props.gruntman.localizations.clbtd}</div>\n                        <div className=\"calendar-today\" style={{marginRight: 10, float: \"right\"}} onClick={()=>{\n                            if (dateSelected)\n                                props.onDateSelected(dateSelected);\n                            props.onDidDismiss()\n                        }}>Done</div>\n                </div>\n                </div>\n            </div>\n        </IonModal>\n    )\n}\n\nfunction CalendarUnit(props) {\n    let [dateSelected, setDateSelected] = useState(props.initialDate ? props.initialDate : new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    \n    let [heat, setHeat] = useState({});\n    \n \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    \n    useEffect(()=>{\n        (async function() {\n            let map = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([_, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n            });\n            let values = Array.from(map.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]=hexes[i]});\n            }\n            setHeat(hm);\n        })();\n    },[dateSelected, props.initialDate]);\n    return (\n        <div id=\"calendar-page-calendar-wrapper\" style={{display: \"inline-block\", ...props.style}}>\n            <div id=\"calendar-wrapper-popover\">\n                <div id=\"calendar-daterow\">\n                    <span className=\"calendar-daterow-item\">Sun</span>\n                    <span className=\"calendar-daterow-item\">Mon</span>\n                    <span className=\"calendar-daterow-item\">Tues</span>\n                    <span className=\"calendar-daterow-item\">Wed</span>\n                    <span className=\"calendar-daterow-item\">Thu</span>\n                    <span className=\"calendar-daterow-item\">Fri</span>\n                    <span className=\"calendar-daterow-item\">Sat</span>\n                </div>\n                <div id=\"calendar-container\">\n                    {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                    <span className={`calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                        backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                            `#${heat[i.content]}` :\n                            \"inherit\"),\n                        border:  (i.type === \"actual\" && i.content === dateSelected.getDate()) ? \n                        \"2px solid var(--decorative-light)\" :\n                        \"0\"}} \n\n                        onClick={(e)=>{\n\n                            let date;\n                            if (i.type === \"pre\")\n                                date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                            if (i.type === \"actual\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                            if (i.type === \"post\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                            setDateSelected(date);\n                            if (props.onDateSelected && !props.disableOnclick)\n                                props.onDateSelected(date);\n                        }}>{i.content}</span>\n                    )}\n                </div>\n                <div id=\"calendar-infopanel\">\n                    <div className=\"calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                    <div className=\"calendar-infopanel-datename\">{dateSelected.toLocaleString(props.gruntman.localizations.getLanguage(), {  weekday: 'long' })}</div>\n                    <div className=\"calendar-infopanel-month\">{dateSelected.toLocaleString(props.gruntman.localizations.getLanguage(), { month: 'long' })}</div>\n                    <div className=\"calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                </div>\n                {(()=>{\n                    if (props.useTime)\n                        return <div className=\"calendar-timeunit\">   \n                            <span className=\"calendar-time\">\n                                Time\n                            </span>\n                            <input\n                                className=\"calendar-timebox\"\n                                defaultValue={dateSelected.toLocaleTimeString()}\n                                onKeyPress={e => {\n                                    // TIMEHANDLING is here. If you are searching for that, it's here.\n                                    // But anyway, on change, parse the time\n                                    let d = chrono.parseDate(e.target.value); //TODO bad?\n                                    // ...and throw away the date \n                                    if (d && e.key === \"Enter\") {\n                                        let newDate = new Date(dateSelected.getFullYear(), dateSelected.getMonth(), dateSelected.getDate(), d.getHours(), d.getMinutes(), d.getSeconds());\n                                        setDateSelected(newDate); // TODO make this with the onChange API\n                                        e.target.value = newDate.toLocaleTimeString();\n                                        if (props.onDateSelected && !props.disableOnclick)\n                                            props.onDateSelected(newDate);\n\n                                    }\n                                }}\n                            />\n                        </div>\n                })()}\n                <div id=\"calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(new Date());\n\n                    }}>{props.gruntman.localizations.clbtd}</div>\n                    <div className=\"calendar-today\" style={{marginRight: 10, float: \"right\"}} onClick={()=>{\n                        if (dateSelected)\n                            props.onDateSelected(dateSelected);\n                        props.onDidDismiss()\n                    }}>Done</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\n\nexport default CalendarPopover;\nexport { CalendarUnit };\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDrag } from 'react-use-gesture'\nimport { useSprings, animated, interpolate } from 'react-spring'\n\nimport '../Projects.css';\n\nimport Task from './Task';\n\n\n\n/*\n *\n * Hello human,\n * good afternoon.\n *\n * I am clumsy sortable!\n *\n * Use me to sort things\n * and make sortable task lists\n *\n * TODO => put actual documentation here\n *\n * So there.\n *\n * @jemoka\n *\n */\n\nconst SortableTaskList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:\"task\", content:i}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((id, i) => {\n        let anim = springs[i];\n        return (\n            <div ref={(e)=>{dragEnvelope.current=e}}>\n            <animated.div \n                {...bind(i)} \n                className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                style={{\n                    borderRadius: 7,\n                    position: \"relative\",\n                    cursor: \"pointer\",\n                    zIndex: anim.zIndex,  // z-index is 1000 during drag\n                    transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                }} \n                onClickCapture={(e)=>{\n                    if (activelyDragging.includes(i)){ // if we are still dragging\n                        e.stopPropagation(); // no clicky!\n                    }\n                }}\n            >\n                <Task ref={objRefs[i]} tid={id} key={id+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[id]} envelope={dragEnvelope} setDragEnabled={setDragEnabled} />\n            </animated.div>\n            </div>\n    )\n    });\n}\n\nconst SortableProjectList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:i.type, content:i.type===\"project\"?i.content.id:i.content}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((item, i) => {\n        let anim = springs[i];\n        if (item.type === \"task\")\n            return (\n                <div ref = {dragEnvelope}>\n                    <animated.div \n                        {...bind(i)} \n                        className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                        style={{\n                            borderRadius: 7,\n                            position: \"relative\",\n                            cursor: \"pointer\",\n                            zIndex: anim.zIndex,  // z-index is 1000 during drag\n                            transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                        }} \n                        onClickCapture={(e)=>{\n                            if (activelyDragging.includes(i)){ // if we are still dragging\n                                e.stopPropagation(); // no clicky!\n                            }\n                        }}\n                    >\n                        <Task ref={props.activeTaskID===item.content ? props.activeTaskRef : objRefs[i]} tid={item.content} key={item.content+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[item.content]} envelope={dragEnvelope} setDragEnabled={setDragEnabled}/>\n                    </animated.div>\n                </div>\n            )\n        else if (item.type === \"project\") {\n            return (\n            <div ref={dragEnvelope}>\n                <animated.div \n                    {...bind(i)} \n                    className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                    style={{\n                        borderRadius: 7,\n                        position: \"relative\",\n                        cursor: \"pointer\",\n                        zIndex: anim.zIndex,  // z-index is 1000 during drag\n                        transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                    }} \n                    onClickCapture={(e)=>{\n                        if (activelyDragging.includes(i)){ // if we are still dragging\n                            e.stopPropagation(); // no clicky!\n                        }\n                    }}\n                >\n                    <a className=\"subproject\" style={{opacity:props.availability[item.content.id]?\"1\":\"0.35\"}} onClick={()=>{props.paginate(\"projects\", item.content.id);props.history.push(`/projects/${item.content.id}`)}}><div><i className=\"far fa-arrow-alt-circle-right subproject-icon\"/><div style={{display: \"inline-block\"}}>{props.possibleProjects[item.content.id]}</div></div></a>\n                </animated.div>\n            </div>\n            )\n        }\n    });\n}\n\nexport { SortableTaskList, SortableProjectList };\n\n\n\n","// A whole lotta imports\n\n// Ionic components\nimport { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, isPlatform } from '@ionic/react';\nimport { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, calendar } from 'ionicons/icons';\n\n// Routing\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// Cool components that we need\nimport Upcoming from './Upcoming';\nimport Calendar from './Calendar';\nimport Completed from './Completed';\nimport Perspectives from './Perspectives';\nimport Projects from './Projects';\nimport ABTIB from './Components/FloatingActionButton';\nimport Keybinds from './Components/KeybindManager';\n\n// Our very own CSS\nimport './Home.css';\n\n// Tootips\nimport ReactTooltip from 'react-tooltip';\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\nconst history = isPlatform(\"electron\") ? createHashHistory() : createBrowserHistory();\n\n/* \n *\n * Hello, human\n * Good morning\n * Read me please.\n *\n * Use the **state**'s itemSelected \n *     to manage the menu\n * use the **React Router URL** \n *     to manage the page\n *\n * Otherwise, unreload-reload won't work.\n *\n * Thanks. @jemoka.\n *\n */\n\n// Welp. The Home.\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects:[], // list of top level projects\n            perspectives:[], // list of perspectives\n            itemSelected:{item:\"upcoming\", id:undefined}, // so what did we actually select\n        };\n\n\n        // AutoBind!\n        autoBind(this);\n\n        this.abtibRef = React.createRef();\n\n        this.menu = React.createRef();\n\n    }\n\n    paginate = (to, id) => this.setState({itemSelected:{item:to ,id}}) // Does not actually paginate; instead, it... uh... sets the highlighting of the menu\n\n    componentDidMount() {\n        // This is, indeed, the view\n        // Get the current URI to set which view is selected\n        let url = (new URL(document.URL))\n        let uri = url.pathname.split(\"/\");\n        let hash = url.hash.split(\"/\");\n        if (uri[1] === \"\")\n            this.setState({itemSelected:{item:\"upcoming\", id:\"\"}});\n        else if (isPlatform(\"electron\"))\n            this.setState({itemSelected:{item:hash[1], id:hash[2]}});\n        else\n            this.setState({itemSelected:{item:uri[1], id:uri[2]}});\n\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.to !== this.state.to && this.state.to !== undefined)\n             this.setState({sends:{to:undefined, id:undefined}})\n    }\n\n    async refresh() {\n        // Load the top level projects and perspectives\n        // to set into the state and to add to the menu\n        let tlp = await this.props.engine.db.getTopLevelProjects(this.props.uid);\n        let psp = await this.props.engine.db.getPerspectives(this.props.uid);\n\n        this.setState({projects: tlp[2], perspectives:psp[2]});\n    }\n\n\n\n\n    render() {\n        const Router = isPlatform(\"electron\") ? IonReactHashRouter : IonReactRouter; // Router workaround for electron\n        return (\n            <IonPage>\n                {/* The central router that controls the routing of views */}\n                <Router history={history}>\n\t\t    <Keybinds \n\t\t\tpaginate={this.paginate} \n\t\t\tref={this.keybindRef} \n\t\t\tperspectives={this.state.perspectives}\n\t\t\tprojects={this.state.projects}\n\t\t\tabtib={this.abtibRef} \n\t\t\tengine={this.props.engine} \n\t\t\tuid={this.props.uid} \n\t\t\tgruntman={this.props.gruntman} \n\t\t    />\n                    {/* OoIp */}\n                    <ReactTooltip />\n                    {/* App container */}\n                    <IonContent noBounce forceOverscroll={false}>\n                        {/* Menu pane to control mobile view splitting */}\n                        <IonSplitPane id=\"main-split\" contentId=\"main\" mode=\"md\">\n                            {/* The left: menu! */}\n                            <IonMenu id=\"main-menu\" contentId=\"main\" ref={this.menu}>\n                                <br />\n                                <IonContent id=\"menu-content\" className={(()=>{\n                                    if (!isPlatform(\"electron\")) // if we are not running electron\n                                        return \"normal\"; // normal windowing proceeds\n                                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                                        return \"darwin\"; // frameless setup\n                                    }\n                                    else if (process.platform === \"win32\") // windows\n                                        return \"windows\"; // non-frameless\n\n                                })()}>\n                                    {/* === Built Ins: upcoming + completed == */}\n                                    {/* Upcoming button + link */}\n                                    <Link to=\"/upcoming\" onClick={()=>this.setState({itemSelected:{item:\"upcoming\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Upcoming button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"upcoming\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20}} icon={chevronForwardCircle} />{this.props.localizations.upcoming}</div>\n                                    </Link>\n\n                                    {/* Completed button + link */}\n                                    <Link to=\"/completed\" onClick={()=>this.setState({itemSelected:{item:\"completed\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Completed button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"completed\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={checkmarkCircle} />{this.props.localizations.completed}</div>\n                                    </Link>\n\n                                    {/* Calendar button + link */}\n                                    <Link to=\"/calendar\" onClick={()=>this.setState({itemSelected:{item:\"calendar\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Calendar button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"calendar\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={calendar} />{this.props.localizations.calendar}</div>\n                                    </Link>\n\n                                    {/* === Perspectives == */}\n                                    <div className=\"menu-sublabel menu-decoration\">{this.props.localizations.perspectives} <a onClick={()=>{\n                                        if (this.menu.current)\n                                            this.menu.current.close();\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"perspective.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/perspectives/${npid}/do`);\n                                            this.paginate(\"perspectives\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n\n                                    {/* === Perspective button + link == */}\n                                    {this.state.perspectives.map((psp) => {\n                                        return (\n                                            <Link key={psp.id} to={`/perspectives/${psp.id}`} onClick={()=>this.setState({itemSelected:{item:\"perspectives\", id:psp.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"perspectives\" && this.state.itemSelected.id === psp.id ? \"menu-item-selected\" : \"\")}><i className=\"fas fa-layer-group\" style={{paddingRight: 2}}></i> {psp.name}</div> \n                                            </Link>\n                                        )\n                                    })}\n\n\n                                    {/* === Projects == */}\n                                    <div className=\"menu-sublabel menu-decoration\">{this.props.localizations.projects}<a onClick={()=>{\n                                        if (this.menu.current)\n                                            this.menu.current.close();\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"project.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/projects/${npid}/do`);\n                                            this.paginate(\"projects\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n                                    {/* === Project Contents == */}\n                                    {this.state.projects.map((proj) => {\n                                        return (\n                                            <Link key={proj.id} to={`/projects/${proj.id}`} onClick={()=>this.setState({itemSelected:{item:\"projects\", id:proj.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"projects\" && this.state.itemSelected.id === proj.id ? \"menu-item-selected\" : \"\")}><IonIcon icon={listOutline}/>{proj.name}</div></Link> \n                                        )                            \n                                    })}\n\n                                </IonContent>\n\n                                {/* Logout button */}\n                                <div className=\"menu-item\" id=\"logout\" onClick={()=>{history.push(`/`);this.props.dispatch({operation: \"logout\"})}}><i className=\"fas fa-snowboarding\" style={{paddingRight: 5}} />{this.props.localizations.logout}</div>\n                            </IonMenu>\n                            <IonPage id=\"main\">\n                                {/* the add button to inbox button*/}\n                                <ABTIB reference={this.abtibRef} uid={this.props.uid} gruntman={this.props.gruntman} localizations={this.props.localizations}/>\n                                {/* the portal root for DOM elements to park */}\n                                <div id=\"parking-lot\"></div>\n                                {/* The actual page */}\n                                <IonRouterOutlet>\n                                    {/* empty => /upcoming*/}\n                                    <Route render={() => <Redirect to=\"/upcoming\"/>}/>\n                                    {/* / => /upcoming */}\n                                    <Route exact path=\"/\" render={() => <Redirect to=\"/upcoming\" />} />\n                                    {/* and the perspective switch */}\n                                    <Switch>\n                                        {/* upcoming renders upcoming */}\n                                        <Route path=\"/upcoming\" exact render={()=><Upcoming engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} displayName={this.props.displayName} localizations={this.props.localizations} />} />\n                                        {/* completed renders completed */}\n                                        <Route path=\"/calendar\" exact render={()=><Calendar engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} />} localizations={this.props.localizations} />\n\n                                        {/* completed renders completed */}\n                                        <Route path=\"/completed\" exact render={()=><Completed engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} localizations={this.props.localizations} />} />\n\n                                        {/* perspective renders perspectives */}\n                                        <Route path=\"/perspectives/:id/:create?\" render={({match})=><Perspectives engine={this.props.engine} paginate={this.paginate} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh}  options={match.params.create} localizations={this.props.localizations}/>}  />\n\n                                        {/* project renders perspectives */}\n                                        <Route path=\"/projects/:id/:create?\" render={({match})=><Projects engine={this.props.engine} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh} paginate={this.paginate} options={match.params.create} localizations={this.props.localizations}/>}  />\n                                        {/* TODO projects */}\n                                    </Switch>\n                                </IonRouterOutlet>\n                            </IonPage>\n                        </IonSplitPane>\n                    </IonContent>\n                </Router>\n            </IonPage>\n        );\n    }\n};\n\nexport default Home;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform, IonInfiniteScroll, IonInfiniteScrollContent } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Upcoming.scss';\nimport './Pages.css';\n\nimport { SortableTaskList } from './Components/Sortable';\n\nimport Task from './Components/Task';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\n/* \n * The lack of a poem here is scathing\n * so I thought\n * I'd contribute.\n *\n * The homepage needs no introduction\n * For it explains itself in production.\n *\n * But alas,\n * I still write this.\n *\n * What for?\n *\n * @Jemoka\n *\n */\n\n\nclass Upcoming extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        let tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate()+1);\n\n        let greetings = this.props.localizations.greetings_setA;\n\n        this.state = {\n            inbox: [], // define the inbox\n            dueSoon: [], // whats due soon? \n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            timeline: [],\n            timelineShown: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        autoBind(this);\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pandt = await this.props.engine.db.getInboxandDS(this.props.uid, avail) // get inbox and due soon \n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.updatePrefix = this.random();\n\n        let timeline = await this.props.engine.db.selectTasksInRange(this.props.uid, new Date(), new Date(2100, 1, 1), true);\n        \n                            //timeline.push({type: \"label\", content: timelineRenderedUntil});\n                        //for (let task of fTasks)\n                            //timeline.push({type:\"task\", content:task});\n\n                        //this.setState({timelineRenderedUntil, timelineSoFar: timeline});\n        // Date same date check https://stackoverflow.com/questions/4428327/checking-if-two-dates-have-the-same-date-info\n        timeline = timeline.filter((x)=>!pandt[1].includes(x[0]))\n        Date.prototype.isSameDateAs = function(pDate) {\n          return (\n            this.getFullYear() === pDate.getFullYear() &&\n            this.getMonth() === pDate.getMonth() &&\n            this.getDate() === pDate.getDate()\n          );\n        }\n\n        let refrenceDate = new Date();\n        let tcontent = [];\n        for (let task of timeline) {\n            let due = new Date(task[1].due.seconds*1000);\n            if (!due.isSameDateAs(refrenceDate)) {\n                tcontent.push({type:\"label\", content: due});\n                refrenceDate = due;\n            }\n            tcontent.push({type:\"task\", content: task[0]});\n        }\n\n        this.setState({inbox: pandt[0], dueSoon: pandt[1], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, timeline: tcontent});\n    }\n\n    componentDidMount() {\n        this.refresh();\n\n        //// Jack and the Misadventures of Hiding the Scrollbar\n        //const content = this.pageRef.current;\n        //const styles = document.createElement('style');\n        //styles.textContent = `\n            //.scroll-y::-webkit-scrollbar {\n                //display: none;\n            //}\n        //`;\n        {/*content.shadowRoot.appendChild(styles);*/}\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n\n    render() {\n\n        return (\n            <IonPage>\n                <div style={{overflow: \"hidden\"}}>\n\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n                        <div className=\"header-container\" onTouchMove={(e)=>e.preventDefault()}>\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle><i className=\"fas fa-bars\" style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} /></IonMenuToggle> <h1 className=\"page-title\"><i style={{paddingRight: 10}} className=\"fas fa-chevron-circle-right\"></i>{this.props.localizations.upcoming}</h1> \n\n                                    \n                            <div className=\"greeting-datewidget\">\n                                <div style={{display: \"inline-block\"}} className=\"greeting-date\">{(new Date()).getDate()}</div>\n                                <div style={{display: \"inline-block\"}} className=\"greeting-datename\">{new Date().toLocaleString(this.props.localizations.getLanguage(), {  weekday: 'long' })}</div>\n                            </div>\n                            \n\n\n                                <div className=\"greeting-container\"><span id=\"greeting\">{this.state.greeting}</span> <span id=\"greeting-name\" style={{fontWeight: 600}}>{this.props.displayName}</span></div>\n                            </div>\n                        </div>\n                        <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", flexGrow: 5}}>\n                            <div>\n                                {(()=>{\n                                    if (this.state.inbox.length > 0)\n                                        return <div className=\"page-label\">{this.props.localizations.unsorted}<IonBadge className=\"count-badge\">{this.state.inbox.length}</IonBadge></div>\n                                })()}\n                                <SortableTaskList list={this.state.inbox} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                            </div>\n                            <div>\n                                {(()=>{\n                                    if (this.state.dueSoon.length > 0)\n                                        return <div className=\"page-label\">{this.props.localizations.ds}<IonBadge className=\"count-badge\">{this.state.dueSoon.length}</IonBadge></div>\n                                })()}\n                                {this.state.dueSoon.map(id => (\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                            </div>\n                            <div>\n                                <div className=\"timeline-button\">\n                                    <a \n                                        onClick={()=>\n                                                this.setState({timelineShown: !this.state.timelineShown})} \n                                        // for some reason, css classes don't work, so we have to style here\n                                        // @jack? why don't they? well, styling here's fine anyways. most likely b/c they are overrode by className=timeline-button\n                                        style={{\n                                            marginLeft: 15,\n                                            marginTop: 20, \n                                            display: \"inline-block\", \n                                            fontWeight: 600, \n                                            fontSize: 13, \n                                            //color: \"var(--decorative-light-alt)\", \n                                            cursor: \"pointer\"}}\n                                    >\n                                        <i \n                                            className=\"fas fa-calendar-week\" \n                                            style={{paddingRight: 5}}\n                                        ></i> {this.state.timelineShown? this.props.localizations.hide : this.props.localizations.show} {this.props.localizations.timeline}</a>\n                                </div> \n                                {\n                                    (()=>{\n                                        if (this.state.timelineShown)\n                                            return this.state.timeline.map(timelineItem => {\n                                                if (timelineItem.type === \"task\")\n                                                    return <Task tid={timelineItem.content} key={timelineItem.content+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[timelineItem.content]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                                        else if (timelineItem.type === \"label\")\n                                                    return <div className=\"timeline-box\"><div className=\"timeline-line-container\"><div className=\"timeline-line\">&nbsp;</div></div><div className=\"timeline-text\"><span className=\"timeline-weekname\">{timelineItem.content.toLocaleDateString(this.props.localizations.getLanguage(), { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</span></div></div>\n\n\n                                            })\n                                    })()\n                                }\n                                {\n                                    (()=>{\n                                            if (this.state.timelineShown)\n                                            return <span style={{fontSize: 8, color:\"var(--commitid)\", paddingLeft:10, paddingTop:10}}>Commit ID: {process.env.REACT_APP_COMMIT_HASH}</span>\n                                    })()\n                                }\n                            </div>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\n// Hiding scrollbar, a journey\n\n\n\nexport default Upcoming;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport {withGetScreen} from 'react-getscreen'\nimport './Calendar.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport CalendarPopover, { CalendarUnit } from './Components/CalendarPopover';\nimport CalendarTasklistPopover from './Components/CalendarTasklistPopover';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n *\n * Apparently,\n * People like calendars.\n *\n * WHY?\n *\n * People don't respect \n * the existance \n * of the whole idea of GTD.\n *\n * Seriously.\n *\n * Why. A calendar?! in a GTD app.\n *\n * FINE. Here's your calendar.\n *\n * @jemoka\n *\n *\n */\n\nlet refreshed = 0;\n\nfunction CalPageBigOllendar(props) {\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let [dateSelected, setDateSelected] = useState(new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    let [heat, setHeat] = useState({});\n\n    let [isPopoverShown, setIsPopoverShown] = useState(false);\n\n    let [shownList, setShownList] = useState([]);\n    \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    let refresh = (async function() {\n            let map = new Map();\n            let names = new Map();\n            let ids = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([id, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n                if(names.has(time))\n                    names.set(time, [...names.get(time), val.name]);\n                else\n                    names.set(time, [val.name]);\n                if(ids.has(time))\n                    ids.set(time, [...ids.get(time), id]);\n                else\n                    ids.set(time, [id]);\n\n            });\n            let values = Array.from(map.values());\n            let nameList = Array.from(names.values());\n            let idList = Array.from(ids.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]={color:hexes[i], value:values[i], names:nameList[i], ids: idList[i]}});\n            }\n            setHeat(hm);\n        })\n\n    useEffect(()=>{\n        refresh();\n    },[dateSelected, refreshed]);\n\n    return (\n        <div id=\"calendar-page-bigol-calendar-wrapper\" style={{display: \"inline-block\", height: \"85%\", width: \"95%\", ...props.style}}>\n            <CalendarTasklistPopover uid={props.uid} engine={props.engine} isShown={isPopoverShown} onDidDismiss={()=>setIsPopoverShown(false)} list={shownList} availability={props.availability} datapack={props.datapack} gruntman={props.gruntman} currentDate={dateSelected}/>\n            <div id=\"bigol-calendar-wrapper\">\n                <div id=\"bigol-calendar-daterow\">\n                    <span className=\"bigol-calendar-daterow-item\">Sun</span>\n                    <span className=\"bigol-calendar-daterow-item\">Mon</span>\n                    <span className=\"bigol-calendar-daterow-item\">Tues</span>\n                    <span className=\"bigol-calendar-daterow-item\">Wed</span>\n                    <span className=\"bigol-calendar-daterow-item\">Thu</span>\n                    <span className=\"bigol-calendar-daterow-item\">Fri</span>\n                    <span className=\"bigol-calendar-daterow-item\">Sat</span>\n                </div>\n                <div id=\"bigol-calendar-container\">\n                    {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                    <span className={`bigol-calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                        backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                            `#${heat[i.content].color}` :\n                            \"inherit\")\n                    }}\n                        onClick={(e)=>{\n                            let date;\n                            if (i.type === \"pre\")\n                                date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                            if (i.type === \"actual\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                            if (i.type === \"post\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                            setDateSelected(date);\n                            if (heat[i.content])\n                                setShownList(heat[i.content].ids);\n                            else\n                                setShownList([]);\n                            setIsPopoverShown(true)\n                            if (props.onDateSelected)\n                                props.onDateSelected(date);\n                        }}>\n                        <div className=\"calendar-date-text\">\n                            {i.content}<span className=\"calendar-date-value\">{(heat[i.content]&&i.type===\"actual\")?`${heat[i.content].value} Tasks`:null}</span></div><div style={{marginLeft: 6, marginRight: 5, marginBottom: 2}}>{((heat[i.content]&&i.type===\"actual\")?heat[i.content].names:[]).map((name)=><span className=\"calendar-date-taskname\"><div className=\"calendar-task-circle\">&nbsp;</div>{name}</span>)}</div>\n                    </span>\n                    )}\n                </div>\n                <div id=\"bigol-calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected)\n                            props.onDateSelected(new Date());\n\n                    }}>{props.gruntman.localizations.clbtd}</div>\n\n\n                </div>\n\n                <div id=\"bigol-calendar-infopanel\">\n                    <div id=\"bigol-calendar-dategroup\">\n                        <div className=\"bigol-calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                        <div className=\"bigol-calendar-infopanel-datename\">{dateSelected.toLocaleString(props.gruntman.localizations.getLanguage(), {  weekday: 'long' })}</div>\n                        <div className=\"bigol-calendar-infopanel-month\">{dateSelected.toLocaleString(props.gruntman.localizations.getLanguage(), { month: 'long' })}</div>\n                        <div className=\"bigol-calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nclass Calendar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let today = new Date();\n        today.setHours(0,0,0,0);\n\n        this.state = {\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            currentDate: (today), // new date\n            taskList: [],\n            popoverIsVisible: false,\n\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        let endDate = new Date(this.state.currentDate);\n        endDate.setHours(23,59,59,60);\n        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, this.state.currentDate, endDate);\n\n        refreshed++;\n\n        this.setState({\n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB, \t\t\t      // and the project db \n            taskList\n        }); // once we finish, set the state\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                {/* the perspective editor! */}\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-calendar-alt\">\n                                    </i>\n                                    {this.props.gruntman.localizations.calendar}\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                            </div> \n                        </div>\n                    </div>\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", height: \"100%\"}}>\n                        <div id=\"calendar-page-wrapper\">\n                            {(()=>{\n                                if (this.props.isMobile())\n                                    return <CalendarUnit gruntman={this.props.gruntman} uid={this.props.uid} engine={this.props.engine} isShown={this.state.popoverIsVisible} onDidDismiss={()=>this.setState({popoverIsVisible: false})}  onDateSelected={(async function(d){\n                                        let endDate = new Date(d.getTime());\n                                        endDate.setHours(23,59,59,60);\n                                        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, d, endDate);\n                                        this.setState({currentDate: d, taskList});\n                                    }).bind(this)}/>\n                                else \n                                    return <CalPageBigOllendar gruntman={this.props.gruntman}  uid={this.props.uid} engine={this.props.engine} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                            })()}\n                            {(()=>{\n                                if (this.props.isMobile())\n                            return <div id=\"calendar-page-taskpage-wrapper\">\n                                <span id=\"calendar-page-header\">\n                                    <div class=\"calendar-page-count\">{this.state.taskList.length}</div>\n                                    <div class=\"calendar-page-title\">tasks due on</div>\n                                    <div class=\"calendar-page-date\">{this.state.currentDate.toLocaleString('en-us', {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'  })}</div>\n                                </span>\n                                {this.state.taskList.map(id=>(\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                            </div>\n                            })()}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\nexport default withGetScreen(Calendar, {mobileLimit: 720, tabletLimit:768, shouldListenOnResize: true});\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { createRef, useEffect, useRef } from 'react';\nimport '../Calendar.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\nimport Task from '../Components/Task';\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the calendar popover\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\n\nfunction CalendarTasklistPopover(props) {\n\n    let refs = useRef([]);\n\n    useEffect(()=>{\n        refs.current=props.list.map((_)=>createRef());\n    }, [props.list]);\n\n    return (\n        <IonModal ref={props.reference} isOpen={props.isShown} onDidDismiss={() => {if(props.onDidDismiss) props.onDidDismiss()}} style={{borderRadius: 5}} cssClass=\"calendar-list-popover\">\n                <div id=\"airplane-hanger\"></div> {/*to mount the calendar*/}\n            <div className=\"popover-list\">\n                <span id=\"calendar-page-header\">\n                    <div class=\"calendar-page-count\">{props.list.length}</div>\n                    <div class=\"calendar-page-title\">tasks due on</div>\n                    <div class=\"calendar-page-date\" >{props.currentDate.toLocaleString('en-us', {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'  })}</div>\n                </span>\n\n                {props.list.map((id, i)=>\n                    <div ref={refs.current[i]}>\n                        <Task tid={id} key={id} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[id]} datapack={props.datapack} envelope={refs.current[i]} onModal={true}/>\n                    </div>\n                )}\n                <div className=\"bottom-helper\" style={{height: 150}}>&nbsp;</div>\n            </div>\n        </IonModal>\n    )\n}\n\nexport default CalendarTasklistPopover;\n\n","// IMPORTS\nimport { IonContent, IonPage, IonMenuToggle, isPlatform } from '@ionic/react'; \nimport React, { Component, useEffect } from 'react';\nimport './Completed.css';\nimport './Pages.css';\nimport Task from './Components/Task';\nconst autoBind = require('auto-bind/react'); // autobind is a lifesaver\n\n/*\n\n * Sometimes we complete.\n *\n * This is not always correct,\n *\n * so we have this page! \n *\n * @enquirer\n\n*/\n\n// construtor for rendered object\nfunction TaskObject(type, contents) {\n    this.type = type; // set the type to the type (label or task)\n    this.contents = contents; // set the contents to the contents (title or id)\n}\n\n// define the main component!\nclass Completed extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // the objects we render\n            tasksShown: 1, // track the number of times we have fetched more\n            taskCats: [\"Today\", \"Yesterday\", \"This Week\", \"This Month\", \"Even Before\"], // define task categories (cats!)\n            rendering: true, // define whether or not the element is rendering \n            possibleProjects:{}, // see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    async refresh() {\n        let taskArr = []; // define temp array\n        let full = await this.props.engine.db.getCompletedTasks(this.props.uid); // get the tasks from the database \n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n        // loop through the tasks, converting to objects and inserting labels between each cat\n        full.forEach((cat, i) => {\n            taskArr.push(new TaskObject(\"label\", this.state.taskCats[i])) // each iteration, push the next label to the temp arr\n            cat.forEach(task => { // this loops through each cat\n                taskArr.push(new TaskObject(\"task\", task)) // convert each task to an object then push it to the temp arr\n            })\n        });\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.setState({taskList: taskArr, rendering: false, possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB}); // once we finish, set the state\n        // also set rendering to false. \n        // This is a hacky solution instead of creating an entirely new async function.\n    }\n\n    async componentDidMount() {\n        this.refresh(); // refresh when the component mounts\n    }\n\n    handleFetchMore() {\n        this.setState({rendering: true}) // trigger loading screen\n        const loader =  setTimeout(() => { // set a timeout to set the rendering to false \n            this.setState({rendering: false})\n\n        }, 2);\n\n        const updateTasks =  setTimeout(() => { // set another timeout for the actual task update\n            this.setState({tasksShown: this.state.tasksShown+1}) \n            // increment tasksShown by one whenever fetch more is clicked\n            // this renders 10 more items \n            this.setState({rendering: false}) // set rendering to false\n        }, 1)\n\n        // disclaimer: I do not understand how this works. I was just messing around trying to debug and this happened to work.\n        // if it ain't broke, dont fix it? \n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                <div style={{overflowY: \"scroll\"}}>\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n\n                        <div className=\"header-container\">\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle>\n                                    <i class=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-check-circle\">\n                                    </i>\n                                    Completed\n                                </h1> \n                            </div>\n                        </div>\n                        {/* loop through the taskList ten times, multiplyed by the times we have fetched more */}\n                        {/* if the cat is empty or the final item rendered is a label, don't render it */}\n                        {/* otherwise, render a task */}\n                        {/* for the fetch more, if we are currently rendering, render a loading animation. */}\n                        {/* Otherwise, render a fetch more.*/}\n                        <div style={{overflowY: \"scroll\"}}>\n                            {this.state.taskList.slice(0, 10*this.state.tasksShown).map((content, i) => (\n                                <div style={{marginLeft: 10, marginRight: 10}}>\n                                    {(content.type == \"label\")?  \n                                            (this.state.taskList[i+1] ? \n                                                ((this.state.taskList[i+1].type == \"label\" || this.state.taskList.slice(0, 10*this.state.tasksShown).length == i+1) ? \n                                                \"\" : <p className=\"page-label\" style={{marginBottom:0}}>{content.contents}</p>) : \"\") : \n                                                <Task \n                                                    tid={content.contents} \n                                                    startingCompleted={true}\n                                                    key={content.contents+\"-\"+this.updatePrefix} \n                                                    uid={this.props.uid} \n                                                    engine={this.props.engine} \n                                                    gruntman={this.props.gruntman} \n                                                    availability={this.state.availability[content.contents]} \n                                                    datapack={[this.state.tagSelects,\n                                                        this.state.projectSelects, \n                                                        this.state.possibleProjects, \n                                                        this.state.possibleProjectsRev, \n                                                        this.state.possibleTags, \n                                                        this.state.possibleTagsRev]}\n                                                />\n                                    }\n                                </div>\n                            ))}\n\n                        <div className=\"fetch-more\" > \n                            {/* define the fetch more button */}\n                            {this.state.rendering? <p className=\"loader\" >Loading...</p> : <p onClick={this.handleFetchMore}>Fetch more...</p>}\n                        </div> \n                    <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default Completed;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Perspectives.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport PerspectiveEdit from './Components/PerspectiveEditor';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n * To sort, we give our tasks tags\n *\n * We can also give them flags\n * \n * With perspectives we filter,\n *\n * To keep our tasks in kilter,\n *\n * Then refactor the code if it lags!\n *\n *\n * @enquirer\n *\n */\n\n\nclass Perspectives extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // what tasks should we display? \n            perspectiveName: \"\", // whats the perspective name? \n\t    perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n\t    perspectiveAvail: {}, // whats the perspective availability? \n\t    perspectiveTord: {},  // whats the perspective ordering?\n\t    // not truth or dare. jack doent even know what that is! ^^ \n            showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n\n        };\n\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let possiblePerspectives = await this.props.engine.db.getPerspectives(this.props.uid); // get all possible perspectives\n        let perspectiveObject = possiblePerspectives[0][this.props.id] // get the one we want based on page id \n        let taskList = await this.props.engine.perspective.calc(this.props.uid, perspectiveObject.query, perspectiveObject.avail, perspectiveObject.tord) // then get the tasks from that perspective\n\n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.setState({\n            taskList: taskList,                           // set the tasklist, \n            perspectiveName: perspectiveObject.name,     // set the perspective name \n\t    perspectiveQuery: perspectiveObject.query,  // set the perspective query \n\t    perspectiveAvail: perspectiveObject.avail, // set the perspective avail \n\t    perspectiveTord: perspectiveObject.tord,  // set the perspective tord \n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB \t\t\t      // and the project db \n        }); // once we finish, set the state\n    }\n\n    updateName(e) {\n        if (e) { // if the name if defined, \n            this.props.gruntman.registerScheduler(() => {\n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n\t\t\t// pass it the things \n                        uid: this.props.uid, // the user id \n                        id: this.props.id,  // the perspective id \n                        payload: {name: e.target.value} // the action, setting name to the new value \n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n            this.setState({perspectiveName: e.target.value}) // set the perspectiveName\n        }\n    } \n\n\n    handleDelete() {\n        this.props.history.push(\"/upcoming\"); // go back\n        this.props.paginate(\"upcoming\"); // idk man \n        this.props.gruntman.do( // call a gruntman function\n            \"perspective.delete__perspective\", { \n                uid: this.props.uid, // pass it the user id \n                id: this.props.id, // and the current id \n            }\n        ).then(()=>{\n            this.props.menuRefresh(); // refresh menubar\n\n        }) // call the homebar refresh\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) { // if we updated the defer date\n            this.setState({\n                taskList: [], // what tasks should we display? \n                perspectiveName: \"\", // whats the perspective name? \n                perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n                perspectiveAvail: {}, // whats the perspective availability? \n                perspectiveTord: {},  // whats the perspective ordering?\n                // not truth or dare. jack doent even know what that is! ^^ \n                showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n                possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n                possibleTags:{}, \n                possibleProjectsRev:{}, \n                possibleTagsRev:{}, \n                availability: [], \n                projectSelects:[], \n                tagSelects: [], \n                projectDB: {}\n\n            });\n\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n        }\n        // so we want to refresh the perspective that's rendered\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.setState({showEdit: true});\n\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n\t\t{/* the perspective editor! */}\n                <PerspectiveEdit \n                    reference={this.repeater} \n                    isShown={this.state.showEdit} \n                    onDidDismiss={this.hideEdit}\n                    uid={this.props.uid} \n                    engine={this.props.engine} \n                    gruntman={this.props.gruntman}\n                    id={this.props.id}\n                    perspectiveName={this.state.perspectiveName}\n                    query={this.state.perspectiveQuery}\n                    avail={this.state.perspectiveAvail}\n                    tord={this.state.perspectiveTord}\n                    menuRefresh={this.props.menuRefresh}\n                    updateName={this.updateName}\n                    startHighlighted={this.props.options === \"do\"}\n                />\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n\t\t    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-layer-group\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.perspectiveName} // TODO: jack this is hecka hacky\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n\n                                <div className=\"greeting-container\" style={{marginLeft: 11, marginTop: 7}}>\n                                    <a \n                                        onClick={this.showEdit} \n                                        data-tip=\"LOCALIZE: Edit\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}}>\n                                        <i className=\"fas fa-edit\" \n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, \n                                                transform: \"translate(2px, -2px)\"}} \n                                        ></i>\n                                    </a>\n\n                                    <a \n                                        onClick={this.handleDelete} \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}>\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\"}}>\n\n                        {this.state.taskList.map(id => (\n                            <Task \n                                tid={id}\n                                key={id+\"-\"+this.updatePrefix} \n                                uid={this.props.uid} \n                                engine={this.props.engine} \n                                gruntman={this.props.gruntman} \n                                availability={this.state.availability[id]} \n                                datapack={[\n                                    this.state.tagSelects, \n                                    this.state.projectSelects, \n                                    this.state.possibleProjects, \n                                    this.state.possibleProjectsRev, \n                                    this.state.possibleTags, \n                                    this.state.possibleTagsRev\n                                ]}\n                            />\n                        ))}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Perspectives);\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\nimport '../Perspectives.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\nconst autoBind = require('auto-bind/react');\n\n\n/* \n * perspectives are amazing \n *\n * dab on them haters \n *\n * I just said the cringiest thing ever\n *\n * oh my god huxley i swear to god \n *\n * i will rebase your commits \n *\n *\n * - @zbuster05, recorded by @enquirer\n *\n */\n\nclass PerspectiveEdit extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            inputEvent: \"\", // define our input event for the perspective title \n        }\n\n        this.name = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.startHighlighted) // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    handleQueryChange(e) {\n        if (e) { // if the event is defined \n            this.props.gruntman.registerScheduler(() => { \n                //Register a scheduler to deal with React's onChange\n                //check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n                        // pass it the things \n                        uid: this.props.uid, // pass it the uid \n                        id: this.props.id,  // pass it the perspective id \n                        payload: {query: e.target.value} // pass it the action, updating the query\n                    }\n                )\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n        } else {console.log(e)}\n    }\n\n    handleHelp() { // TODO TODO TODO: jack what do u want here? \n        alert(\"You really think we have documentation ready? I mean, if they are there, they are at docs.condution.com\")\n        console.log(\"no one is here to help. grow up.\")\n    }\n\n    render() {\n        return (\n            <IonModal \n                ref={this.props.reference} \n                isOpen={this.props.isShown} \n                onWillPresent={() => {this.props.gruntman.lockUpdates();}}\n                onDidDismiss={() => {\n                    this.props.gruntman.unlockUpdates(); \n                    this.props.updateName(this.state.inputEvent);\n                    if (this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}\n                } \n                cssClass={\"perspective-modal\"}\n            > \n\n                <div>\n                    {/* Header */}\n                    <div className=\"perspective-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\", whiteSpace: \"nowrap\"}}>\n                            <b className=\"bold-prefix\" >{this.props.gruntman.localizations.perspective_build_callout}</b> \n                            <input className=\"editable-title pbuilder-pname\" \n                                ref={this.name}\n                                defaultValue={this.props.perspectiveName} \n                                onChange={(e)=> {e.persist(); this.props.updateName(e); this.setState({inputEvent: e})}}\n                                style={{minWidth: 0}}\n                                placeholder=\"@NEEDLOC Tap to set name\"\n                            />\n\n                            <div className=\"repeat-task-name\">{this.state.name}</div>\n                        </span>\n                        {/* Close button */} \n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss} style={{transform: \"translate(-10px, 3px)\"}}><i className=\"fa fa-times\"></i></a>\n\n                    </div>\n                    <div className=\"build-input\">\n                        <span className=\"bold-prefix\" style={{minWidth: \"70px\", marginTop: \"4px\"}}>Filter by</span> {/*@NEEDLOC*/}\n                        <input \n                            className=\"build-input-edit\"\n                            defaultValue={this.props.query}\n                            onChange={(e)=> {e.persist(); this.handleQueryChange(e)}}\n                            placeholder=\"LOCALIZE: perspective query\"\n                        >\n                        </input> \n                    </div>\n\n\n                    <div className=\"perspective-basic-row\">\n                        <span className=\"pbasic-container\" style={{marginRight: \"25px\"}}>\n                            <span>\n                                <i className=\"repeat-label fas fa-exchange-alt\"></i>\n                                <span className=\"perspective-label\">{this.props.gruntman.localizations.perspective_include}</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.avail} // TODO: make a database hit \n                                mode=\"ios\"\n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the user id \n                                            id: this.props.id,  // pass it the perspective id\n                                            payload: {avail: e.detail.value} // set the availability \n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"remain\">{this.props.gruntman.localizations.psp_rem}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"avail\">{this.props.gruntman.localizations.psp_avil}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"flagged\">{this.props.gruntman.localizations.psp_flg}</IonSelectOption>\n                            </IonSelect>\n                        </span>\n\n                        <span className=\"pbasic-container\">\n                            <span>\n                                <i className=\"repeat-label fas fa-sort-amount-down-alt\"></i>\n                                <span className=\"perspective-label\">{this.props.gruntman.localizations.perspective_order}</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.tord} \n                                mode=\"ios\" \n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the things, you know the drill \n                                            id: this.props.id, \n                                            payload: {tord: e.detail.value}\n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duas\">{this.props.gruntman.localizations.psp_abd}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duds\">{this.props.gruntman.localizations.psp_dbd}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deas\">{this.props.gruntman.localizations.psp_abe}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deds\">{this.props.gruntman.localizations.psp_dbe}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"alph\">{this.props.gruntman.localizations.psp_alpha}></IonSelectOption>\n                            </IonSelect>\n                            <div className=\"help-icon\" onClick={this.handleHelp}>\n                                <i \n                                    className=\"far fa-question-circle\" \n                                ></i>\n                            </div>\n                        </span>\n\n\n                    </div> \n\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default PerspectiveEdit;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Projects.css';\nimport './Pages.css';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport Task from './Components/Task';\n\nimport { withRouter } from \"react-router\";\n\nimport { SortableProjectList } from './Components/Sortable';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\nclass Projects extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '', // project name\n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            parent: \"\",\n            is_sequential: false,\n            currentProject: {children:[]},\n            activeTask: \"\"\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        this.activeTask = React.createRef();\n\n        this.name = React.createRef();\n\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) // if we updated the defer date\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.updatePrefix = this.random();\n        let cProject = (await views.props.engine.db.getProjectStructure(this.props.uid, this.props.id, false));\n        this.setState({name:pPandT[0][0][this.props.id], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, currentProject: cProject, is_sequential: cProject.is_sequential, parent: cProject.parentProj});\n    }\n\n    componentDidMount() {\n        this.refresh();\n        if (this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    updateName(e) {\n        if (e) {\n            this.props.gruntman.registerScheduler(() => { \n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"project.update__name\", { \n                        uid: this.props.uid, // pass it the things vvv\n                        id: this.props.id, \n                        name: e.target.value\n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `project.this.${this.props.id}-update`) // give it a custom id\n            this.setState({name: e.target.value})\n        } else { console.log(e)}\n    } \n\n    render() {\n        return (\n            <IonPage>\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    {(()=> {\n                                        if (this.state.parent !== \"\")\n                                            return <a className=\"fas fa-chevron-left backbutton\" onClick={()=>{this.props.paginate(\"projects\", this.state.parent);this.props.history.push(`/projects/${this.state.parent}`)}} />\n                                    })()}\n                                    <i style={{paddingRight: 4}} \n                                        className=\"fas fa-tasks\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.name} // TODO: jack this is hecka hacky\n                                        style={{transform: \"transformY(-2px)\"}}\n                                        ref={this.name}\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                                <div className=\"greeting-container\" style={{marginLeft: 5, marginTop: 7}}>\n                                    <a \n                                        onClick={()=> {\n                                            this.setState({is_sequential: !this.state.currentProject.is_sequential}, () => {\n                                                this.props.gruntman.do( // call a gruntman function\n                                                    \"project.update__pstate\", { \n                                                        uid: this.props.uid, // pass it the things vvv\n                                                        id: this.props.id, \n                                                        is_sequential: this.state.is_sequential\n                                                    }\n                                                );\n                                            }); // change the icon\n                                        }} \n                                        data-tip=\"LOCALIZE: Sequencial/Paralellel\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className={this.state.is_sequential ? \"fas fa-arrows-alt-v\":\"fas fa-arrows-alt-h\"}\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 13, transform: this.state.is_sequential ? \"translate(3.5px, -1px)\" : \"translate(0.25px, -1px)\"}}>\n                                        </i>\n                                    </a>\n                                    <a \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        onClick={()=>{\n                                            this.props.gruntman.do( // call a gruntman function\n                                                \"project.delete\", { \n                                                    uid: this.props.uid, // pass it the things vvv\n                                                    pid: this.props.id, \n                                                    parent: (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent\n                                                }\n                                            ).then(()=>{\n                                                this.props.menuRefresh(); // refresh menubar\n                                                this.props.history.push((this.state.parent === \"\" || this.state.parent === undefined) ? \"/upcoming/\" : `/projects/${this.state.parent}`); // go back\n                                                this.props.paginate((this.state.parent === \"\" || this.state.parent === undefined) ? \"upcoming\" : `projects`, (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent);\n                                            }) // call the homebar refresh\n                                        }}\n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}\n                                        >\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", overflowX: \"hidden\"}}>\n\n                        <SortableProjectList list={this.state.currentProject.children} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]} possibleProjects={this.state.possibleProjects} history={this.props.history} paginate={this.props.paginate} activeTaskRef={this.activeTask} activeTaskID={this.state.activeTask}/>\n\n                        <div style={{marginTop: 10}}>\n                            <a className=\"newbutton\" onClick={()=>{\n                                this.props.gruntman.do( // call a gruntman function\n                                    \"task.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        pid: this.props.id, \n                                    },\n                                    true // bypass updates to manually do it + make it quicker\n                                ).then((result)=>{\n                                    let cProject = this.state.currentProject; // get current project\n                                    let avail = this.state.availability; // get current availibilty\n                                    avail[result.tid] = true; // set the current one to be available, temporarily so that people could write in it\n                                    cProject.children.push({type: \"task\", content:result.tid}); // add our new task\n                                    this.setState({activeTask:result.tid, currentProject: cProject, availability: avail}, () =>  this.activeTask.current._explode() ) // wosh!\n                                }) // call the homebar refresh\n                            }}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>{this.props.localizations.nb_at}</div></div></a>\n                            <a className=\"newbutton\" onClick={async function() {\n                                let npid = (await this.props.gruntman.do( // call a gruntman function\n                                    \"project.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        parent: this.props.id, \n                                    },\n                                )).pid;\n                                this.props.history.push(`/projects/${npid}/do`);\n                            }.bind(this)}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>{this.props.localizations.nb_ap}</div></div></a>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Projects);\n\n","//import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport React, { useState } from 'react';\nimport './FloatingActionButton.css';\nimport * as chrono from 'chrono-node';\nimport {useSpring, animated} from 'react-spring'\n\n\n/*\n * Hello human,\n * You know I'm not Jack because my pen has no nib\n * You know I'm not Huxley because I can't adlib\n * If I said I could do frqnt end, I'd be telling a fib\n * And now, as punishment, I've lost a rib\n * But alas, here is abtib ^-^\n *\n * ~~@Exr0n~~\n * @Ex-rib\n *\n */\n\n\nfunction handleABTIBInput(value) {\n    console.log('abtib reportin to handle input ^-^');\n    console.log(value);\n    // TODO: nlp it\n    // TODO: create the task\n}\n\nfunction ABTIB(props) {\n    const defaultValue = props.localizations.qa_content;\n    const [isExpanded, setisExpanded] = useState(false);\n    const [isSaving, setisSaving] = useState(false);\n\n    const anim = useSpring({\n\tto: \n\t    (isSaving ? \n\t\t{\n\t\t    width: 280, \n\t\t    color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd-success)\"\n\t\t} \n\n\t\t: \n\n\t\t{\n\t\t    width: isExpanded ? 280:250, \n\t\t    color:\"var(--quickadd-text)\", \n\t\t    //color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd)\",\n\t\t    //backgroundColor: \"var(--quickadd-success)\"\n\t\t}\n\t    )\n    })\n\n    return <animated.input \n\t\tid=\"abtib\" \n\t\treadOnly={false} \n\t\ttype=\"text\" \n\t\tdefaultValue={\"\"} \n\t\tstyle={anim} \n\t\tclassName=\"attib\"\n\t\tref={props.reference}\n\n        onFocus={\n            (event) => {\n                event.target.value = \"\";\n                setisExpanded(true);\n            }\n        }\n        onBlur={e=>{\n            setisExpanded(false);\n            setisSaving(false);\n            e.target.value = \"\";\n        }}\n        onKeyUp={\n            (event) => {\n                if (event.key === 'Enter') {\n                    event.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                    setisSaving(true);\n                    let taskName = event.target.value;\n                    let dateInfo = chrono.parse(taskName);\n                    let due = undefined;\n                    let defer = undefined;\n                    if (dateInfo.length > 0) {\n                        // we got a date!\n                        if (dateInfo[0].end) {\n                            // both start (defer) and end (due)\n                            // get end (due) date\n                            due = dateInfo[0].end.date();\n                            defer = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n\n                        }\n                        else {\n                            // only start (due)\n                            due = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n                        }\n                    }\n                    let npobj = { \n                            uid: props.uid, // pass it the things vvv\n                            pid: \"\",\n                            due,\n                            defer,\n                            name: taskName\n                    };\n                    props.gruntman.do( // call a gruntman function\n                        \"task.create\", npobj,\n                    ).then(()=>{\n                        event.target.blur();\n                    });\n                }\n            }\n        }\n        placeholder={ defaultValue + ((Math.random()*128 < 1) ? \" ^-^\" : \"\")}\n     />;\n}\n\nexport default ABTIB;\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport { IonModal, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonSearchbar, IonFooter } from '@ionic/react';\nimport './QuickSwitcher.css'\nimport '../Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\n\n/*\n * I am the quick switcher.\n *\n * With me you switch quickly!\n *\n * but be warned:\n *\n * The code upon which I am built\n *\n * Often sends those who see it\n *\n * Into horror.\n *\n *\n * @enquirer\n */\n\n\n// TODO: subprojects and icon \n\n\nclass QuickSwitcher extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    items: [], // processed items I get passed\n\t    filteredList: [], // my items filtered base upon query \n\t    query: '', // my query! \n\t    direction: true, // should I go back in history, or forward? (for back toggle)\n\t    selected: 0, // what is my selected item index?\n\t    prop_store: '', // store my props so we can check if they have changed \n\t    projs: [],\n\t}\n\tthis.searcher = React.createRef(); // searchbar input ref \n\tthis.currentlySelected = React.createRef(); // selected item ref \n    }\n\n    componentDidUpdate() {\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.processItems() // process the items \n\t}\n    }\n\n    componentDidMount() {\n\tthis.processItems() // when we mount, process the items.\n\tthis.setState({prop_store: this.props}) // set the prop store and the items \n\tthis.getProjs() // get our sub projects \n    }\n\n    async getProjs() { // get our projects \n\tconst subs = (await this.props.engine.db.getProjectsandTags(this.props.uid))[0][0] // hit the cache \n\tconst mod = Object.entries(subs).map(([key, value]) => { // process it \n\t    return ['.' + value, 'projects', key, 'fas fa-tasks']\n\t});\n\tthis.setState({projs: mod}) // and set our state \n    }\n\n    focusRef() { // focus the ref!\n\tif (this.searcher.current) // if the ref exists,\n            this.searcher.current.setFocus(); // focus it \n\tthis.setState({query: '', selected: 0}) // and reset the query \n\tthis.getProjs() // and get our projects\n    }\n\n\n    filterItems(searchTerm) { // filter the items!\n\tlet filteredItems = this.state.items.filter(item => {\n\t    return item[0].toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n\t});\n\treturn filteredItems\n    }\n\n    processItems() { // process our items!\n\t// name, url prefix, id\n\tthis.setState({items: \n\t    [\n\t\t[':upcoming', 'upcoming', '', 'fas fa-chevron-circle-right'], // set the first item to upcoming \n\t\t// (i could do + but i think thats less efficent \n\t\t[':completed', 'completed', '', 'fas fa-check-circle'], // set the second item to completed\n\t\t[':calendar', 'calendar', '', 'fas fa-calendar-alt'], // set the third item to calendar\n\t\t...this.props.items[0].map(o => ['!'+o.name, 'perspectives', o.id, 'fas fa-layer-group']), // map the perspectives\n\t\t...this.state.projs // the projects! \n\t    ],\n\t    prop_store: this.props //  and update the props \n\t})\n    }\n\n    handleKeydown(e) { // handle the keydown... avert your eyes\n\tconst keyname = e.key; // store the keyname\n\tif (keyname == \"Enter\") { // if we submit, \n\t    let selectedItem = this.filterItems(this.state.query)[this.state.selected] // store the selected item\n\t    // TODO: jack make the sidebar styling work \n\t    // if we are selectiong the first item and we have no query, \n\t    if ((!selectedItem || !this.state.query) && this.state.selected == 0) {  \n\t\tif (this.state.direction && this.props.history.length > 2) { // check our direction, \n\t\t    this.props.history.goBack() // then navigate back accordingly. \n\t\t} \n\t\telse if (this.props.history.length > 2) { this.props.history.goForward() }\n\t\tthis.setState({direction: !this.state.direction}) // and flip the direction \n\n\t    } else {\n\t\tconst slicedSelectedItem = selectedItem.slice(1) // store the sliced item!\n\t\tthis.props.history.push(`/${selectedItem[1]}/${selectedItem[2]}`) // push to the history\n\t\tthis.props.paginate(...slicedSelectedItem); // paginate-ify it!\n\t\tthis.props.updateIdx(slicedSelectedItem) // make our homebar keybinds work by giving it the index\n\t    }\n\t    this.props.dismiss() // dismiss the modal\n\t} else { // if we havent pressed submit, \n\t    const idx = this.state.selected // store the index \n\t    const len = this.filterItems(this.state.query).length-1 // and the filtered items cus react lifecyle bd \n\t    if (keyname == \"ArrowUp\" || (e.ctrlKey && keyname == \"p\")) { // if we are navigating up, \n\t\tif (idx > 0) { // and we selecting something greater than the first element, \n\t\t    this.setState({selected: idx-1}) // subtract from our index \n\t\t} else { this.setState({selected: len})} // if we are selection the first element, wrap to the last\n\t\tif (this.currentlySelected) {this.currentlySelected.current.scrollIntoView({ // and scroll it into view \n\t\t    behavior: \"smooth\", // make it smooooth \n\t\t    block: \"end\" // make it not get covered by the searchbar \n\t\t})}\n\t    } else if (keyname == \"ArrowDown\" || (e.ctrlKey && keyname == \"n\")) { // if we are scrolling down, \n\t\tif (idx == len) { // handle wrapping \n\t\t    this.setState({selected: 0})\n\t\t} else { this.setState({selected: idx+1}) } \n\t\tif (this.currentlySelected) {this.currentlySelected.current.scrollIntoView({\n\t\t    behavior: \"smooth\", // smooooooooooth\n\t\t    block: \"start\", // make it work better. their might be a better option for this \n\t\t})}\n\t    }\n\t}\n    }\n\n\n    render() { \n\treturn (\n\t    <IonModal \n\t\tisOpen={this.props.qs_show}  // are we open? \n\t\tanimated={false} // don't animate the opening. \n\t\tcssClass='qs_modal' // give it a class! \n\t\tautoFocus={true} // this doesnt do anything, but like, wishful thinking? \n\t\tonDidPresent={this.focusRef} // focus our input when we present the modal, and some other stuff\n\t\tonDidDismiss={this.props.dismiss} // set the state toggle when we dismiss the modal\n\t    >\n\t\t<div className='modal-content-wrapper'>\n\t\t    <IonSearchbar \n\t\t\tautoFocus={true} // more wishful thinking?\n\t\t\tref={this.searcher} // give it a ref!\n\t\t\tanimated={true} // idk what this does\n\t\t\tspellcheck={true} // spellcheck\n\t\t\tclassName='search-bar'\n\t\t\t// if we are on the first item and with no query, then add a 'Previous' to the end\n\t\t\tplaceholder={`Let's go to..${(this.state.selected == 0 && this.state.query == '')?\"   |   Previous\" : \"\"}`} // TODO: jack do you like this? \n\t\t\t// when we change, set the query, then set the selected to the first item \n\t\t\tonIonChange={e => this.setState({query: e.detail.value, selected: 0})}\n\t\t\tdebounce={0} // update for every update\n\t\t\tonKeyDown={this.handleKeydown} // call our gross function \n\n\t\t    ////////\n\t\t    // loop through our filtered items, highlight if the index is right\n\t\t    // onclick nav there, on hover set the index and the styling\n\t\t    ////////\n\n\t\t    />\n\t\t    <div className='option-wrapper'> \n\t\t\t{this.filterItems(this.state.query).map((item, i) => {\n\t\t\t    return (\n\t\t\t\t<div \n\t\t\t\t    className=\"option-line\"\n\t\t\t\t    className= {`option-line ${(this.state.selected == i)? 'option-text-hover' : ''}`}\n\t\t\t\t    ref={(this.state.selected == i)? this.currentlySelected : null}\n\t\t\t\t    onMouseEnter={() => {\n\t\t\t\t\tthis.setState({selected: i}); \n\t\t\t\t    }}\n\t\t\t\t    onClick={()=>{\n\t\t\t\t\tthis.props.history.push(`/${item[1]}/${item[2]}`) // push to the history\n\t\t\t\t\tthis.props.paginate(...item.slice(1)); // paginate-ify it!\n\t\t\t\t\tthis.props.dismiss()\n\t\t\t\t    }}\n\n\t\t\t\t>\n\t\t\t\t    <i className={`${item[3]} option-icon`} style={{\n\t\t\t\t    }}></i>\n\t\t\t\t    <p \n\t\t\t\t\tclassName= {`option-text`}\n\t\t\t\t    >{item[0]}</p>\n\t\t\t\t</div>\n\t\t\t\t)\n\n\t\t\t    }\n\t\t\t)}\n\n\t\t    </div> \n\t\t</div>\n\n\t    </IonModal>\n\t) \n    }\n\n}\n\nexport default withRouter(QuickSwitcher);\n\n\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport bindGlobal from 'mousetrap-global-bind';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport QuickSwitcher from './QuickSwitcher'\n\nconst autoBind = require('auto-bind/react');\n\n\nclass Keybinds extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    sidebar_list: [], // what's in the sidebar? \n\t    sidebar_index: 0, // how far down the sidebar are we? \n\t    prop_store: '', // store props so we can check if they have changed \n\t    qs_show: false // is the quick switcher shown? \n\t}\n    }\n\n    // define the bindings! 2d array of keybind and function \n    // TODO TODO: for some reason binding works now, so replace that later? \n    // TODO: expand these keybinds. ie, n/p and up/down arrows\n    bindings = [\n\t[\"alt+1\", ()=>{this.sidebar_switcher(this, 0)}], // nav to upcoming keybind\n\t[\"alt+2\", ()=>{this.sidebar_switcher(this, 1)}], // nav to completed keybind\n\t[\"alt+3\", ()=>{this.sidebar_switcher(this, 2)}], // nav to item 3 keybind\n\t[\"alt+4\", ()=>{this.sidebar_switcher(this, 3)}], // nav to item 4 keybind\n\t[\"alt+5\", ()=>{this.sidebar_switcher(this, 4)}], // nav to item 5 keybind\n\t[\"alt+6\", ()=>{this.sidebar_switcher(this, 5)}], // nav to item 6 keybind\n\t[\"alt+7\", ()=>{this.sidebar_switcher(this, 6)}], // nav to item 7 keybind\n\t[\"alt+8\", ()=>{this.sidebar_switcher(this, 7)}], // nav to item 8 keybind\n\t[\"alt+9\", ()=>{this.sidebar_switcher(this, 8)}], // nav to item 9 keybind\n\t[\"alt+0\", ()=>{this.sidebar_switcher(this, this.state.sidebar_list.length-1)}], // nav to last item keybind\n\t[\"alt+j\", ()=>{this.sidebar_incrimentor(this, 1)}], // nav down keybind \n\t[\"alt+k\", ()=>{this.sidebar_incrimentor(this, -1)}], // nav up keybind \n    [\"command+enter\", ()=>{this.focusElement(this.props.abtib)}], // focus the FAB\n    ]\n\n    globalBindings = [\n\t[\"command+k\", ()=>{this.manageQs(this)}], // toggle quick swithcher keybind \n    ]\n    \n    //TODO: this doesnt work with clicking or like anything else but eh\n\n    sidebar_switcher(that, num){\n\tconst loca = this.state.sidebar_list[num]; // set our location to index in sidebar\n\tthat.props.history.push(`/${loca[0]}/${loca[1]}`) // push to the history\n\tthat.props.paginate(...loca); // paginate-ify it!\n\tthis.setState({sidebar_index: num}) // update the sidebar index \n    }\n\n    sidebar_incrimentor(that, num) {\n\tconst next_loca = this.state.sidebar_list[this.state.sidebar_index+num] // store the variable -- we can delet this. \n\tif (next_loca) { // if its defined, \n\t    this.sidebar_switcher(that, this.state.sidebar_index+num) // go there\n\t    // if it's not defined and it's at the end, \n\t} else if (this.state.sidebar_index == this.state.sidebar_list.length-1) {\n\t    this.sidebar_switcher(that, 0) // wrap around and go back to the beginning \n\t} else { // if it's not defined and not at the end, then it must be at the beginning,\n\t    this.sidebar_switcher(that, this.state.sidebar_list.length-1) // so go to the end \n\t}\n    }\n\n    setSidebarIndex(item) { // manage the quickswitcher sidebar index changing \n\tlet idx\n\tthis.state.sidebar_list.forEach((sidebarItem, i) => { // get passed an item, find the item \n\t    if (this.arraysAreIdentical(sidebarItem, item)) {\n\t\tidx = i\n\t    }\n\t})\n\tthis.setState({sidebar_index: idx})\n    }\n\n    arraysAreIdentical(arr1, arr2){ // helper function cus js bad \n\tfor (let i = 0, len = arr1.length; i < len; i++){\n\t    if (arr1[i] !== arr2[i]){\n\t\treturn false;\n\t    }\n\t}\n\treturn true; \n    }\n\n\n    manageQs(that) {\n\tthis.setState({qs_show: !this.state.qs_show}); \n    }\n\n    focusElement(ref) { // another helper function \n\tif (ref) {\n\t    ref.current.focus()\n\t}\n    }\n\n    componentDidUpdate(){\n\t//TODO: safe-proof(?) this\n\t// update the props\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.setState({\n\t\tsidebar_list: [\n\t\t    ['upcoming', ''], // set the first item to upcoming \n\t\t    // (i could do + but i think thats less efficent \n\t\t    ['completed', ''], // set the second item to completed\n\t\t    ['calendar', ''], // set the third item to calendar\n\t\t    ...this.props.perspectives.map(o => ['perspectives', o.id]), // map the perspectives\n\t\t    ...this.props.projects.map(o => ['projects', o.id]) // and the projects \n\t\t], \n\t\tprop_store: this.props //  and update the props \n\t    })\n\t}\n\n\t// TODO: get the current url and set the index that way \n\t//if (!this.state.sidebar_index) {\n\t//    this.setState({sidebar_index: side\n\n\t//}\n    }\n\n    // loop through and bind all our things!\n    componentDidMount() {\n\tthis.setState({prop_store: this.props})\n\n        this.bindings.map(combo => {\n\t\tMousetrap.bind(...combo)\n        })\n\n\tthis.globalBindings.map(combo => {\n\t\tMousetrap.bindGlobal(...combo)\n\t})\n    }\n\n    // loop through and unbind all our things!\n    componentWillUnmount() { \n        this.bindings.map(combo => {\n            Mousetrap.unbind(...combo)\n        })\n    }\n\n    render() { \n\treturn (\n\t    <QuickSwitcher \n\t\tqs_show={this.state.qs_show} \n\t\tdismiss={()=> this.setState({qs_show: false})}\n\t\titems={[this.props.perspectives]}\n\t\tpaginate={this.props.paginate}\n\t\tupdateIdx={this.setSidebarIndex}\n\t\tengine={this.props.engine} \n\t\tuid={this.props.uid} \n\t\tgruntman={this.props.gruntman} \n\n\n\t    /> \n\t)\n    }\n\n}\n\nexport default withRouter(Keybinds);\n\n\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t522,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t523,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t524,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t525,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t526,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t527,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t528,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t529,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t530,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t531,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t532,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t533,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t534,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t535,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t536,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t537,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t538,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t539,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t540,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t541,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t542,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t543,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t544,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t545,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t546,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t547,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t548,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t549,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t550,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t551,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t552,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t553,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t554,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t555,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t556,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t557,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t558,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t559,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t560,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t561,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t562,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t563,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t564,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 259;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t568,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 261;\nmodule.exports = webpackAsyncContext;","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\nconst autoBind = require('auto-bind/react');\n\nclass Repeat extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            name: \"\", // task's name\n            rule: \"none\", // the repeat rule\n            advanced: false, // advanced or not\n            on: undefined, // advanced repeat rules\n        }\n    }\n\n    async loadTask() {\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n        this.setState({\n            name: taskInfo.name, // name is name\n            rule: taskInfo.repeat ? taskInfo.repeat.rule : \"none\", // rule is rule, if there's a rule\n            advanced: taskInfo.repeat ? (taskInfo.repeat.on !== undefined) : false, // on is on, if there's a rule\n            on: taskInfo.repeat ? taskInfo.repeat.on : undefined, // on is on, if there's a rule\n        });\n    }\n\n    componentDidMount() {\n        this.loadTask();\n    }\n\n    render() {\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}} cssClass={\"task-repeat \"+(()=>{\n                // Different repeat modes require different height modals\n                 switch (this.state.rule) {\n                      case \"none\":\n                          return \"task-repeat__default\";\n                      case \"daily\":\n                          return \"task-repeat__default\";\n                      case \"weekly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-weekly\" : \"task-repeat__default\");\n                      case \"monthly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-monthly\" : \"task-repeat__default\");\n                      case \"yearly\":\n                          return \"task-repeat__default\";\n                  }\n            })()}>\n                <div>\n                    {/* Header */}\n                    <div className=\"repeat-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\"}}>\n\t\t\t                <b className=\"bold-prefix\" >{this.props.gruntman.localizations.repeat_word}</b> \n\t\t\t                <div className=\"repeat-task-name\">{this.state.name}</div>\n\t\t\t            </span>\n                        {/* Close button */}\n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                    </div>\n                    <div>\n                        <div className=\"repeat-basic-row\">\n                            <div className=\"repeat-rule-selector\">\n                            <span>\n                                <i className=\"repeat-label fa fa-redo\"></i>\n                                <span className=\"repeat-label\">{this.props.gruntman.localizations.repeat_word}</span>\n                            </span>\n                            {/* The big select, force iOS style */}\n                            <IonSelect className=\"repeat-select\" interface=\"popover\" value={this.state.rule} mode=\"ios\" onIonChange={e=>{\n                                    // Set the repeat\n                                    this.props.gruntman.do(\n                                        \"task.update\", \n                                        { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: e.detail.value}}}\n                                    )\n\n                                    // Set the state too!\n                                    this.setState({rule: e.detail.value, advanced: false, on: undefined});\n \n                                }}>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"none\">@NEEDLOC None</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"daily\">{this.props.gruntman.localizations.repeat_every_day}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"weekly\">{this.props.gruntman.localizations.repeat_every_week}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"monthly\">{this.props.gruntman.localizations.repeat_every_month}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"yearly\">{this.props.gruntman.localizations.repeat_every_year}</IonSelectOption>\n                            </IonSelect>\n                            </div>\n                                {\n                                    \n                                <a style={{color: \"var(--decorative-light-alt)\", float: \"right\", cursor: \"pointer\", display: [\"weekly\", \"monthly\"].includes(this.state.rule) ? \"inline\" : \"none\" }} className={\"fas \" + (this.state.advanced ? \"fa-caret-down\":\"fa-caret-up\")} onClick={()=> {\n                                    if (this.state.advanced) {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule}}}\n                                        ) // undo advanced \n                                        this.setState({rule: this.state.rule, advanced: false, on: undefined}); // set the state too!\n                                    } else {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: []}}}\n                                        ) // do advanced \n                                        this.setState({rule: this.state.rule, advanced: true, on: []}); // set the state too!\n                                    }\n                                }}></a>\n                                }\n                        </div>\n                    </div>\n                    <div style={{margin: \"10px 20px\", color: \"var(--content-normal-alt)\"}}>\n                        {(()=>{\n                            if (this.state.advanced)\n                                switch (this.state.rule) {\n                                    case \"weekly\":\n                                        return (\n                                            <div className=\"repeat-weekgrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {/* [\"originalString\", \"localizedString\"] <= localize in this way */}\n                                                {[[\"M\", this.props.gruntman.localizations.repeat_datework_weekname_m], [\"T\", this.props.gruntman.localizations.repeat_datework_weekname_tu], [\"W\",  this.props.gruntman.localizations.repeat_datework_weekname_w], [\"Th\",  this.props.gruntman.localizations.repeat_datework_weekname_th], [\"F\",  this.props.gruntman.localizations.repeat_datework_weekname_f], [\"S\",  this.props.gruntman.localizations.repeat_datework_weekname_sa], [\"Su\",  this.props.gruntman.localizations.repeat_datework_weekname_su]].map(e => <a key={e} className={\"repeat-weekgrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e[0]) ? \"repeat-weekgrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e[0])) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e[0]);\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e[0]);\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e[1]}</a>)}\n                                            </div>\n                                        )\n                                    case \"monthly\":\n                                        return (\n                                            <div className=\"repeat-dategrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"Last\"].map(e => <a key={e} className={\"repeat-dategrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e.toLowerCase()) ? \"repeat-dategrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e.toLowerCase())) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e.toLowerCase());\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e.toLowerCase());\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e}</a>)}\n                                            </div>\n                                        );\n                                }\n                        })()}\n                    </div>\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default Repeat;\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport './TagEditor.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n/*\n * Although I do not agree\n * Jack told me to make this feat\n * I did not make this carefree\n * yet this is far from elite\n *\n * I resolved to give it a try\n * and encountered this very strange bug\n * This thing makes me want to cry\n * Front-end is far from a drug\n *\n * I may be exageratting\n * Maybe this bug wasn't so bad\n * But still I cannot add padding\n * and it still makes me very sad\n *\n * React may feel like a drug\n * Until you find the next bug\n *\n * by @zbuster05\n * */\n\nconst autoBind = require('auto-bind/react');\n\nclass TagEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tagList: []\n        }\n    }\n\n   async setTagState() {\n        this.state.tagList = await this.props.engine.db.getTags(this.props.uid);\n    }\n   // TODO BADDD \n    componentDidMount() {\n        this.setTagState()\n    }\n\n    tagClicked() {\n        console.log(\"Tag Clicked!\")\n    }\n\n    render() {\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidPresent={() => {this.setTagState()}} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5, border: \"1px solid red\"}} cssClass={\"tag-editor\"}>\n\n                {/*Text Header*/}\n                <div className=\"TagEditor-header\">\n                    <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\n\t\t\t            <b className=\"bold-prefix\" >Tags</b> \n\t\t\t        </span>\n\n                    {/*Close Button*/}\n                    <a className=\"TagEditor-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                </div>\n                \n                {/*Like actual tag setting stuff*/}\n                <div className=\"tag-pane-container\">\n                    <div className=\"tag-list\">\n                        {this.state.tagList.map(tag => {\n                            return (\n                                <div className=\"tag-in-list\" /*onClick={this.tagClicked()}*/>\n                                    <div className=\"tag-name\">\n                                        {tag.name}\n                                    </div>\n                                    <a className=\"TagEditor-close\" /*onClick={console.log(\"x clicked\")}*/><i className=\"fa fa-times\"></i></a>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div className=\"tag-settings\"></div>\n                </div>\n            </IonModal>\n        )\n    }\n}\n\nexport default TagEditor\n","// A whole lotta imports\n\n// Ionic components\nimport { IonItem, IonInput, IonContent, IonGrid, IonRow, IonCol, IonSegment, IonLabel, IonButton, IonPopover } from '@ionic/react';\n\n// Detect whether is mobile\nimport { getPlatforms } from '@ionic/react';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// React Spring animation packages\nimport { Spring, animated, Keyframes } from 'react-spring/renderprops'\n\n// Cool components \nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable';\n\n// Our very own repeat UI\nimport Repeat from './Repeat';\n\n// Our very own tag editor UI\nimport TagEditor from './TagEditor';\n\n// Our very own calendar popover\nimport CalendarPopover from './CalendarPopover';\n\n// Our very own CSS\nimport './Task.css';\n\n// Oooips\nimport ReactTooltip from 'react-tooltip';\n\n// FNS date parcing utils\nconst { parseFromTimeZone } = require('date-fns-timezone')\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\n\n/*\n *\n * Hello human,\n *\n * I am a task.\n *\n * You seriously are reading the help poem about this?\n *\n * @jemoka\n *\n */\n\n\n// Our very own custom animatinos\nconst AnimationFactory = Keyframes.Spring({\n    // Open->close animation\n    hide: {\n        to: {\n            taskHeight:38, \n            taskMargin: \"2px 8px\", \n            taskBackground:\"\", \n            taskPadding: 3,\n            taskEditOpacity: 0,\n            taskEditMaxHeight: 0,\n            taskOpacity: 1,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskDisplay: \"\",\n            taskMaxHeight: 40,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n\n    },\n    // Close->open animation\n    show: {\n        to: {\n            taskHeight:38, \n            taskMargin:\"15px 25px\", \n            taskBackground:\"var(--task-selected)\", \n            taskPadding: 10,\n            taskEditOpacity: 1,\n            taskDisplay: \"\",\n            taskOpacity: 1,\n            taskEditMaxHeight: 300,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskMaxHeight: 500,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n    },\n    // Incomplete->complete animation\n    complete: [\n        {\n            to: {\n                taskMargin: \"14px 8px\", \n                taskNameDecoration: \"line-through\",\n                taskOpacity: 1,\n                taskPosition: \"\",\n            },\n            config: {\n                tension: 200,\n                friction: 25,\n                mass: 1\n            },\n\n        }, \n        {\n            to: {\n                taskMaxHeight: 0,\n                taskHeight:0, \n                taskOpacity: 0,\n                taskMargin: \"0px 8px\", \n                taskPadding: 0,\n                taskPosition: \"absolute\",\n            },\n            config: {\n                tension: 800,\n                friction: 50,\n                mass: 1\n            },\n        }\n    ],\n})\n\n// Aww sheat, here we go\nclass Task extends Component {\n\n    constructor(props) {\n        // Invoke React's constructor\n        super(props);\n\n        // Bind it good!\n        autoBind(this);\n\n        this.state = { \n            expanded: false, // are we expanded?\n            deferDate: undefined, // what's our defer date?\n            dueDate: undefined, // what's our due date?\n            name: \"\", // what's our name string?\n            desc: \"\",  // what's our description string?\n            isFlagged: false, // are we flagged?\n            isFloating: false, // are we floating? or just eating jello?\n            project:\"\", // what's our project ID?\n            tags: [], // what are the IDs of our tags?\n            decoration: \"\",  // are we \"od\" \"ds\" or just just good ol' \"\"?\n            availability: true, // are we avaliable? or are we deferred or blocked (in which case it'd be false.)\n            isComplete: false, // are we completed?\n            showRepeat: false, // is our repeat UI shown?\n            showTagEditor: false, // is our TagEditor UI shown?\n            deferPopoverShown: false, // is the defer calendar popover shown?\n            duePopoverShown: false, // is the due calendar popover shown?\n            startingCompleted: this.props.startingCompleted, // disable immediate onComplete animation for completed\n            possibleTags: this.props.datapack[0], // tags will need to be dynamically added, so\n            haveBeenExpanded: (this.props.startOpen !== undefined && this.props.startOpen !== false), // did we render the edit part yet? optimization\n            notificationPopoverShown: [false, null], // is our notification popover shown?\n            notificationCalendarShown: false, // is the notification calendar shown?\n            hasNotification: false // do we have a notification scheudled?\n        }\n        this.initialRenderDone = false; // wait for data to load to make animation decisions\n        this.me = React.createRef(); // who am I? what am I?\n        this.repeater = React.createRef(); // what's my repeater?\n        this.checkbox = React.createRef(); // what's my pseudocheck\n        this.TagEditorRef = React.createRef(); // what's my tag editor\n        this.actualCheck = React.createRef(); // what's my (actual, non-seen) checkmark\n        this.duePopover = React.createRef(); // what's my due popover?\n        this.deferPopover = React.createRef(); // what's my defer popover?\n        this.notificationPopover = React.createRef(); // what's my notification popover?\n        this.notificationCalender = React.createRef(); // what's my notification calandar?\n    }\n\n    showRepeat() {this.setState({showRepeat: true})} // util func for showing repeat\n    hideRepeat() {this.setState({showRepeat: false})} // util func for hiding repeat\n\n    showTagEditor() {this.setState({showTagEditor: true})} // function for showing tag editor\n    showTageEditor() {this.setState({showTageEditor: false})}  // function for hiding tag editor\n\n    showNotificationPopover(e) {\n        if (this.state.hasNotification)\n            this.setState({notificationPopoverShown: [true, e.nativeEvent]})\n        else \n            this.setState({notificationCalendarShown: true})\n    }\n\n    // Monster function to query task info TODO TODO #cleanmeup\n    async loadTask() {\n\n        // Obviously we need this, the task info\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n\n        // Setting state to update the rest of them elements\n        this.setState({\n            name: taskInfo.name, // Set name field\n            desc: taskInfo.desc, // Set task description\n            project: taskInfo.project,  // Set project ID\n            tags: taskInfo.tags, // Set tag ID array\n            isFloating: taskInfo.isFloating, // Set isFloating bool\n            isFlagged: taskInfo.isFlagged, // Set is Flagged bool\n            isComplete: taskInfo.isComplete, // Set is complete style\n            dueDate: (\n                taskInfo.due ? // If we have a due date\n                (taskInfo.isFloating ? // and if we are floating\n                    new Date(taskInfo.due.seconds*1000) : // then the due date in just... the due date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.due.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ):\n                undefined \n            ), \n            deferDate: (\n                taskInfo.defer ? // If we have a defer date\n                (taskInfo.isFloating ?  // and if we are floating\n                    new Date(taskInfo.defer.seconds*1000) : // then the defer date is just... the defer date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.defer.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ): undefined\n            ),\n            hasNotification: await this.props.gruntman.checkNotification(this.props.tid),\n        });\n        this.refreshDecorations(); // flush and generate them decorations!\n        this.initialRenderDone = true;\n    }\n\n    refreshDecorations() {\n        if (this.state.dueDate) // if we gotta due date\n            if (this.state.dueDate-(new Date()) < 0) // and this kid has not done his homework\n                this.setState({decoration: \"od\"}); // give 'em a red badge\n        else if (this.state.dueDate-(new Date()) < 24*60*60*1000) // or if this kid has not done his homework a day earlier\n            this.setState({decoration: \"ds\"}); // give 'em an orange badge\n        else \n            this.setState({decoration: \"\"}); // give 'em an nothing badge\n\n        if (this.state.deferDate) // if we gotta defer date\n            if (this.state.deferDate-(new Date()) > 0) // and this kid is trying to start early\n                this.setState({availability: false}); // tell 'em it's not avaliable\n        else if (this.props.availability === true) //  otherwise, if this thing's avaliable\n            this.setState({availability: true}); // set it to be so!\n        else if (!this.props.availability) // or if my props make me disabled\n            this.setState({availability: false}); // well then you gotta follow them props, no?\n    }\n\n    componentDidMount() {\n        this.loadTask(); // load the task when we mount   \n        document.addEventListener('mousedown', this.detectOutsideClick, false); // and listen for clicks everywhere\n    }\n\n    componentWillUnmount = () => document.removeEventListener('mousedown', this.detectOutsideClick, false); // remove the listener... no memory leaks plez\n\n    toggleTask = () => this.setState(state => ({expanded: !state.expanded})); // util function to toggl a task\n    \n    closeTask() {\n        this.setState({expanded: false});\n    }\n    //closeTask = () => this.setState({expanded: false}); // util function to close a task\n\n    openTask() {\n        if (this.state.haveBeenExpanded)\n            this.setState({expanded: true});\n        else \n            this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }// util function to open a task\n\n    _explode() {\n        // You should probably be calling openTask()\n        this.initialRenderDone = true;\n        this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }\n\n    detectOutsideClick(e) {\n\n        if (this.me.current) // if we are mounted\n            if (this.me.current.contains(e.target)) // if we are clicking me\n                return; //click inside\n\n        if (this.repeater.current) // if our repeater is a thing that mounted\n            if (this.repeater.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.duePopover.current) // if our due popover is a thing that mounted\n            if (this.duePopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.deferPopover.current) // if our defer popover is a thing that mounted\n            if (this.deferPopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.notificationPopover.current) // if our notification popover is a thing that mounted\n            if (this.notificationPopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.notificationCalender.current) // if our notification calendar is a thing that mounted\n            if (this.notificationCalender.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n        \n        if (this.TagEditorRef.current) // if our repeater is a thing that mounted\n            if (this.TagEditorRef.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n        \n        //if (this.props.envelope) // if we have a drag envelope\n            //if (this.props.envelope.current) // if we have a drag envelope\n                //if (this.props.envelope.current.contains(e.target)) // and we are clicking inside that\n                    {/*return; //click inside*/}\n\n        // DRAG ENVELOPES ARE SUPPOSED TO PROTECT AGAINST DRAGGING, AND ARE UNIVERSAL ACROSS ALL TASKS\n        // UNCOMMENTING THIS WILL MAKE MULTIPLE TASKS OPEN AT ONCE ON UPCOMING\n\n        if (document.getElementById(\"parking-lot\").contains(e.target))\n            return;\n\n        if (this.props.onModal)\n            if (document.getElementById(\"airplane-hanger\").contains(e.target))\n                return;\n\n        if (this.state.showRepeat) // if we are showing our repeat\n            return; //click inside\n\n        if (this.state.showTagEditor) // if we are showing TagEditor\n            return; // click inside\n\n        //otherwise,\n        this.closeTask();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevState.deferDate !== this.state.deferDate) // if we updated the defer date\n            this.refreshDecorations();\n        if (prevState.dueDate !== this.state.dueDate) // if we updated the due date\n            this.refreshDecorations();\n        if (prevState.expanded !== this.state.expanded && this.state.expanded === true) {// if we opened a task for updating\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"none\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(false); // disable drag\n            this.props.gruntman.lockUpdates(); // tell gruntman to chill\n        }\n        else if (prevState.expanded !== this.state.expanded && this.state.expanded === false) { // if we closed a task\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"block\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(true); // enable drag\n            this.props.gruntman.unlockUpdates(); // tell gruntman to... grunt!\n        }\n        if (prevProps.startOpen !== this.props.startOpen && this.props.startOpen) // we are newly starting open\n            this.openTask(); // open task\n    }\n\n\n    // ready fo this?\n\n    render() {\n\n        return (\n            <div>\n\n                {/*animation factory to orchistrate animations*/}\n\n                <AnimationFactory\n\n                    native  \n\n                    state = {\n                        this.initialRenderDone ?\n                            (this.state.isComplete? // if we are complete \n                                (this.state.startingCompleted? // and we start complete \n                                    (this.state.expanded? // and we are expanded \n                                        \"show\":\"hide\") // show, otherwise, hide \n                                        :\"complete\") // if we are complete,  and don't start completed, complete. \n                                        : // if we arnt complete, \n                                this.state.startingCompleted ?  // and we start complete \n                                \"complete\" :\n                                (this.state.expanded? \"show\":\"hide\")):\"hide\"\n                    } // if we are incomplete, and we start incomplete, then show or hide based on expanded \n\n                >\n                    {animatedProps => {\n                        return (\n                            // Actual task container, now\n                            <animated.div \n                                onClick={(e)=>{\n                                    if(!this.state.expanded && e.target !== this.checkbox.current && e.target !== this.actualCheck.current && !this.props.freeze && !(this.state.isComplete&&!this.state.startingCompleted)) { \n                                        this.openTask(); // open the task\n                                    }\n                                }}\n                                className={\"task \"+(this.state.expanded?\"expanded\":\"collapsed\")} \n\n                                ref={this.me} \n\n                                style={{\n                                    minHeight: animatedProps.taskHeight, \n                                    maxHeight: animatedProps.taskMaxHeight, \n                                    margin: animatedProps.taskMargin, \n                                    background:animatedProps.taskBackground, \n                                    opacity:animatedProps.taskOpacity, \n                                    overflow: \"hidden\",\n                                    display: animatedProps.taskDisplay,\n                                    position: animated.taskPosition,\n                                    padding: animatedProps.taskPadding}}\n                            >\n\n                                {/* Chapter 0: Utility Components */}\n\n                                {/* Gotta get those on hover tips */}\n                                {/* And load up + hide the repeat UI, too! */}\n                                <Repeat tid={this.props.tid} reference={this.repeater} isShown={this.state.showRepeat} onDidDismiss={this.hideRepeat} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                {/* As well as load up + hide the tag editor!*/}\n                                <TagEditor reference={this.TagEditorRef} isShown={this.state.showTagEditor} onDidDismiss={()=>this.setState({showTagEditor: false})} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                \n                                {/* Chapter 1: Task Checkmark */}\n                                {/* Who could have thought so much code goes into a checkbox? */}\n                                <div style={{display: \"inline-block\", transform: \"translateY(-3px)\"}}>\n                                    {/* First, an invisible checkmark */}\n                                    <input \n                                        type=\"checkbox\" \n\n     ref={this.actualCheck}\n                                        id={\"task-check-\"+this.props.tid} \n                                        className=\"task-check\"\n                                        defaultChecked={this.props.startingCompleted}\n                                        onChange={()=>{\n\n                                            // If we are uncompleting a task (that is, currently task is complete) \n                                            if (this.state.isComplete) {\n                                                this.props.gruntman.lockUpdates();\n                                                // Well, first, uncomplete it\n                                                this.setState({isComplete: false})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__uncomplete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                // Whatever this is\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                            // If we are completing a task (that is, currently task is incomplete)\n                                            else if (!this.state.isComplete) {\n                                                // Lock updates so that animation could finish\n                                                this.props.gruntman.lockUpdates();\n                                                // Complete it\n                                                this.setState({isComplete: true})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__complete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                //TODO wait for animation to finish before state update??\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                        }} \n                                        style={{opacity: this.state.availability?1:0.35}}\n                                    />\n\n                                    {/* Oh yeah, that checkmark above you can't actually see */}\n                                    {/* Here's what the user actually clicks on, the label! */}\n                                    <label ref={this.checkbox} className={\"task-pseudocheck \"+this.state.decoration} id={\"task-pseudocheck-\"+this.props.tid} htmlFor={\"task-check-\"+this.props.tid}>&zwnj;</label>\n                                </div>\n\n                                {/* The animated input box */}\n                                <animated.input \n                                    defaultValue={this.state.name} \n                                    onChange={\n                                        (e)=>{\n                                            // THIS. REFER TO THIS. YOU ARE HERE. STOP SEARCHING.\n                                            // :point down: is FANCYCHANGE\n\n                                            // If somebody dares to do the complicated action of task name change\n                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n\n                                            // Register a scheduler to watch for more changes\n                                            // because dang react calls onChange on every freaking change\n                                            // TODO TODO destruct all schedulers on view change\n                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                \"task.update\", // the scheduler actually updates the task\n                                                {\n                                                    uid: this.props.uid, \n                                                    tid: this.props.tid, \n                                                    query:{name: e.target.value} // setting the name to the name\n                                                }\n                                            ), `task-name-${this.props.tid}-update`) // and we will schedule it as this\n                                        }\n                                    } \n\n                                    onFocus={(e)=>{ \n                                        // open the task if its not open already\n                                        if(!this.state.expanded) { \n                                            //this.openTask(); // open the task\n                                            if (getPlatforms().includes(\"mobile\")) e.target.blur(); // blur, only if mobile to fix bugs where even in attempted readonly the cursor blurs\n                                        }\n                                    }} \n                                    className={\"task-name \"+(this.state.expanded?\"\":\"no-select\")} \n                                    readOnly={(!this.state.expanded)} \n                                    type=\"text\" \n                                    autoComplete=\"off\" \n                                    placeholder={this.props.gruntman.localizations.nt} \n                                    style={{opacity: this.state.availability?1:0.35, textDecoration: animatedProps.taskNameDecoration}} />\n\n                                {/* Task edit. The thing that slides open on edit. */}\n                                {(() => {\n                                    if (this.state.haveBeenExpanded===true)\n                                        return(\n                                            <animated.div className=\"task-edit\" style={{opacity: animatedProps.taskEditOpacity, overflow: \"hidden\",maxHeight: animatedProps.taskEditMaxHeight}}>\n\n                                                {/* First, task description field */}\n                                                <textarea \n                                                    placeholder={this.props.gruntman.localizations.desc} \n                                                    className=\"task-desc\" \n                                                    style={{marginBottom: 10}} \n                                                    defaultValue={this.state.desc}\n                                                    onChange={\n                                                        (e)=>{\n                                                            // Register a scheduler to deal with React's onChange\n                                                            // Search for the word FANCYCHANGE to read my spheal on this\n                                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                                \"task.update\", \n                                                                {\n                                                                    uid: this.props.uid, \n                                                                    tid: this.props.tid, \n                                                                    query:{desc: e.target.value}\n                                                                }\n                                                            ), `task-desc-${this.props.tid}-update`)\n                                                        }\n                                                    }\n                                                >\n                                                </textarea>\n\n                                                {/* Task icon set. TODO delete task */}\n                                                <div style={{display: \"inline-block\", marginBottom: 6, transform: \"translateY(-5px)\"}}>\n                                                    {/* Flagged icon */}\n                                                    <a data-tip={this.props.gruntman.psp_flg} className=\"task-icon\" style={{borderColor: this.state.isFlagged ? \"var(--task-icon-ring-highlighted)\":\"var(--task-icon-ring)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the flagged state to the opposite of whatever it is\n                                                        // Both on the db...\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFlagged: !this.state.isFlagged}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFlagged: !this.state.isFlagged});\n\n                                                    }}><i className=\"fas fa-flag\" style={{margin: 3, color: this.state.isFlagged ? \"var(--task-icon-highlighted)\" : \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Floating icon */}\n                                                    <a data-tip=\"LOCALIZE: Floating\" className=\"task-icon\" style={{borderColor: this.state.isFloating? \"var(--task-icon-ring-highlighted)\":\"var(--task-icon-ring)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the floating state to the opposite of whatever it is\n                                                        // Both on the db... TODO flush the timezone too?\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFloating: !this.state.isFloating}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFloating: !this.state.isFloating});\n\n                                                    }}><i className=\"fas fa-globe-americas\" style={{margin: 3, color: this.state.isFloating? \"var(--task-icon-highlighted)\" : \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Repeat icon that, on click, shows repeat */}\n                                                    <a onClick={this.showRepeat} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}} data-tip=\"LOCALIZE: Repeat\"><i className=\"fas fa-redo\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}} ></i></a>\n\n                                                    {/* Notification icon that, on click, shows notify popover */}\n                                                    <CalendarPopover  gruntman={this.props.gruntman} reference={this.notificationCalender} uid={this.props.uid} disableOnclick engine={this.props.engine} isShown={this.state.notificationCalendarShown} onDidDismiss={()=>this.setState({notificationCalendarShown: false})} useTime initialDate={this.state.dueDate} onDateSelected={(d)=>{\n                                                        this.props.gruntman.cancelNotification(this.props.tid).then(()=>{\n                                                            this.props.gruntman.scheduleNotification(this.props.tid, this.props.uid, this.state.name, this.state.desc, d);\n                                                            this.setState({hasNotification: true});\n                                                        });\n                                                    }}/>\n                                                    <IonPopover\n                                                        showBackdrop={false}\n                                                        isOpen={this.state.notificationPopoverShown[0]}\n                                                        cssClass='notif-popover'\n                                                        mode=\"md\" \n                                                        onDidDismiss={e => this.setState({notificationPopoverShown: [false, null]})}\n                                                        event={this.state.notificationPopoverShown[1]}\n                                                        ref={this.notificationPopover}\n                                                    >\n                                                        <div>\n                                                            <div className=\"notification-popover-item\" onClick={()=>{\n                                                                this.props.gruntman.cancelNotification(this.props.tid)\n                                                                this.setState({hasNotification: false, notificationPopoverShown: [false, null]});\n                                                            }}>Cancel Notification</div>\n                                                            <div className=\"notification-popover-item\" onClick={()=>this.setState({notificationCalendarShown: true, notificationPopoverShown:[false, null]})}>Change Notification</div>\n                                                        </div>\n                                                    </IonPopover>\n                                                    {(()=>{\n                                                        if (this.props.gruntman.notifPermissionGranted && !(getPlatforms().includes(\"mobileweb\") || getPlatforms().includes(\"desktop\")))\n                                                            return <a onClick={this.showNotificationPopover} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}} data-tip=\"LOCALIZE: Repeat\"><i className=\"fas fa-bell\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5.5px)\"}} ></i></a>\n                                                    })()}\n\n                                                    {/* TagEditor icon that shows TagEditor on click*/}\n                                                    <a onClick={this.showTagEditor} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", marginRight: 20, cursor: \"pointer\"}} data-tip=\"LOCALIZE: Freaking TagEditor\"><i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}}></i></a>\n                                                    {/*<div className=\"task-icon\" style={{borderColor: \"var(--task-checkbox-feature-alt)\", marginRight: 20}}><a className=\"fas fa-globe-americas\" style={{margin: 3, color: \"var(--task-textbox)\", fontSize: 13, transform: \"translate(2.5px, -0.5px)\"}}></a></div>*/}\n                                                </div>\n\n\n                                                {/* Task date set */}\n                                                <div style={{display: \"inline-block\", marginBottom: 8}}>\n\n                                                    {/* Defer date container */}\n                                                    <div style={{display: \"inline-block\", marginRight: 10, marginBottom: 5, marginLeft: 6}}>\n                                                        {/* The. Defer. Date. */}\n                                                        <i className=\"fas fa-play\" data-tip=\"LOCALIZE: Defer Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        <CalendarPopover  gruntman={this.props.gruntman} reference={this.deferPopover} uid={this.props.uid} engine={this.props.engine} isShown={this.state.deferPopoverShown} onDidDismiss={()=>this.setState({deferPopoverShown: false})} useTime initialDate={this.state.deferDate} onDateSelected={(d)=>{\n                                                            this.props.gruntman.do(\n                                                                \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                            )\n                                                            this.setState({deferDate: d});\n\n                                                        }}/>\n                                                        {(() => {\n                                                            {/* The. Defer. Date. Input. */}\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\"))} defaultValue={value}  onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // DATEHANDLING is here too. If you are looking for that, stop searching\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value); // NLP that date!\n                                                                            if (d) this.setState({deferDate: d}); // we we got a valid date, update the calendar UI\n                                                                            if (d) // and update the database too!\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n                                                                        }, `task-defer-${this.props.tid}-update`)\n                                                                    }} onFocus={(e) => {\n                                                                        if (getPlatforms().includes(\"mobile\"))\n                                                                            this.setState({deferPopoverShown: true})\n                                                                        else {\n                                                                            onClick();\n                                                                            e.target.focus();\n                                                                        }\n\n                                                                    }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // TIMEHANDLING is here. If you are searching for that, it's here.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds()); // TODO make this with the onChange API\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.deferDate}\n                                                                    portalId={this.props.onModal?\"airplane-hanger\":\"parking-lot\"}\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({deferDate: date});\n\n                                                                        // No longer needed. State updates handle decoration udpates. Kept here for decorative purposes:\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                    showTimeInput\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n\n                                                    <div style={{display: \"inline-block\", marginBottom: 5, marginLeft: 6}}>\n                                                        <i className=\"fas fa-stop\" data-tip=\"LOCALIZE: Due Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        {/* Due date popover */}\n                                                        <CalendarPopover  gruntman={this.props.gruntman} reference={this.duePopover} uid={this.props.uid} engine={this.props.engine} isShown={this.state.duePopoverShown} onDidDismiss={()=>this.setState({duePopoverShown: false})} useTime initialDate={this.state.dueDate} onDateSelected={(d)=>{\n                                                            this.props.gruntman.do(\n                                                                \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                            )\n                                                            this.setState({dueDate: d});\n\n                                                        }}/>\n                                                        {(() => {\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\")) ? true : false} defaultValue={value} onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // Search for the word DATEHANDLING for what the heck the code actually does\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value);\n                                                                            if (d) this.setState({dueDate: d});\n                                                                            if (d)\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n\n                                                                        }, `task-due-${this.props.tid}-update`)\n                                                                    }\n                                                                        } onFocus={(e) => {\n                                                                            if (getPlatforms().includes(\"mobile\"))\n                                                                                this.setState({duePopoverShown: true})\n                                                                            else {\n                                                                                onClick();\n                                                                                e.target.focus();\n                                                                            }\n                                                                        }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // Search for TIMEHANDLING for notes on time handling.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds());\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.dueDate}\n                                                                    portalId={this.props.onModal?\"airplane-hanger\":\"parking-lot\"}\n                                                                    onChange={date => this.setState({dueDate: date})}\n                                                                    showTimeInput\n                                                                    isClearable\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({dueDate: date});\n\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    {/* Task project container */}\n                                                    <span className=\"task-project-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-list-ul\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, marginRight: 5, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Project select */}\n                                                        <Select \n                                                            options={this.props.datapack[1]}\n                                                            className='task-project'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            styles={{\n                                                                // Fixes the overlapping problem of the component\n                                                                menuPortal: provided => ({ ...provided, zIndex: \"99999 !important\" })\n                                                            }}\n                                                            menuPortalTarget={document.body}\n                                                            value={this.props.datapack[1].filter(option => option.value === this.state.project)}\n                                                            onChange={(e)=>{\n                                                                {/* :point up: filter for only options with this project and set that to be the value */}\n                                                                {/* Actually update the project */}\n                                                                this.props.gruntman.do(\"task.update__project\", { uid: this.props.uid, tid: this.props.tid, oldProject: this.state.project===\"\"?undefined:this.state.project, project: (e?e.value:\"\")})\n                                                                {/* And set the state, too! */}\n                                                                this.setState({project:(e?e.value:\"\")});\n                                                            }}\n                                                        />\n                                                    </span>\n                                                    {/* Task tag container */}\n                                                    <span className=\"task-tag-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Tag select */}\n                                                        <CreatableSelect\n                                                            options={this.props.datapack[0]}\n                                                            className='task-tag'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            isMulti\n                                                            styles={{ menuPortal: base => ({ ...base, zIndex: \"99999 !important\" }) }}\n                                                            menuPortalTarget={document.body}\n                                                            value={this.props.datapack[0].filter(option => this.state.tags.includes(option.value))}\n                                                            onChange={(newValue, actionMeta) => {\n                                                                let view = this;\n                                                                let tids = newValue?newValue.map(async function (e) { // for each tag\n                                                                    if (e.__isNew__) { // if it's a new tag\n                                                                        let tagID = (await view.props.gruntman.do( // create it!\n                                                                            \"tag.create\",\n                                                                            {\n                                                                                uid: view.props.uid,\n                                                                                name: e.label,\n                                                                            }, \n                                                                        )).id;\n                                                                        let originalTags = view.state.possibleTags; // get tags\n                                                                        originalTags.push({label: e.label, value: tagID}); // add our new tag\n                                                                        view.setState({possibleTags: originalTags}); // sax-a-boom!\n                                                                        return tagID;\n                                                                    } else\n                                                                        return e.value;\n                                                                }):[]; // find the correct tags sets, or set it to an empty set\n                                                                Promise.all(tids).then(tagIDs => {\n                                                                    this.setState({tags: tagIDs}); // set the state\n                                                                    this.props.gruntman.do(\n                                                                        \"task.update\", \n                                                                        {\n                                                                            uid: this.props.uid, \n                                                                            tid: this.props.tid, \n                                                                            query:{tags: tagIDs} // set a taskID\n                                                                        }\n                                                                    )\n                                                                });\n                                                            }}\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </animated.div>\n                                        )\n                                })()}\n                            </animated.div>\n                        )}\n                    } \n                </AnimationFactory>\n            </div >\n\n\n        )\n    }\n}\n\nexport default Task;\n\n","import dbManager from \"./DBManager\"\nlet cRef = dbManager.cRef;\n\nconst util = {\n    select: {\n        compare: (lhs, cmp, rhs) => {\n            switch (cmp) {\n                case \"<\":\n                    return lhs < rhs;\n                case \">\":\n                    return lhs > rhs;\n                case \"<=\":\n                    return lhs <= rhs;\n                case \">=\":\n                    return lhs >= rhs;\n                case \"==\":\n                    return lhs == rhs;\n                case \"!=\":\n                    return lhs != rhs;\n                case \"has\":\n                    return lhs.includes(rhs);\n                case \"!has\":\n                    return !lhs.includes(rhs);\n                default:\n                    throw new TypeError(\"Unkown comparator \" + cmp);\n            }\n        },\n        all: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (!util.select.compare(dat[lhs], cmp, rhs))\n                    return false;\n            return true;\n        },\n        any: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs))\n                    return true;\n            return false;\n        },\n        atLeast: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter >= threshold)\n                        return true;\n                }\n            return false;\n        },\n        atMost: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter > threshold)\n                        return false;\n                }\n            return true;\n        }\n    },\n    debug: {\n        log: (arg) => {\n            console.log(arg);\n            return arg;\n        },\n        trace: (arg) => {\n            console.trace(arg);\n            return arg;\n        }\n    }\n};\n\nasync function getTasks(userID) {\n    return cRef(\"users\", userID, \"tasks\").get()\n    .then(snap => snap.docs\n        .map(doc => doc.id)\n    ).catch(err => {\n        console.error('Error getting documents', err);\n    });\n}\n\nasync function getTasksWithQuery(userID, query) {\n    let taskDocs = await cRef(\"users\", userID, \"tasks\")\n        .get()\n        .then(snap => snap.docs\n            .filter(query)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return taskDocs.map(doc => doc.id);\n}\n\nasync function getInboxTasks(userID) {\n    let inboxDocs = await cRef(\n        \"users\", userID,\n        \"tasks\")\n        //['project', '==', ''],\n        //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(util.select.all(['project', '==', ''], ['isComplete', '==', false]))\n            .sort((a,b) => a.data().order - b.data().order)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return inboxDocs.map(doc => doc.id);\n}\n\nasync function getDSTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(dsTime.getHours() + 24);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function dueTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(23,59,59,999);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function selectTasksInRange(userID, min=(new Date(1900, 1, 1)), max=(new Date(2100, 1, 1)), returnFull=false) {\n/*    let maxT = max;*/\n    //let minT = min;\n    //maxT.setHours(23, 59, 59, 999);\n    /*minT.setHours(0, 0, 0, 0);*/\n    let tasks = await cRef(\"users\", userID, \"tasks\")\n                    .get()\n                    .then(snap => snap.docs\n                        .filter(doc =>\n                            (doc.data().due ?\n                                (doc.data().defer ?\n                                    (new Date(doc.data().due.seconds*1000)) <= max && (new Date(doc.data().due.seconds*1000)) >= min && (new Date() >= (new Date(doc.data().defer.seconds*1000)))\n                                : false) \n                                : false)\n                        )\n                        .filter(doc => !doc.data().isComplete)\n                        .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n                    ).catch(console.error);\n    return returnFull ? tasks.map(doc => [doc.id, doc.data()]):tasks.map(doc => doc.id);\n}\n\nasync function getDSRow(userID, avaliable) {\n    console.warn(\"DEPERCATED: use instead selectTasksInRange\");\n    let ibt = await getInboxTasks(userID);\n    let d = new Date();\n    let dsTasks = [];\n    let prev = [];\n    for (let i=0; i<=7; i++) {\n        let content = (await dueTasks(userID, avaliable, d))\n        let cache = content;\n        dsTasks.push(content.filter(x => !prev.includes(x)));\n        prev = cache;\n        d.setDate(d.getDate() + 1)\n    }\n    return dsTasks.map(dst => dst.filter(x => ibt.indexOf(x) < 0));\n}\n\nasync function getInboxandDS(userID, avalibility) {\n    let ibt = await getInboxTasks(userID);\n    let dst = await getDSTasks(userID, avalibility);\n    let dstWithoutIbt = dst.filter(x => ibt.indexOf(x) < 0);\n    return [ibt, dstWithoutIbt]\n}\n\nasync function getTaskInformation(userID, taskID) {\n    let dat = (await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs\n            .filter(doc => doc.id === taskID))\n    )[0]\n    if (dat) return dat.data();\n}\n\nasync function removeParamFromTask(userID, taskID, paramName) {\n    let ti = await getTaskInformation(userID, taskID);\n    delete ti[paramName];\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .set(ti)\n        .catch(console.error);\n}\n\nasync function getTopLevelProjects(userID) {\n    let projectIdByName = {};\n    let projectNameById = {};\n    let projectsSorted = []; \n\n    let snap = (await cRef('users', userID, \"projects\")\n        .get());\n\n    snap.docs.forEach(proj => {\n        if (proj.exists && proj.data().top_level === true) {\n            projectNameById[proj.id] = proj.data().name;\n            projectIdByName[proj.data().name] = proj.id;\n            let projElem = {};\n            projElem.id = proj.id;\n            projElem.name = proj.data().name;\n            projElem.sortOrder = proj.data().order;\n            projectsSorted.push(projElem);\n        }\n    });\n\n    projectsSorted.sort((a,b) => a.sortOrder-b.sortOrder);\n    let ret = [projectNameById, projectIdByName, projectsSorted];\n    return ret;\n}\n\nasync function getTags(userID) {\n    let tags = [];\n\n    await cRef(\"users\", userID, \"tags\").get()\n        .then(snap => snap.docs.forEach( tag => {\n            if (tag.exists) {\n                tags.push(tag.data());\n            }\n        }\n    )).catch(console.error);\n    return tags;\n}\n\nasync function getProjectsandTags(userID) {\n    // NOTE: no longer console.error when  !project/tag.exists\n    let projectIdByName = {};\n    let projectNameById = {};\n    await cRef(\"users\", userID, \"projects\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(proj => {\n            if (proj.exists) {\n                projectNameById[proj.id] = proj.data().name;\n                projectIdByName[proj.data().name] = proj.id;\n            }\n        }))\n        .catch(console.error);\n\n    let tagIdByName = {};\n    let tagNameById = {};\n    await cRef(\"users\", userID, \"tags\").get()\n        .then(snap => snap.docs.forEach(tag => {\n            if (tag.exists) {\n                tagNameById[tag.id] = tag.data().name;\n                tagIdByName[tag.data().name] = tag.id;\n            }\n        }))\n        .catch(console.error);\n\n    return [[projectNameById, projectIdByName], [tagNameById, tagIdByName]];\n}\n\nasync function getPerspectives(userID) {\n    let pInfobyName = {};\n    let pInfobyID = {};\n    let ps = [];\n    await cRef(\"users\", userID, \"perspectives\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(pstp => {\n            if (pstp.exists) {\n                pInfobyID[pstp.id] = {name: pstp.data().name, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                pInfobyName[pstp.data().name] = {id: pstp.id, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                ps.push({id: pstp.id, ...pstp.data()});\n            }\n        }))\n        .catch(console.error);\n\n    ps.sort((a,b) => a.order-b.order);\n\n    return [pInfobyID, pInfobyName, ps];\n}\n\nasync function modifyProject(userID, projectID, updateQuery) {\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyTask(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyPerspective(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"perspectives\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function newTask(userID, taskObj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    if (taskObj.project === \"\") {\n        let ibtL = (await getInboxTasks(userID)).length;\n        taskObj.order = ibtL;\n    } else {\n        let projL = (await getProjectStructure(userID, taskObj.project)).children.length;\n        taskObj.order = projL;\n    }\n\n    // Perspectives cannot have empty defer dates\n    // But! We could set no defer to defer today.\n    if (!taskObj.defer)\n        taskObj.defer = new Date();\n\n    let taskID = (await cRef(\"users\", userID, \"tasks\").add(taskObj)).id;\n\n    return taskID;\n}\n\nasync function newProject(userID, projObj, parentProj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    let projL;\n    // Util func to get size of ob\n    Object.size = function(obj) {\n        var size = 0, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) size++;\n        }\n        return size;\n    };\n\n    if (parentProj) {\n        projL = (await getProjectStructure(userID, parentProj)).children.length;\n        projObj.parent = parentProj;\n    } else {\n        projL = Object.size((await getTopLevelProjects(userID))[0]);\n        projObj.parent = \"\";\n    }\n    projObj.order = projL;\n    projObj.children = {};\n\n    let pid = (await cRef(\"users\", userID, \"projects\").add(projObj)).id;\n    return pid;\n}\n\nasync function newPerspective(userID, pstObj) {\n    return (await cRef(\"users\", userID, \"perspectives\").add({order: (await getPerspectives(userID))[2].length, ...pstObj})).id;\n}\n\nasync function newTag(userID, tagName) {\n    return (await cRef(\"users\", userID, \"tags\").add({name: tagName})).id;\n}\n\nasync function completeTask(userID, taskID) {\n    await cRef(\"users\", userID, \"tasks\", taskID).update({\n        isComplete: true\n    });\n}\n\nasync function dissociateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[taskID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[taskID] = \"task\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[assosProjID] = \"project\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function dissociateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[assosProjID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function deleteTask(userID, taskID, willDissociateTask = true) {\n    let taskData = await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs.filter(doc => doc.id === taskID)[0].data()); // Fetch task data\n\n    if (taskData.project!== \"\" && willDissociateTask) {\n        await dissociateTask(userID, taskID, taskData.project);\n    }\n    await cRef(\"users\", userID, \"tasks\", taskID).delete()\n        .catch(console.error);\n}\n\nasync function deletePerspective(userID, perspectiveID) {\n    await cRef(\"users\", userID, \"perspectives\", perspectiveID).delete();\n}\n\nasync function deleteProject(userID, projectID) {\n    let struct = await getProjectStructure(userID, projectID)\n    for (let i of struct.children) {\n        if (i.type === \"project\") deleteProject(userID, i.content.id)\n        else modifyTask(userID, i.content, {project:\"\"});\n    }\n   \n    let cpLtTasks = await getCompletedTasks(userID);\n    const cpLt = [].concat(...cpLtTasks);\n    for (let t of cpLt)\n        if ((await getTaskInformation(userID, t)).project === projectID)\n            modifyTask(userID, t, {project:\"\"});\n\n    await cRef(\"users\", userID, \"projects\", projectID).delete()\n        .catch(console.error);\n}\n\nasync function deleteTag(userID, tagID) {\n    await cRef(\"users\", userID, \"tags\", tagID).delete()\n        .catch(console.error);\n}\n\nasync function getProjectStructure(userID, projectID, recursive=false) {\n    let children = [];\n\n    // absurdly hitting the cache with a very broad query so that the\n    // cache will catch all projects and only hit the db once\n\n    let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n    if (!project) {\n        return { id: projectID, children: [], is_sequential: false, sortOrder: 0, parentProj: 0};\n    }\n    for (let [itemID, type] of Object.entries(project.data().children)) {\n        if (type === \"task\") {  // TODO: combine if statements\n            let task = await getTaskInformation(userID, itemID);\n            if(task){\n                if (!task.isComplete) {\n                    children.push({type: \"task\", content: itemID, sortOrder: task.order});\n                }\n            }\n           \n        } else if (type === \"project\") {\n            if (recursive) {\n                let project = await getProjectStructure(userID, itemID);\n                if(project) children.push({type: \"project\", content: project, is_sequential: project.is_sequential, sortOrder: project.sortOrder}); \n            } else {\n                let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === itemID)[0];\n                if(project) children.push({type: \"project\", content: {id: itemID}, is_sequential: project.data().is_sequential, sortOrder: project.data().order}); \n            }\n        }\n    }\n    children.sort((a,b) => a.sortOrder-b.sortOrder); //  sort by ascending order of order, TODO: we should prob use https://firebase.google.com/docs/reference/js/firebase.firestore.Query#order-by\n    return { id: projectID, children: children, is_sequential: project.data().is_sequential, sortOrder: project.data().order, parentProj: project.data().parent};\n}\n\nasync function getItemAvailability(userID) {\n    let t = new Date();\n    let tlps = (await getTopLevelProjects(userID))[2];\n    let blockstatus = {};\n    let timea = new Date();\n    async function recursivelyGetBlocks(userID, projectID) {\n        let bstat = {};\n        let project = (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n        let projStruct = (await getProjectStructure(userID, projectID));\n        if (project.data().is_sequential) {\n            let child = projStruct.children[0];\n            if (child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }\n        } else {\n            let children = projStruct.children;\n            await Promise.all(children.map(async function(child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }));\n        }\n        return bstat;\n    };\n    await Promise.all(tlps.map(async function(p) {\n        blockstatus[p.id] = true;\n        let blocks = await recursivelyGetBlocks(userID, p.id);\n        Object.assign(blockstatus, blocks);\n    }));\n    await (await getInboxTasks(userID)).forEach((id) => blockstatus[id] = true);\n    return blockstatus;\n}\n\nasync function getCompletedTasks(userID) {\n    let completedTasks = await getTasksWithQuery(userID, util.select.all([\"isComplete\", \"==\", true]));\n    let taskItems = {};\n    await Promise.all(completedTasks.map(async function(tsk){\n        taskItems[tsk] = await getTaskInformation(userID, tsk);\n    }));\n    const cpSorted = completedTasks.sort(function(b,a) {\n        let taskA = taskItems[a];\n        let taskB = taskItems[b];\n        if (!taskA || !taskB) {\n            return 1;\n        }\n        return ((\n            (taskA.completeDate) ?\n                (taskA.completeDate.seconds) :\n                1\n        )-(\n            (taskB.completeDate) ?\n                (taskB).completeDate.seconds :\n                1\n        ));\n    });\n    let today = new Date();\n    let yesterday = new Date();\n    let thisWeek = new Date();\n    let thisMonth = new Date();\n    today.setHours(0,0,0,0);\n    yesterday.setDate(yesterday.getDate()-1);\n    yesterday.setHours(0,0,0,0);\n    thisWeek.setDate(thisWeek.getDate()-7);\n    thisWeek.setHours(0,0,0,0);\n    thisMonth.setMonth(thisMonth.getMonth()-1);\n    thisMonth.setHours(0,0,0,0);\n    let tasksToday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= today : false;\n    });\n    let tasksYesterday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= yesterday && new Date(tsks.completeDate.seconds * 1000) < today : false;\n    });\n    let tasksWeek = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisWeek && new Date(tsks.completeDate.seconds * 1000) < yesterday : false;\n    });\n    let tasksMonth = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisMonth && new Date(tsks.completeDate.seconds * 1000) < thisWeek : false;\n    });\n    let evenBefore = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) < thisMonth : true;\n    });\n    //console.log(tasksYesterday);\n    //console.log(tasksWeek);\n    //console.log(tasksMonth);\n    /*console.log(evenBefore);*/\n    return [tasksToday, tasksYesterday, tasksWeek, tasksMonth, evenBefore];\n}\n\nasync function onBoard(userID, tz, username, payload) {\n    // Inbox, in reverse cronological order\n    await newTask(userID, {\n            name: payload[0] + ` ${username}, ` + payload[1],\n            desc: payload[2],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[3],\n            desc: payload[4],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[5],\n            desc: payload[6],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n\n    let cdyrslf = await newProject(userID, {name: payload[7], top_level: true, is_sequential: false});\n    let npd = await newProject(userID, {name: payload[8], top_level: true, is_sequential: false});\n    let od = new Date();\n    let ds = new Date();\n    od.setHours(od.getHours() - 24);\n    ds.setHours(ds.getHours() + 20);\n    let odid = await newTask(userID, {\n            name: payload[9],\n            desc: payload[10],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: od,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let dsID = await newTask(userID, {\n            name: payload[11],\n            desc: payload[12],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: ds,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, odid, npd);\n    await associateTask(userID, dsID, npd);\n    ds.setHours(ds.getHours() + 2);\n    let checkoutID = await newTask(userID, {\n            name: payload[13],\n            desc: payload[14],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let nice = await newTask(userID, {\n            name: payload[15],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, nice, cdyrslf);\n    let sequential = await newTask(userID, {\n            name: payload[16],\n            desc: payload[17],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sequential, cdyrslf);\n    let blocked = await newTask(userID, {\n            name: payload[18],\n            desc: payload[19],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, blocked, cdyrslf);\n    let click = await newTask(userID, {\n            name: payload[20],\n            desc: payload[21],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, click, cdyrslf);\n    let pspDir = await newTask(userID, {\n            name: payload[22],\n            desc: payload[23],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, pspDir, cdyrslf);\n    let pspsp = await newProject(userID, {name: payload[24], top_level: true, is_sequential: false});\n    let tags = await Promise.all([newTag(userID, payload[25]), newTag(userID, payload[26]), newTag(userID, payload[27]), newTag(userID, payload[28])]);\n    let specific = await newTask(userID, {\n            name: payload[29],\n            desc: payload[30],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[2], tags[3]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, specific, pspsp);\n    let sp = await newTask(userID, {\n            name: payload[31],\n            desc: payload[32],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[0]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sp, pspsp);\n    await newPerspective(userID, {name: payload[33], query: payload[34]});\n    let promotion = await newProject(userID, {name: payload[35], top_level: true, is_sequential: false});\n    let online = await newTask(userID, {\n            name: payload[36],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, online, promotion);\n    let dis = await newTask(userID, {\n            name: payload[37],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, dis, promotion);\n    let patreon = await newTask(userID, {\n        name: payload[38],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, patreon, promotion);\n    let yiipee = await newTask(userID, {\n        name: payload[39],\n            desc: payload[40],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, yiipee, promotion);\n}\n\nexport default {util, getTasks, getTasksWithQuery, getInboxTasks, getDSTasks, getInboxandDS, removeParamFromTask, getTopLevelProjects, getProjectsandTags, getPerspectives, modifyProject, modifyTask, modifyPerspective, newProject, newPerspective, newTag, newTask, completeTask, dissociateTask, associateTask, associateProject, dissociateProject, deleteTask, deletePerspective, deleteProject, selectTasksInRange, getProjectStructure, getItemAvailability, getTaskInformation, getDSRow, deleteTag, getCompletedTasks, onBoard, getTags};\n\n","import dbObj from \"./ObjectManager\";\n\nconst perspectiveHandler = function(){\n    let cgs = {\n        taskFilter: /([^\\w\\d\\s\\[]{1,2}[\\w\\s]+)/gi,\n        taskCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\]/gi,\n        logicCaptureGroup: /(.*) *([<=>]) *(.*)/gi,\n        globalCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\](\\$\\w+)* *[<=>]* * *(\\$\\w+)*/gi,\n        clear: function() {\n            this.taskFilter.lastIndex = 0;\n            this.taskCaptureGroup.lastIndex = 0;\n            this.logicCaptureGroup.lastIndex = 0;\n            this.globalCaptureGroup.lastIndex = 0;\n        }\n    };\n\n    let getCaptureGroups = (str) => str.match(cgs.globalCaptureGroup);\n\n    let parseTaskCaptureGroup = (str) => (str.split(\"$\").map(i=>i.trim()));\n\n    let parseSpecialVariables = function(...val) {\n        let vr;\n        switch(val[0]) {\n           case \"today\":\n               vr = new Date();\n               break;\n        }\n        return vr;\n    };\n\n    let compileTask = async function(uid, str, pPaT, additionalFilter) {\n        let queries = additionalFilter ? [additionalFilter] : [];\n        let taskCache = [];\n        let antiCache = [];\n        await Promise.all(str.match(cgs.taskFilter).map(async function(e) {\n            e = e.trim();\n            if (e[0] !== \"!\") {\n                switch (e[0]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(1, e.length)];\n                        queries.push(['project', '==', pid]);\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                taskCache = [...taskCache, ...(await compileTask(uid, str.replace(e.slice(1, e.length), pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', 'has',  pPaT[1][1][e.slice(1, e.length)]]);\n                }\n            } else {\n                switch (e[1]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(2, e.length)];\n                        queries.push(['project', '!=', pid]);\n\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                antiCache = [...antiCache, ...(await compileTask(uid, str.replace(e, \".\"+pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', '!has',  pPaT[1][1][e.slice(2, e.length)]]);\n                }\n            }\n            queries.push(['isComplete', '==', false]);\n        }));\n        return [...taskCache, ...(await dbObj.getTasksWithQuery(uid, dbObj.util.select.all(...queries)))].filter(i=>(!antiCache.includes(i)));\n    };\n\n    let compileLogicCaptureGroup = async function(uid, tasks, cmp, value, ltr) {\n        let taskInfo = await Promise.all(tasks[0].map(async function(t){\n            return [await dbObj.getTaskInformation(uid, t), t];\n        }));\n        let taskCompValues;\n        // TODO: add more?\n        if (tasks[1].includes(\"due\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].due ? new Date((t[0].due.seconds)*1000) : undefined)]);\n        } else if (tasks[1].includes(\"defer\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].defer ? new Date((t[0].defer.seconds)*1000) : undefined)]);\n        }\n        let filteredResults;\n        let util_datesequal = function(dateA, dateB) {\n            return dateA.getFullYear() === dateB.getFullYear() && dateA.getMonth() === dateB.getMonth() && dateA.getDate() === dateB.getDate();\n        };\n        switch (cmp) {\n            case \"=\":\n                taskCompValues = taskCompValues.filter(t=>util_datesequal(t[1], value));\n                break;\n            case \">\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] > value) : taskCompValues = taskCompValues.filter(t => t[1] < value);\n                break;\n            case \"<\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] < value) : taskCompValues = taskCompValues.filter(t => t[1] > value);\n                break;\n            case \">=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] >= value) : taskCompValues = taskCompValues.filter(t => t[1] <= value);\n                break;\n            case \"<=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] <= value) : taskCompValues = taskCompValues.filter(t => t[1] >= value);\n                break;\n\n        }\n        return (taskCompValues.map(t => t[0]));\n    };\n\n    let getPerspectiveFromString = async function(uid, pStr, filter, order) {\n        let pPaT = await dbObj.getProjectsandTags(uid);\n        let pRes = await getCaptureGroups(pStr);\n        if (!pRes) {\n            return [];\n        }\n        let fquery; \n        switch (filter) {\n            case \"avail\":\n                fquery = [\"defer\", \"<\", ((new Date()).getTime())/1000];\n                break;\n            case \"flagged\":\n                fquery = [\"isFlagged\", \"==\", true];\n                break;\n        }\n        let tasks = await Promise.all(pRes.map(async function(i) {\n            cgs.clear();\n            let logicSort = cgs.logicCaptureGroup.exec(i);\n            let t;\n            if(logicSort) {\n                // handle logic group\n                let [, lhs, cmp, rhs] = logicSort;\n                [lhs, rhs] = [parseTaskCaptureGroup(lhs), parseTaskCaptureGroup(rhs)];\n                if (cgs.taskCaptureGroup.test(lhs)) {\n                    lhs = [await compileTask(uid, lhs[0], pPaT, fquery), lhs[1]];\n                    rhs = parseSpecialVariables(rhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, lhs, cmp, rhs, true)); // true (that is, left to right order)\n                } else {\n                    rhs = [await compileTask(uid, rhs[0], pPaT, fquery), rhs[1]];\n                    lhs = parseSpecialVariables(lhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, rhs, cmp, lhs, false)); // false (that is, right to left order)\n                }\n            } else {\n                // handle standard group\n                t = (await compileTask(uid, i, pPaT, fquery));\n            }\n            return t;\n        }));\n        tasks = [...new Set(tasks.flat(1))];\n        let taskObjs = await Promise.all(tasks.map(async function(t){\n            return {id: t, ...(await dbObj.getTaskInformation(uid, t))}\n        })).then(values=>values);\n        switch (order) {\n            case \"duas\":\n                taskObjs.sort((a,b)=>(a.due?a.due.seconds:10000000000)-(b.due?b.due.seconds:10000000000));\n                break;\n            case \"duds\":\n                taskObjs.sort((a,b)=>(b.due?b.due.seconds:1)-(a.due?a.due.seconds:1));\n                break;\n            case \"deas\":\n                taskObjs.sort((a,b)=>(a.defer?a.defer.seconds:10000000000)-(b.defer?b.defer.seconds:10000000000));\n                break;\n            case \"deds\":\n                taskObjs.sort((a,b)=>(b.defer?b.defer.seconds:1)-(a.defer?a.defer.seconds:1));\n                break;\n\n        }\n        // Final availability filter for sequential\n        let aval = await dbObj.getItemAvailability(uid);\n        if (filter === \"avail\") taskObjs = taskObjs.filter(it => (aval[it.id] !== undefined)); \n        return taskObjs.map(t=>t.id);\n    };\n\n    return {calc: getPerspectiveFromString};\n}();\n\nexport default perspectiveHandler;\n\n","import dbFuncs from \"./src/ObjectManager\"\nimport pspObj from \"./src/PerspectiveManager\"\nimport dbRefObj from \"./src/DBManager\"\n\n\nexport default {start:dbRefObj.__init__, use:dbRefObj.useDb, db: dbFuncs, perspective: pspObj, flush: dbRefObj.flush};\n\n","import { Plugins } from '@capacitor/core';\nimport { getPlatforms } from '@ionic/react';\n\nconst { parseFromTimeZone } = require('date-fns-timezone')\n\nconst { LocalNotifications, Permissions } = Plugins;\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\nclass Gruntman {\n\n    /*\n     * Hello human,\n     * good afternoon.\n     * I am gruntman.\n     *\n     * Register refreshers with me\n     * so I could handle refreshes.\n     *\n     * Do actions with me\n     * so I could reverse them.\n     *\n     * Undo happens from me\n     * refresh happens from me.\n     *\n     *\n     * @jemoka\n     *\n     */\n\n    constructor(engine) {\n        this.notifPermissionGranted = false;\n        Permissions.query({name: \"notifications\"}).then((async function (e) {\n            if (e.state === \"prompt\")\n                this.notifPermissionGranted = (await LocalNotifications.requestPermission()).granted;\n            else if (e.state === \"granted\")\n                this.notifPermissionGranted = true;\n\n            let platforms = getPlatforms();\n            if (this.notifPermissionGranted && !platforms.includes(\"mobileweb\") && !platforms.includes(\"desktop\")) {\n                // notification specific setup\n                //\n                // TODO TODO TODO TODO TODO TODO TODO TODO\n                //\n\n                //LocalNotifications.registerActionTypes({types: [{id: \"completeOrSnooze\", actions: [{id:\"complete\", title: \"LOCALIZE: Complete\", requiresAuthentication: \"true\", foreground: \"false\"}, {id:\"snooze\", title: \"LOCALIZE: Snooze\", requiresAuthentication: \"true\", foreground: \"false\"}]}]});\n            }\n            LocalNotifications.addListener(\"localNotificationActionPerformed\", this.handleNotificationAction);\n        }).bind(this));\n\n        this.hashCode = s => Math.abs(s.split('').reduce((a,b)=>{a=((a<<5)-a)+b.charCodeAt(0);return a&a},0));\n\n        this.e = engine;\n        this.refresher = ()=>{};\n        this.callbackRefresherReleased = true; // prevent live callback merge conflicts\n        this.conflictResolution = 1000; // 1000 ms = 1s worth of conflict time.\n        this.releaseTimeout = undefined;\n\n        this.doers = {\n            macro: {\n                applyOrder: async function (options) {\n                    // TODO undo handler?\n                    if (options.items.length !== options.order.length) \n                        console.error(\"Length of items and order length must be the same!\")\n                    await Promise.all(options.order.map((e,i) => {\n                        let item = options.items[e];\n                        if (item.type === \"task\") \n                            return engine.db.modifyTask(options.uid, item.content, {order: i});\n                        else if (item.type === \"project\")\n                            return engine.db.modifyProject(options.uid, item.content, {order: i});\n                            //await engine.db.modifyProject(options.uid, e.content, {order: options.order[i]});\n                    }));\n                    return {uid:options.uid}; // TODO HANDLE UNDO\n                }\n            },\n            tag: {\n                create: async function (options) {\n                    let newTag = await engine.db.newTag(options.uid, options.name);\n                    return {uid: options.uid, id: newTag};\n                }\n            },\n            task: {\n                create: async function (options) {\n                    let ntObject = {\n                        desc: \"\",\n                        isFlagged: false,\n                        isFloating: false,\n                        isComplete: false,\n                        project: options.pid?options.pid:\"\",\n                        tags: [],\n                        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n                        repeat: {rule: \"none\"},\n                        name: options.name?options.name:\"\",\n                    };\n\n                    if (options.due)\n                        ntObject.due = options.due\n                    if (options.defer)\n                        ntObject.defer = options.defer\n\n                    let ntID = await engine.db.newTask(options.uid, ntObject)\n\n                    if (options.pid && options.pid != \"\")\n                        engine.db.associateTask(options.uid, ntID, options.pid);\n\n                    return {uid: options.uid, tid: ntID};\n                },\n                update: async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, options.query)\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__project:  async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {project: options.project})\n\n                    if (options.oldProject)\n                        await engine.db.dissociateTask(options.uid, options.tid, options.oldProject);\n\n                    if (options.project !== \"\")\n                        await engine.db.associateTask(options.uid, options.tid, options.project);\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__uncomplete: async function (options) {\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: false, completeDate: new Date()});\n                    return {uid: options.uid, tid: options.tid, taskInfo};\n                },\n                update__complete: async function (options) {\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: true, completeDate: new Date()})\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    let due = (\n                        taskInfo.due ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.due.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.due.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ):\n                        undefined\n                    );\n                    let defer = (\n                        taskInfo.defer ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.defer.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.defer.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ): undefined\n                    );\n                    let repeat = taskInfo.repeat;\n                    if (repeat.rule !== \"none\" && due) {\n                        let rRule = repeat.rule;\n                        if (rRule === \"daily\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        } else if (rRule === \"weekly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let current = \"\";\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                    defer.setDate(defer.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let current = \"\";\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"monthly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let dow = due.getDate();\n                                let oDow = due.getDate();\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let dow = due.getDate();\n                                    let oDow = due.getDate();\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"yearly\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        }\n                    }\n                    return {message: \"Todo TODO TODO Todo: undo pack?\"}\n                }\n            },\n            project: {\n                create: async function (options) { // create project\n                    let projObj = {\n                        name: \"\",\n                        top_level: options.parent === undefined,\n                        is_sequential: false,\n                    };\n                    let npid = options.parent ? await engine.db.newProject(options.uid, projObj, options.parent) : await engine.db.newProject(options.uid, projObj) // make a project... with or without a parent\n                    if (options.parent) {\n                        engine.db.associateProject(options.uid, npid, options.parent);\n                    }// associate the two\n                    return {uid: options.uid, pid: npid}\n                },\n                delete: async function (options) {\n                    await engine.db.deleteProject(options.uid, options.pid);\n                    if (options.parent)\n                        engine.db.dissociateProject(options.uid, options.pid, options.parent);\n\n                    return {uid: options.uid, TODO: \"TODO\"} // TODO: how do we undelete a project?\n                },\n                update__name: async function (options) { // update the project name!\n                    let possibleProjects = await engine.db.getProjectsandTags(options.uid);\n                    // get all possible project\n                    let projectName = possibleProjects[0][0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {name: options.name});\n                    // return what we need to undo\n                    return {projectName, uid: options.uid}\n                },\n                update__pstate: async function (options) { // update the project name!\n                    let currentProject = await engine.db.getProjectStructure(options.uid, options.id, false); // get current project info\n                    // get all possible project\n                    let is_sequential = currentProject;\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {is_sequential: options.is_sequential});\n                    // return what we need to undo\n                    return {is_sequential, uid: options.uid}\n                },\n                associate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.associateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                },\n                dissociate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.dissociateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                }\n            },\n            perspective: {\n                create: async function(options) {\n                    let pObj = {\n                        name: \"\",\n                        avail: \"remain\",\n                        tord: \"duds\",\n                        query: \"\"\n                    }\n                    let npspid = await engine.db.newPerspective(options.uid, pObj);\n                    return {uid: options.uid, pid: npspid};\n                },\n                update__perspective: async function (options) { // update the perspective name!\n                    let possiblePerspectives = await engine.db.getPerspectives(options.uid);\n                    // get all possible perspectives\n                    let perspectiveObject = possiblePerspectives[0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the perspective\n                    await engine.db.modifyPerspective(options.uid, options.id, options.payload);\n\n                    // return what we need to undo\n                    return {perspectiveObject, uid: options.uid}\n                },\n\n                delete__perspective: async function (options) { // update the perspective name!\n                    console.log(\"perspective delete gruntman func\")\n                    // TODO: is this it? @jack\n                    await engine.db.deletePerspective(options.uid, options.id);\n                }\n            },\n        } // type:action:functionaction (return resources)\n        this.undoers = {\n            task: {\n                update: \"task.set\"\n            }\n        } // action: string\n        this.backlog = []; // actionID\n        this.undolog = []; // actionID\n        this.taskLog = {\n        } // actionID: [type, resources]\n        this.canUndo = {\n            task: {\n                update: true,\n            }\n        }\n        this.schedulers = {\n        } // util function onChange fixer-upper\n        this.updateLock = false;\n        this.updateInterval = undefined;\n\n        // @core-devs will not approve but I am secretly hiding\n        // a copy of localized strings in gruntman\n        this.secretLocalizedStrings = {};\n\n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    get localizations() {\n        return this.secretLocalizedStrings;\n    }\n\n    set localizations(value) {\n        this.secretLocalizedStrings = value;\n    }\n\n    halt() {\n        for (let key in this.schedulers)\n            clearTimeout(this.schedulers[key])\n        //this.refresher = ()=>{}; TODO TODO may cause memory leaks in _very_ narrow circumstances but uncomming will break project toggles due to refresher mounting too quickly\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    lockUpdates() {\n        this.updateLock = true;\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    unlockUpdates(interval=580) {\n        this.updateLock = false;\n        this.updateInterval = setTimeout(this.refresher, interval);\n    }\n\n    requestRefresh() {\n        if (!this.updateLock && this.callbackRefresherReleased)\n            this.refresher();\n    }\n\n    async scheduleNotification(id, uid, title, desc, time) {\n        return await LocalNotifications.schedule({\n            notifications: [\n                {\n                    title: title,\n                    body: desc,\n                    schedule: { at: time},\n                    sound: null,\n                    id: this.hashCode(id),\n                    attachments: [`${id}`, `${uid}`],\n                    extra: uid,\n                }\n            ]\n        });\n    }\n\n    async handleNotificationAction(action) {\n        let [taskID, userID] = action.notification.attachments;\n        switch (action.actionId) {\n            case \"complete\":\n                // TODO TODO\n                this.do(\"task.update__complete\", { uid: userID, tid: taskID}, true)\n                break;\n            case \"snooze\":\n                // TODO TODO\n                taskID = action.notification.attachments;\n                userID = action.notification.extra;\n                break;\n        }\n    }\n\n    async cancelNotification(id) {\n        return await LocalNotifications.cancel({notifications: [{id:`${this.hashCode(id)}`}]});\n    }\n\n    async checkNotification(id) {\n        let expectedID = this.hashCode(id);\n        let pending = await LocalNotifications.getPending();\n        let needed = pending.notifications.map(e=>e.id).filter(e=>e==expectedID); // two equal signs to ignore type\n        return needed.length > 0;\n    }\n\n    /*\n     * @param refresher: refresher function to refresh what you registered\n     */\n\n    registerRefresher(r) {\n        this.refresher = r;\n        // lock updates every time a new page loads to prevent MeRGE Conflicts\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n    }\n\n    registerScheduler(callback, identifier, wait=500) {\n        if (this.schedulers[identifier])\n            clearTimeout(this.schedulers[identifier]); // clear the timeout\n        this.schedulers[identifier] = setTimeout(callback, wait);\n    }\n\n    async do(actionName, options, bypassUpdates, isUndo, unsafe_FORCE_UPDATES) {\n        /*\n         * @param actionName => action directive like task.edit or project.create\n         * @param options => options\n         *\n         */\n\n        // Lock updates every time cacheRef is called to prevent mErGE ConFLIcTS\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n\n        let actionID = this.random();\n\n        let nodes = actionName.split(\".\");\n\n        let action = this.doers;\n        while (nodes.length > 0) {\n            action = action[nodes.shift()];\n        }\n\n        if (isUndo) this.undolog.push(actionID);\n        else this.backlog.push(actionID);\n\n        let resources = await action(options);\n\n        this.taskLog[actionID] = [actionName, resources];\n\n        if (!this.updateLock && !bypassUpdates)\n            this.refresher();\n\n        if (unsafe_FORCE_UPDATES)\n            this.refresher();\n\n        return await resources;\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n}\n\nexport default Gruntman;\n\n","import React, { Component } from 'react';\nimport { Plugins } from '@capacitor/core';\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\n\nimport $ from \"jquery\";\n\n\nimport './Auth.css';\n\n\nimport '../themefiles/condutiontheme-default.css';\nimport '../themefiles/condutiontheme-default-dark.css';\nimport '../themefiles/condutiontheme-default-light.css';\nimport '../themefiles/condutiontheme-default-adapter.css';\n\n\n\nconst autoBind = require('auto-bind/react');\n\n\nconst { Storage } = Plugins;\n\nclass Auth extends Component {\n    constructor(props) {\n        super(props);\n\n        let greetings = this.props.localizations.greetings_setB;\n\n        /*\n         * mode 0 = login in progress, \n         *      1 = new account in progress,\n         *      2 = recovery in progress, \n         *      3 = email unverified,\n         *      4 = email verified, proceed create\n         *      5 = recovery executed, shepeard them back\n         *\n         */\n\n        this.state = {\n            authMode: 0,\n            showExtra: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        autoBind(this);\n    }\n\n    doLogin() {\n        let view = this;\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            firebase.auth().signInWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).then(function() {\n                if (firebase.auth().currentUser.emailVerified)\n                     view.props.dispatch({service: \"firebase\", operation: \"login\"});\n                else\n                    view.setState({authMode: 3});\n            }).catch(function(error) {\n                    // Handle Errors here.\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log(error);\n                    $(\".auth-upf\").addClass(\"wrong\");\n            });\n        });\n    }\n\n    doCreate() {\n        // TODO: actually create the account\n        let view = this;\n        let problem = false;\n        firebase.auth().createUserWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).catch(function(error) {\n            view.setState({showExtra: true}, ()=>$('#need-verify').html(error.message));\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                firebase.auth().currentUser.sendEmailVerification();\n                firebase.auth().currentUser.updateProfile({displayName: $(\"#name\").val()});\n                view.setState({authMode: 4, showExtra: true});\n            }\n        })\n    }\n\n    dispatchCreate() {\n        firebase.auth().currentUser.reload().then(()=>{;\n            if (firebase.auth().currentUser.emailVerified)\n                this.props.dispatch({service: \"firebase\", operation: \"create\"});\n            else\n                $('#need-verify').html(\"Please double-check that you tapped the verification link in your email.\");\n        });\n    }\n\n    doRecover() {\n        let problem = false;\n        let view = this;\n        firebase.auth().sendPasswordResetEmail($(\"#email\").val()).catch(function(error) {\n            view.setState({showExtra: true});\n            $('#need-verify').html(error.message);\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                view.setState({authMode: 5});\n            }\n        })\n        // TODO: actually recover the account\n    }\n\n    doLocal() {\n        this.props.dispatch({service: \"json\", operation: \"login\"});\n    }\n\n    render() {\n        return (\n            <div id=\"auth-content-wrapper\">\n                <div id=\"auth-left-menu\">\n                    <div className=\"menu-area\" style={{height:\"100%\"}}>\n                        <div className=\"auth-component\"></div>\n                        <div className=\"auth-component\"></div>\n                        <span id=\"auth-image-credit\">Image by <span style={{fontWeight: 500}}>Tobias Keller/Paweł Czerwiński</span></span>\n                    </div>\n                </div>\n                <div id=\"authwall\">\n                    <h1 id=\"greeting-auth\">{this.state.greeting}</h1><span id=\"welcome-auth-msg\">{this.props.localizations.welcome_auth_msg}</span>\n                    <h3 className=\"greeting-auth-subtitle\" id=\"greeting-auth-normal\">{(()=>{\n                        switch (this.state.authMode) {\n                            case 2:\n                                return this.props.localizations.nowirres;\n                            default:\n                                return this.props.localizations.greeting_auth_normal;\n\n                        }\n                    })()}</h3> \n                    <input className=\"auth-upf\" id=\"name\" type=\"text\" autoComplete=\"off\" defaultValue=\"\" placeholder={this.props.localizations.what_should_we} style={{display: this.state.authMode === 1 ? \"block\" : \"none\"}}/>\n                    <input className=\"auth-upf\" id=\"email\" type=\"email\" autoComplete=\"off\" defaultValue=\"\" placeholder={this.props.localizations.email} />\n                    <input className=\"auth-upf\" id=\"password\" type=\"password\" autoComplete=\"off\" defaultValue=\"\" placeholder={this.props.localizations.password} style={{display: this.state.authMode !== 2 ? \"block\" : \"none\"}} onKeyPress={(event)=>{\n                        if (event.key === \"Enter\") {\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                                case 5: \n                                    this.doLogin();\n                                    break;\n                            }\n                        }\n                    }}/>\n                    {(() => {\n                        if (this.state.authMode === 3 || this.state.authMode ===  4 || this.state.authMode === 5 || this.state.showExtra) return <span id=\"need-verify\">\n                            {(()=>{\n                                switch(this.state.authMode){\n                                    case 3:\n                                        return this.props.localizations.need_and_do;\n                                    case 4:\n                                        return this.props.localizations.need_verify;\n                                    case 5:\n                                        return this.props.localizations.need_and_login;\n\n                            }})()}\n                        </span>\n                    })()}\n                    <span id=\"recover-password\" style={{display: this.state.authMode === 3 ? \"none\" : \"block\"}} onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 2});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return this.props.localizations.remembered;\n                                default:\n                                    return this.props.localizations.rec_pswd;\n\n                            }\n                        })()}</span>\n                    <div id=\"auth-actiongroup\">\n                        <div id=\"newuser\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 1});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return this.props.localizations.login;\n                                default:\n                                    return this.props.localizations.newuser;\n\n                            }\n                        })()}</div>\n                        <div id=\"login\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                            }\n                        }}>\n                            <i className=\"fas fa-snowboarding\" style={{paddingRight: \"5px\"}}></i><span id=\"login-text\">{(() => {\n                                switch(this.state.authMode) {\n                                    case 0:\n                                    case 3:\n                                        return this.props.localizations.lds;\n                                    case 1:\n                                        return this.props.localizations.verifem;\n                                    case 2:\n                                        return this.props.localizations.lerec;\n                                    case 4:\n                                        return this.props.localizations.proceed;\n                                    case 5:\n                                        return this.props.localizations.proceed;\n                                }\n                            })()}</span>\n                        </div>\n                        {(() => {\n                            if (this.state.authMode !== 2) return <div className=\"convert-src\" id=\"ulac\" onClick={this.doLocal}>{this.props.localizations.ulac}</div>\n                        })()}\n                    </div>\n                </div>\n            </div>\n      );\n    }\n}\n\nexport default Auth;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport Lottie from 'react-lottie';\nimport './Pages.css';\n\nconst LoadSpinner = require('../static/load.json');\n\nconsole.log(LoadSpinner);\n\nconst autoBind = require('auto-bind/react');\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: LoadSpinner,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\n\nfunction Loader(props) {\n    return (\n        <div style={{width: \"100%\", height: \"100%\", position: \"absolute\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <Lottie options={defaultOptions}\n                height={50}\n                width={50}\n                isStopped={false}\n                isPaused={false}\n            />\n            <div style={{position: \"absolute\", bottom: 15, color: \"var(--decorative-light-alt)\", fontSize: 11}}>\n                ©2019-2020 Shabang Systems, LLC and the Condution Authors. Software released under GNU-GPLv3.\n            </div>\n        </div>\n    )\n}\n\nexport default Loader;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\nfunction Onboarding(props) {\n    return (\n        <div style={{width: \"100%\", height: \"100%\", position: \"absolute\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", color:\"var(--content-normal-accent)\"}}>\n            <div style={{marginRight: 20, maxWidth: 500}}>\n                <b>Condution v1.0.0-alpha.0</b> <br />\n                <i>ONBOARDING VIEW!! Woo hoo!</i> <br /> \n                <span>Arn't you excited to get an account</span> <br /> \n                <span>at a random todo list app?</span> <br /> \n            </div>\n            <div style={{marginLeft: 20, maxWidth: 500}}>\n                <br />\n\n                <pre style={{fontSize: 10, color:\"var(--content-normal-alt)\"}}>\n                    {`\n    Copyright (C) 2019-2020. Shabang Systems, LLC\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see https://www.gnu.org/licenses/.\n                    `}\n                </pre>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Onboarding;\n\n","/* Global Imports */\nimport React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, IonMenu, setupConfig } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Themefiles */\nimport './themefiles/condutiontheme-default-adapter.css';\nimport './themefiles/condutiontheme-default.css';\nimport './themefiles/condutiontheme-default-dark.css';\nimport './themefiles/condutiontheme-default-light.css';\n//import './themefiles/condutiontheme-default-new.css';\nimport './themefiles/condutiontheme-black-n-red.css';\n\n/* Font awesome */\nimport './static/fa/scripts/all.min.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n/* Capacitor core plugins + jQuery */\nimport { Plugins } from '@capacitor/core';\nimport $ from \"jquery\";\n\n/* Our Lovley Core Engine */\nimport Engine from './backend/CondutionEngine';\nimport Gruntman from './gruntman';\n\n/* Firebase */\nimport * as firebase from \"firebase/app\";\n\n/* Auth and store modules */\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n/* Views that we need */\nimport Auth from './pages/Auth';\nimport Loader from './pages/Loader';\nimport Onboarding from './pages/Onboarding';\nimport Home from './pages/Home';\n\n/* Localization Toolkit */\nimport LocalizedStrings from 'react-localization';\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\n\n/* Storage Plugins */\nconst { Storage } = Plugins;\n\n\n/* \n * Hello human, good morning.\n *\n * Hope you are doing well. Thanks (why are you) visiting App.jsx?\n *\n * I manage global routing, auth handling, and all that jazz.\n * You should not touch me to change the interface.\n * But I guess I change the interface. So.\n *\n * I kind of change the interface?\n *\n * Anyways, I return one of Loader, Auth, or Home depending on auth state.\n *\n * And check for the auth state to determine which one to return\n *\n * It's not really a poem, isn't it.\n *\n * @Jemoka\n *\n */\n\nsetupConfig({ swipeBackEnabled: false, }); // globally disable swipe b/c we implemented our own\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        let localizations = new LocalizedStrings({\n            en: require(\"./static/I18n/en-US.json\"),\n            zh: require(\"./static/I18n/zh-CN.json\"),\n            de: require(\"./static/I18n/de-DE.json\"),\n        });\n\n        // TODO TODO remove this\n        //localizations.setLanguage(\"zh\");\n\n        // We start with setting our state. We don't know our user's UID (duh)\n        this.state = {authMode: \"loader\", uid: \"\", displayName: \"\", localizations};\n        \n        // We also set the theme based on the user's media query\n        if (window.matchMedia('(prefers-color-scheme:dark)').matches) {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-dark\");\n        }\n        else {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-light\");\n        }\n\n        // Make ourselves a nice gruntman\n        this.gruntman = new Gruntman(Engine);\n        this.gruntman.localizations = localizations;\n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    async componentDidMount() {\n        // This IS in fact the view\n        let view = this;\n\n        // Light the fire, kick the tires an instance \n        // of {firebase}, and initializing the firebase \n        // and json engines\n        await Engine.start({firebase}, \"firebase\", \"json\");\n\n\n        // ==Handling cached dispatch==\n        // So, do we have a condution_stotype? \n        Storage.get({key: 'condution_stotype'}).then((dbType) => {\n            switch (dbType.value) {\n                // If its firebase \n                case \"firebase\":\n                    // Check if we actually has a user\n                    firebase.auth().onAuthStateChanged(function(user) {\n                        if (!user)\n                            view.authDispatch({operation:\"logout\"});\n                        // If we have one, shift the engine into firebase mode\n                        else {\n                            Engine.use(\"firebase\", view.gruntman.requestRefresh);\n                            // Load the authenticated state, set authmode as \"firebase\" and supply the UID\n                            view.setState({authMode: \"firebase\", uid: user.uid, displayName: user.displayName});\n                        }\n                    })\n                    break;\n                // If its json\n                case \"json\":\n                    // Shift the engine into json mode\n                    Engine.use(\"json\", view.gruntman.requestRefresh);\n                    // Load the authenticated state, set the authmode as \"json\" and supply \"hard-storage-user\" as UID\n                    this.setState({authMode: \"json\", uid:\"hard-storage-user\"});\n                    break;\n                // If there is nothing, well, set the authmode as \"none\"\n                default:\n                    this.setState({authMode: \"none\", uid:undefined});\n                    break;\n            }\n        });\n    }\n\n    // authDispatch handles the dispatching of auth operations. {login, create, and logout}\n    authDispatch(mode) {\n        // TODO: that's a state machine! @zbuster05\n        let uid;\n        let name;\n        switch (mode.operation) {\n            // operation mode login\n            case \"login\":\n                // shift the engine into whatever mode we just logged into\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                // write the login state into cookies\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                // get the UID\n\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n                // load the authenicated state and supply the UID\n                this.setState({authMode: mode.service, uid, displayName: name});\n                break;\n            // operation mode create\n            case \"create\":\n                // setthe engine as whatever service\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n\n                // Here\n                this.setState({authMode: \"onboarding\", uid, displayName: name});\n                Engine.db.onBoard(uid, Intl.DateTimeFormat().resolvedOptions().timeZone, this.gruntman.localizations.getLanguage()===\"en\" ? \"there\": \"\", this.gruntman.localizations.onboarding_content).then(e=>this.setState({authMode: mode.service, uid, displayName: name}));\n                // TODO: be done with onboarding\n                // Set the storage type and write it into cookies\n                // load the authenicated state and TODO supply the UID\n                break;\n            case \"logout\":\n                // Set the storage type to nada and write it into cookies\n                Storage.set({key: 'condution_stotype', value: \"none\"});\n                // Sign out if we are signed in\n                firebase.auth().signOut();\n                // Load the auth view\n                this.setState({authMode: \"none\", name: \"\"});\n                break;\n        }\n    }\n\n    render() {\n        // Check for onboarding here\n        // then continue\n        // Which authmode?\n        switch (this.state.authMode) {\n            // if we are at the first-paint load mode, do this:\n            case \"loader\":\n                return <Loader />\n            // if we did not authenticate yet, load the auth view:\n            case \"none\":\n                return <Auth dispatch={this.authDispatch} localizations={this.state.localizations}/>;\n            // if we did auth, load it up and get the party going\n            case \"firebase\":\n            case \"json\":\n                return <Home engine={Engine} uid={this.state.uid} dispatch={this.authDispatch} gruntman={this.gruntman} displayName={this.state.displayName} localizations={this.state.localizations}/>;\n            // wut esta this auth mode? load the loader with an error\n            case \"onboarding\":\n                return <Onboarding />\n            default:\n                console.error(`CentralDispatchError: Wut Esta ${this.state.authMode}`);\n                return <Loader isError={true} error={this.state.authMode}/>\n        }\n    }\n}\n\nexport default App;\n//class App extends Component {\n    //render() {\n        //return (\n            //<IonApp>\n                //<Home />\n            //</IonApp>\n        //);\n    //}\n//}\n\n/*export default App;*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//\"use strict\";\n\n// Initialize Firebase Application\n// TODO TODO TODO !!!! Change this on deploy\n\nlet storageType;\nlet sqliteDB;\nlet memoryDB;\nlet firebaseDB, fsRef;\nlet requestRefresh;\n\nconst { FilesystemDirectory, FilesystemEncoding, Plugins } = require('@capacitor/core');\nconst { Device, Filesystem } = Plugins;\n\nlet readiness;\n\nconst initStorage = (payload, ...features) => {\n /*   // Firebase App (the core Firebase SDK) is always required and*/\n    //// must be listed before other Firebase SDKs\n    // const firebase = require(\"firebase/app\");\n\n    let loaders = [];\n\n    if (features.includes(\"firebase\")) {\n        const obj = require(\"./../secrets.json\");\n        if (process.env.NODE_ENV === \"development\")\n            payload.firebase.initializeApp(obj.dbkeys.debug);\n        else if (process.env.NODE_ENV === \"production\")\n            payload.firebase.initializeApp(obj.dbkeys.deploy);\n        [ firebaseDB, fsRef ] = [payload.firebase.firestore(), payload.firebase.firestore];\n        firebaseDB.enablePersistence({synchronizeTabs: true}).catch(console.error);\n        loaders.push(new Promise(function(resolve) {\n            return resolve(fsRef);\n        }));\n    } \n\n    if (features.includes(\"sqlite\")) {\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        // TODO: TODO: SQLITE 3!!\n        //const sqlite3 = require('sqlite3').verbose();   // see https://www.sqlitetutorial.net/sqlite-nodejs/connect/\n        const { FilesystemDirectory, Plugins } = require('@capacitor/core');\n        const { Device } = Plugins;\n        loaders.push((async function() {\n            const isMobile = (await Device.getInfo()).platform !== \"web\";\n            const dbRoot = isMobile ? FilesystemDirectory.Data : process.resourcesPath;\n            const dbPath = '/condution.db'; // TODO: use capacitor storage api\n            //sqliteDB = new sqlite3.Database(dbRoot+dbPath, (e)=>{if(e) console.error(e)});\n            return sqliteDB;\n        })());\n    } \n\n    if (features.includes(\"json\")) {\n        loaders.push((async function() {\n            const dbRoot = FilesystemDirectory.Data;\n            const dbPath = 'condution.json'; // TODO: use capacitor storage api\n            let contents;\n            try {\n                contents = (await Filesystem.readFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    encoding: FilesystemEncoding.UTF8\n                })).data;\n            } catch(e) {\n                contents = \"{}\";\n                await Filesystem.writeFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    data: JSON.stringify({}),\n                    encoding: FilesystemEncoding.UTF8\n                })\n            }\n            //contents = `{\"users\":{\"hard-storage-user\":{\"projects\":{\"asenuoth239p8\":{\"name\":\"bontehu\",\"is_sequential\":false,\"order\":0,\"parent\":\"\",\"top_level\":true, \"children\": []}}}}}`;\n            memoryDB = JSON.parse(contents);\n        })());\n    }\n\n    readiness = Promise.all(loaders);\n    return readiness;\n};\n\nconst useDb = (db, refresher=()=>{}) => {\n    storageType = db;\n    requestRefresh = refresher; // generate fresh refresher\n    return readiness;\n};\n\nconst [cRef, flush] = (() => {\n    //const { Plugins } = require('@capacitor/core');\n    //const { Network } = Plugins;\n\n    let cache = new Map();\n    let unsubscribeCallbacks = new Map();\n\n\n    function flush() {\n        /*\n         * Nukes the cache\n         *\n         * Used to log people out\n         *\n         * @return none\n         *\n         */\n        cache = new Map();\n        unsubscribeCallbacks = new Map();\n    }\n\n    function getFirebaseRef(path) {\n        /*\n         * Get a database reference.\n         *\n         * @param   path        A valid path array, see below.\n         * @return  reference   The generated reference\n         *\n         * Examples of valid path arrays:\n         *  [`collection/${docName}`] => DocumentReference\n         *  [\"collection\", \"docName\"] => DocumentReference\n         *  [\"collection\", \"docName\", \"collection\"] => CollectionReference\n         *  [\"collection\", [\"query\", \"params\"], [\"more\", \"params\"]] => Query\n         *  [\"collection\", [\"query\", \"params\"], \"docname\"] => DocumentReference\n         */\n        let ref = firebaseDB;\n        // special handling for first collection from root\n        console.assert(typeof path[0] === 'string');\n        if (path[0].includes('/'))\n            ref = ref.collectionGroup(path[0]);\n        else\n            ref = ref.collection(path[0]);\n        // generic handling\n        for (let nav of path.slice(1)) {\n            if (typeof nav === 'string') {\n                if (ref instanceof fsRef.DocumentReference) {\n                    ref = ref.collection(nav);\n                } else if (ref instanceof fsRef.Query) {\n                    ref = ref.doc(nav);\n                } else {\n                    throw new Error(\"Unknown reference\", ref.toString());\n                }\n            } else if (Array.isArray(nav)) {                // query, TODO shouldn't need to query\n                if (ref instanceof fsRef.Query) {\n                    ref = ref.where(...nav);\n                } else {\n                    throw new Error(\"Cannot query with\", nav.toString());\n                }\n                console.assert(ref instanceof fsRef.Query)\n            } else {\n                throw new Error(\"Cannot parse\", nav.toString());\n            }\n        }\n        return ref;\n    }\n\n    function generateRandomString() {\n        /*\n         * Generates a random string. Used for Ids.\n         * THIS IS NOT CRYPTOGRAPHICALLY SECURE\n         *\n         * @return  string  The random string\n         *\n         */\n\n        return Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2);\n    }\n\n    async function cachedRead(path) {   // TODO: make this also use hard storage, dupe for cachedSet\n        /*\n         * Get a snapshot from the cache.\n         *\n         * @param   path    The valid path to the reference\n         * @return  any     The result of calling `.get()` on the database reference\n         *\n         * Logic:\n         *  If the path is cached, return from cache.\n         *  Else, register a snapshot listener to update the cache\n         *      and return the newly cached value.\n         */\n        const TODOstring = JSON.stringify(path);        //  strigify to hash array\n        if (!cache.has(TODOstring)) {                   //  if path string isn't cached\n            // TODO: comment this out someday \\/\n            const ref = getFirebaseRef(path);           //  get the reference from the database\n            cache.set(TODOstring, ref.get());           //  save result in cache\n            unsubscribeCallbacks.set(TODOstring,        //  TODO: comment this code, someday\n                ref.onSnapshot({\n                    error: console.trace,\n                    next: (snap) => {\n                        cache.set(TODOstring, snap);\n                        requestRefresh();\n                    }\n                })\n            );\n        }\n        return await cache.get(TODOstring);\n    }\n\n    let diskJSONDB = function() {\n        const dbRoot = FilesystemDirectory.Data;\n        const dbPath = 'condution.json'; // TODO: use capacitor storage api\n        let read = async function() {\n            let contents = (await Filesystem.readFile({\n                path: dbPath,\n                directory: dbRoot,\n                encoding: FilesystemEncoding.UTF8\n            })).data;\n            memoryDB = JSON.parse(contents);\n        }\n\n        let write = async function() {\n            await Filesystem.writeFile({\n                path: dbPath,\n                directory: dbRoot,\n                data: JSON.stringify(memoryDB),\n                encoding: FilesystemEncoding.UTF8\n            })\n        }\n\n        return {read, write};\n    }()\n\n    async function storageRead(path) { \n        /*\n         * Read value in storage\n         *\n         * @param   path    The path to a reference\n         * @return  DocumentSnapshot    A snapshot of documents\n         *\n         */\n\n\n        let pointer;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Get an object pointer that's an option that\n             * looks like a noSQL object.  See JSON implimentation \n             * for tips and tricks.\n             *\n             */\n\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.some(i => {\n                pointer = pointer[i];\n                return (pointer === undefined); // https://stackoverflow.com/questions/2641347/short-circuit-array-foreach-like-calling-break\n            });\n        }\n\n        let parsed = (function parsePointer(pointer) {\n            /*\n             * Parse a dbPointerObject\n             *\n             * @param    pointer   A Javascript Object containing data\n             * @return   DocumentSnapshot   A Firebase-like Doc Snapshot\n             *\n             * TODO: also make this work for single documents, not just collections\n             */\n\n            let docRefs = [];\n            for (const docID in pointer) \n                docRefs.push({id: docID, data: ()=>Object.assign({}, pointer[docID]), exists: true}); // TODO TODO Better way to make JS objects immutable?\n            return {docs: docRefs}\n        })(pointer)\n        return parsed;\n    }\n\n    async function storageAdd(path, payload) {\n        /* \n         * Add a value\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            id = generateRandomString();\n            while (pointer[id]) id = generateRandomString();\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[id] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageDel(path) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @return  none\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            delete pointer[task];\n            await diskJSONDB.write();\n        }\n    }\n\n    async function storageSet(path, payload) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[task] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageUpdate(path, payload) {\n        /* \n         * Object.assigns the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer = Object.assign(pointer, payload);\n            await diskJSONDB.write();\n        }\n        return Object.assign(payload, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n\n\n    //async function storageSet(path, value) {\n        /*\n         * Set a value in the storage.\n         *\n         * @param   path    The valid path to reference\n         * @param   value   The value to set it to\n         * @return  none\n         */\n    //    const TODOstring = JSON.stringify(path);    // stringify array, please change someday\n    //    // update storage\n    //    if (decideWhetherToUseHardStorage())\n    //\n    //    // maintain the cache\n    //    if (!cache.has(TODOstring)) {\n    //        cache.set();\n    //    }\n    //    const ref = getFirebaseRef(path);\n    //    ref.set(value);\n    //    cache.set(stringPath, value)\n    //}\n\n    function cacheRef(path) {\n        /*\n         * Get a reference wrapper that forces cache hits.\n         * This function will be exposed to the outside world.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(getFirebaseRef(path));\n        \n        \n        return Object.assign(\n            getFirebaseRef(path),               //  default methods from firebase reference\n            { get: () => cachedRead(path) }     //  read on get, read from cache if available\n        );\n    }\n    function TODO() { console.error('bad news bears'); }\n    function storageRef(path) {\n        /*\n         * Get a reference wrapper that acts as a database blackbox.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(ref.add, ref.doc, ref.docs);\n        return {\n            id: TODO,\n            add: (payload) => storageAdd(path, payload),\n            //doc: not here, right?,\n            //docs: not here, rgiht?, // TODO: docs.filter\n            get: () => storageRead(path),\n            set: (payload) => storageSet(path, payload),\n            update: (payload) => storageUpdate(path, payload),\n            delete: () => storageDel(path),\n        };\n    }\n\n    function dispatch(...path) {\n        /* \n         * Get the currently initialized storageRef\n         *\n         * @return  storageRef/CacheRef\n         *\n         */\n\n        switch (storageType) {\n            case \"firebase\":\n                return cacheRef(path);\n            default:\n                return storageRef(path);\n        }\n    }\n\n    return [dispatch, flush];\n})();\n\nexport default {__init__:initStorage, cRef, flush, useDb};\n\n"],"sourceRoot":""}