{"version":3,"sources":["pages/Components/Sortable.jsx","pages/Home.jsx","pages/Upcoming.jsx","pages/Calendar.jsx","pages/Components/CalendarTasklistPopover.jsx","pages/Completed.jsx","pages/Perspectives.jsx","pages/Components/PerspectiveEditor.jsx","pages/Projects.jsx","pages/Components/FloatingActionButton.jsx","pages/Components/QuickSwitcher.jsx","pages/Components/KeybindManager.jsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","backend/src/ObjectManager.js","backend/src/PerspectiveManager.js","backend/CondutionEngine.js","gruntman.js","pages/Auth.jsx","pages/Loader.jsx","App.jsx","serviceWorker.ts","index.jsx","pages/Components/Repeat.jsx","pages/Components/TagEditor.jsx","pages/Components/Task.jsx","backend/src/DBManager.js","pages/Components/CalendarPopover.jsx"],"names":["SortableTaskList","props","useState","activelyDragging","setActivelyDragging","order","useRef","moveApplied","currentIndex","dragEnvelope","dragEnabled","setDragEnabled","objRefs","list","map","_","React","createRef","getAnimationDestinationFromIndex","activeIndex","mY","currentOrder","noAnim","down","indx","y","indexOf","zIndex","config","tension","friction","mass","clamp","immediate","useSprings","length","current","springs","set","useEffect","i","uid","bind","useDrag","a","args","index","movement","movementY","first","last","tap","includes","onSortStart","sorted","sortedID","moveBy","Math","floor","abs","newIndex","splice","setTimeout","filter","x","gruntman","do","items","type","content","onSortEnd","newOrder","drag","delay","filterTaps","enabled","id","anim","ref","e","div","className","style","borderRadius","position","cursor","transform","interpolate","onClickCapture","stopPropagation","tid","key","prefix","datapack","engine","availability","envelope","SortableProjectList","item","activeTaskID","activeTaskRef","opacity","onClick","paginate","history","push","display","possibleProjects","autoBind","require","isPlatform","createHashHistory","createBrowserHistory","Home","to","setState","itemSelected","state","projects","perspectives","undefined","abtibRef","menu","url","URL","document","uri","pathname","split","hash","this","refresh","prevProps","prevState","snapshot","sends","db","getTopLevelProjects","tlp","getPerspectives","psp","Router","IonReactHashRouter","IonReactRouter","keybindRef","abtib","noBounce","forceOverscroll","contentId","mode","window","navigator","platform","process","fontSize","icon","chevronForwardCircle","checkmarkCircle","calendar","close","npid","pid","f","paddingRight","name","proj","listOutline","dispatch","operation","reference","render","exact","path","displayName","match","params","menuRefresh","options","create","Component","Upcoming","tomorrow","Date","setDate","getDate","greetings","inbox","dueSoon","possibleTags","possibleProjectsRev","possibleTagsRev","projectSelects","tagSelects","projectDB","timeline","timelineShown","greeting","random","updatePrefix","registerRefresher","getItemAvailability","avail","getInboxandDS","pandt","getProjectsandTags","pPandT","projectList","tagsList","value","label","views","pdb","topLevels","getProjectStructure","buildSelectString","p","level","children","selectTasksInRange","prototype","isSameDateAs","pDate","getFullYear","getMonth","refrenceDate","tcontent","task","due","seconds","halt","toString","overflow","onTouchMove","preventDefault","marginLeft","color","toLocaleString","weekday","fontWeight","marginRight","overflowY","flexGrow","marginTop","timelineItem","toLocaleDateString","year","month","day","paddingLeft","paddingTop","refreshed","CalPageBigOllendar","__util_calculate_gradient","left","right","gradientAmount","color1","color2","ratio","hex","r","ceil","parseInt","substring","g","b","dateSelected","setDateSelected","currentMonth","currentYear","firstDayMonth","lastDayMonth","lastDayLastMonth","firstDayDayname","getDay","daysBefore","Array","daysAfter","contentDays","heat","setHeat","isPopoverShown","setIsPopoverShown","shownList","setShownList","max","apply","Map","names","ids","hm","forEach","val","date","setHours","time","has","get","values","from","nameList","idList","getComputedStyle","body","hexes","getPropertyValue","trim","slice","keys","height","width","isShown","onDidDismiss","currentDate","backgroundColor","onDateSelected","marginBottom","Calendar","today","taskList","popoverIsVisible","repeater","showEdit","endDate","effect","offset","top","isMobile","d","getTime","class","withGetScreen","mobileLimit","tabletLimit","shouldListenOnResize","CalendarTasklistPopover","refs","isOpen","cssClass","onModal","TaskObject","contents","Completed","tasksShown","taskCats","rendering","taskArr","getCompletedTasks","full","cat","startingCompleted","handleFetchMore","Perspectives","perspectiveName","perspectiveQuery","perspectiveAvail","perspectiveTord","possiblePerspectives","perspectiveObject","perspective","calc","query","tord","registerScheduler","payload","target","then","hideEdit","updateName","startHighlighted","onChange","persist","data-tip","borderColor","margin","handleDelete","withRouter","PerspectiveEdit","inputEvent","focus","console","log","alert","onWillPresent","lockUpdates","unlockUpdates","alignItems","whiteSpace","defaultValue","minWidth","placeholder","handleQueryChange","interface","onIonChange","detail","handleHelp","Projects","parent","is_sequential","currentProject","activeTask","cProject","parentProj","overflowX","result","_explode","ABTIB","isExpanded","setisExpanded","isSaving","setisSaving","useSpring","input","readOnly","onFocus","event","onBlur","onKeyUp","taskName","dateInfo","chrono","defer","end","start","replace","text","npobj","blur","QuickSwitcher","searchRef","filteredList","firstItem","direction","selected","prop_store","initialRenderingDone","searcher","currentlySelected","processItems","setFocus","searchTerm","org","toLowerCase","o","keyname","selectedItem","filterItems","slicedSelectedItem","updateIdx","goBack","goForward","dismiss","idx","len","ctrlKey","scrollIntoView","qs_show","animated","autoFocus","onDidPresent","focusRef","spellcheck","debounce","onKeyDown","handleKeydown","onMouseEnter","Keybinds","bindings","sidebar_switcher","sidebar_list","sidebar_incrimentor","focusElement","globalBindings","manageQs","sidebar_index","that","num","loca","sidebarItem","arraysAreIdentical","arr1","arr2","combo","Mousetrap","bindGlobal","unbind","setSidebarIndex","webpackAsyncContext","req","__webpack_require__","Promise","resolve","Error","code","Object","module","exports","cRef","dbManager","util","select","compare","lhs","cmp","rhs","TypeError","all","requirements","doc","dat","data","any","atLeast","threshold","counter","atMost","debug","arg","trace","userID","snap","docs","catch","err","error","getTasksWithQuery","taskDocs","getInboxTasks","sort","inboxDocs","getDSTasks","available","wrt","dsTime","getHours","isComplete","dsDocs","dueTasks","min","returnFull","tasks","avaliable","warn","ibt","dsTasks","prev","cache","dst","avalibility","dstWithoutIbt","getTaskInformation","taskID","paramName","ti","projectIdByName","projectNameById","projectsSorted","exists","top_level","projElem","sortOrder","ret","tags","tag","tagIdByName","tagNameById","pInfobyName","pInfobyID","ps","pstp","projectID","updateQuery","update","modifyTask","newTask","taskObj","project","ibtL","projL","add","newProject","projObj","size","obj","hasOwnProperty","newPerspective","pstObj","newTag","tagName","dissociateTask","dump","t","originalChildren","associateTask","assosProjID","willDissociateTask","taskData","delete","perspectiveID","deleteProject","struct","cpLtTasks","cpLt","concat","tagID","recursive","itemID","entries","recursivelyGetBlocks","bstat","projStruct","child","assign","tlps","blockstatus","blocks","completedTasks","taskItems","tsk","cpSorted","taskA","taskB","completeDate","yesterday","thisWeek","thisMonth","setMonth","tasksToday","tsks","tasksYesterday","tasksWeek","tasksMonth","evenBefore","tz","username","desc","isFlagged","isFloating","timezone","repeat","rule","cdyrslf","npd","od","ds","odid","dsID","nice","sequential","blocked","click","pspDir","pspsp","specific","sp","promotion","online","dis","patreon","yiipee","getTasks","removeParamFromTask","modifyProject","modifyPerspective","completeTask","associateProject","dissociateProject","deleteTask","deletePerspective","getDSRow","deleteTag","onBoard","getTags","perspectiveHandler","cgs","taskFilter","taskCaptureGroup","logicCaptureGroup","globalCaptureGroup","clear","lastIndex","parseTaskCaptureGroup","str","parseSpecialVariables","vr","compileTask","pPaT","additionalFilter","queries","taskCache","antiCache","dbObj","pS","compileLogicCaptureGroup","ltr","taskInfo","taskCompValues","util_datesequal","dateA","dateB","pStr","pRes","fquery","logicSort","exec","test","Set","flat","taskObjs","aval","it","dbRefObj","__init__","use","useDb","dbFuncs","pspObj","flush","parseFromTimeZone","LocalNotifications","Plugins","Permissions","Gruntman","notifPermissionGranted","requestPermission","granted","platforms","getPlatforms","addListener","handleNotificationAction","hashCode","s","reduce","charCodeAt","refresher","callbackRefresherReleased","conflictResolution","releaseTimeout","doers","macro","applyOrder","ntObject","Intl","DateTimeFormat","resolvedOptions","timeZone","ntID","tInfo","update__project","oldProject","update__uncomplete","update__complete","toISOString","rRule","defDistance","rOn","on","dow","oDow","setFullYear","message","TODO","update__name","projectName","update__pstate","associate","dissociate","pObj","npspid","update__perspective","delete__perspective","undoers","backlog","undolog","taskLog","canUndo","schedulers","updateLock","updateInterval","clearTimeout","interval","title","schedule","notifications","at","sound","attachments","extra","action","notification","actionId","cancel","expectedID","getPending","pending","needed","callback","identifier","wait","actionName","bypassUpdates","isUndo","unsafe_FORCE_UPDATES","actionID","nodes","shift","resources","Auth","Storage","authMode","showExtra","view","firebase","setPersistence","Persistence","LOCAL","signInWithEmailAndPassword","$","currentUser","emailVerified","service","addClass","problem","createUserWithEmailAndPassword","html","sendEmailVerification","updateProfile","reload","sendPasswordResetEmail","autoComplete","onKeyPress","doLogin","doCreate","doRecover","dispatchCreate","doLocal","Loader","justifyContent","maxWidth","setupConfig","swipeBackEnabled","App","matchMedia","matches","removeClass","Engine","dbType","onAuthStateChanged","user","requestRefresh","authDispatch","signOut","isError","Boolean","location","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","Repeat","advanced","loadTask","float","newOn","elem","oldOn","TagEditor","tagList","setTagState","border","AnimationFactory","Keyframes","Spring","hide","taskHeight","taskMargin","taskBackground","taskPadding","taskEditOpacity","taskEditMaxHeight","taskOpacity","taskNameDecoration","taskPosition","taskDisplay","taskMaxHeight","reset","show","complete","Task","componentWillUnmount","removeEventListener","detectOutsideClick","toggleTask","expanded","deferDate","dueDate","decoration","showRepeat","showTagEditor","deferPopoverShown","duePopoverShown","haveBeenExpanded","startOpen","notificationPopoverShown","notificationCalendarShown","hasNotification","initialRenderDone","me","checkbox","TagEditorRef","actualCheck","duePopover","deferPopover","notificationPopover","notificationCalender","showTageEditor","nativeEvent","checkNotification","refreshDecorations","addEventListener","contains","closeTask","openTask","native","animatedProps","freeze","minHeight","maxHeight","background","padding","hideRepeat","defaultChecked","htmlFor","textDecoration","CalendarPopover","disableOnclick","useTime","initialDate","cancelNotification","scheduleNotification","showBackdrop","showNotificationPopover","DateInput","TimeInput","getMinutes","getSeconds","portalId","showTimeInput","dateFormat","customTimeInput","customInput","isClearable","classNamePrefix","styles","menuPortal","provided","menuPortalTarget","option","isMulti","base","newValue","actionMeta","tids","__isNew__","originalTags","tagIDs","storageType","memoryDB","firebaseDB","fsRef","readiness","FilesystemDirectory","FilesystemEncoding","Filesystem","Device","unsubscribeCallbacks","getFirebaseRef","assert","collectionGroup","collection","nav","DocumentReference","Query","isArray","where","generateRandomString","TODOstring","JSON","stringify","onSnapshot","next","diskJSONDB","dbRoot","Data","read","readFile","directory","encoding","UTF8","parse","write","writeFile","pointer","some","parsed","docRefs","docID","round","pop","cacheRef","cachedRead","storageRef","storageAdd","storageRead","storageSet","storageUpdate","storageDel","loaders","features","initializeApp","dbkeys","deploy","firestore","enablePersistence","synchronizeTabs","getInfo","resourcesPath","sqliteDB","dbPath","CalendarUnit","toLocaleTimeString","newDate"],"mappings":"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B,QAAStU,KAAKb,MAAMmV,QACpBL,QAAS,kBAAK,EAAKhV,SAAS,CAACqV,SAAS,KACtCrY,MAAO,CAAC+D,KAAKjI,MAAMsH,aAAcW,KAAKjI,MAAMqH,UAC5Cf,SAAU2B,KAAKjI,MAAMsG,SACrByV,UAAW9T,KAAKoW,sB,GA3IKnT,aAmJRqM,gBAAW0F,I,0DC/J1B,IAAIpc,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC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","file":"static/js/main.cc2d468b.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useDrag } from 'react-use-gesture'\nimport { useSprings, animated, interpolate } from 'react-spring'\n\nimport '../Projects.css';\n\nimport Task from './Task';\n\n\n\n/*\n *\n * Hello human,\n * good afternoon.\n *\n * I am clumsy sortable!\n *\n * Use me to sort things\n * and make sortable task lists\n *\n * TODO => put actual documentation here\n *\n * So there.\n *\n * @jemoka\n *\n */\n\nconst SortableTaskList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:\"task\", content:i}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((id, i) => {\n        let anim = springs[i];\n        return (\n            <div ref={(e)=>{dragEnvelope.current=e}}>\n            <animated.div \n                {...bind(i)} \n                className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                style={{\n                    borderRadius: 7,\n                    position: \"relative\",\n                    cursor: \"pointer\",\n                    zIndex: anim.zIndex,  // z-index is 1000 during drag\n                    transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                }} \n                onClickCapture={(e)=>{\n                    if (activelyDragging.includes(i)){ // if we are still dragging\n                        e.stopPropagation(); // no clicky!\n                    }\n                }}\n            >\n                <Task ref={objRefs[i]} tid={id} key={id+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[id]} envelope={dragEnvelope} setDragEnabled={setDragEnabled} />\n            </animated.div>\n            </div>\n    )\n    });\n}\n\nconst SortableProjectList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:i.type, content:i.type===\"project\"?i.content.id:i.content}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((item, i) => {\n        let anim = springs[i];\n        if (item.type === \"task\")\n            return (\n                <div ref = {dragEnvelope}>\n                    <animated.div \n                        {...bind(i)} \n                        className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                        style={{\n                            borderRadius: 7,\n                            position: \"relative\",\n                            cursor: \"pointer\",\n                            zIndex: anim.zIndex,  // z-index is 1000 during drag\n                            transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                        }} \n                        onClickCapture={(e)=>{\n                            if (activelyDragging.includes(i)){ // if we are still dragging\n                                e.stopPropagation(); // no clicky!\n                            }\n                        }}\n                    >\n                        <Task ref={props.activeTaskID===item.content ? props.activeTaskRef : objRefs[i]} tid={item.content} key={item.content+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[item.content]} envelope={dragEnvelope} setDragEnabled={setDragEnabled}/>\n                    </animated.div>\n                </div>\n            )\n        else if (item.type === \"project\") {\n            return (\n            <div ref={dragEnvelope}>\n                <animated.div \n                    {...bind(i)} \n                    className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                    style={{\n                        borderRadius: 7,\n                        position: \"relative\",\n                        cursor: \"pointer\",\n                        zIndex: anim.zIndex,  // z-index is 1000 during drag\n                        transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                    }} \n                    onClickCapture={(e)=>{\n                        if (activelyDragging.includes(i)){ // if we are still dragging\n                            e.stopPropagation(); // no clicky!\n                        }\n                    }}\n                >\n                    <a className=\"subproject\" style={{opacity:props.availability[item.content.id]?\"1\":\"0.35\"}} onClick={()=>{props.paginate(\"projects\", item.content.id);props.history.push(`/projects/${item.content.id}`)}}><div><i className=\"far fa-arrow-alt-circle-right subproject-icon\"/><div style={{display: \"inline-block\"}}>{props.possibleProjects[item.content.id]}</div></div></a>\n                </animated.div>\n            </div>\n            )\n        }\n    });\n}\n\nexport { SortableTaskList, SortableProjectList };\n\n\n\n","// A whole lotta imports\n\n// Ionic components\nimport { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, isPlatform } from '@ionic/react';\nimport { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, calendar } from 'ionicons/icons';\n\n// Routing\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// Cool components that we need\nimport Upcoming from './Upcoming';\nimport Calendar from './Calendar';\nimport Completed from './Completed';\nimport Perspectives from './Perspectives';\nimport Projects from './Projects';\nimport ABTIB from './Components/FloatingActionButton';\nimport Keybinds from './Components/KeybindManager';\n\n// Our very own CSS\nimport './Home.css';\n\n// Tootips\nimport ReactTooltip from 'react-tooltip';\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\nconst history = isPlatform(\"electron\") ? createHashHistory() : createBrowserHistory();\n\n/* \n *\n * Hello, human\n * Good morning\n * Read me please.\n *\n * Use the **state**'s itemSelected \n *     to manage the menu\n * use the **React Router URL** \n *     to manage the page\n *\n * Otherwise, unreload-reload won't work.\n *\n * Thanks. @jemoka.\n *\n */\n\n// Welp. The Home.\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects:[], // list of top level projects\n            perspectives:[], // list of perspectives\n            itemSelected:{item:\"upcoming\", id:undefined}, // so what did we actually select\n        };\n\n\n        // AutoBind!\n        autoBind(this);\n\n        this.abtibRef = React.createRef();\n\n        this.menu = React.createRef();\n\n    }\n\n    paginate = (to, id) => this.setState({itemSelected:{item:to ,id}}) // Does not actually paginate; instead, it... uh... sets the highlighting of the menu\n\n    componentDidMount() {\n        // This is, indeed, the view\n        // Get the current URI to set which view is selected\n        let url = (new URL(document.URL))\n        let uri = url.pathname.split(\"/\");\n        let hash = url.hash.split(\"/\");\n        if (uri[1] === \"\")\n            this.setState({itemSelected:{item:\"upcoming\", id:\"\"}});\n        else if (isPlatform(\"electron\"))\n            this.setState({itemSelected:{item:hash[1], id:hash[2]}});\n        else\n            this.setState({itemSelected:{item:uri[1], id:uri[2]}});\n\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.to !== this.state.to && this.state.to !== undefined)\n             this.setState({sends:{to:undefined, id:undefined}})\n    }\n\n    async refresh() {\n        // Load the top level projects and perspectives\n        // to set into the state and to add to the menu\n        let tlp = await this.props.engine.db.getTopLevelProjects(this.props.uid);\n        let psp = await this.props.engine.db.getPerspectives(this.props.uid);\n\n        this.setState({projects: tlp[2], perspectives:psp[2]});\n    }\n\n\n\n\n    render() {\n        const Router = isPlatform(\"electron\") ? IonReactHashRouter : IonReactRouter; // Router workaround for electron\n        return (\n            <IonPage>\n                {/* The central router that controls the routing of views */}\n                <Router history={history}>\n\t\t    <Keybinds \n\t\t\tpaginate={this.paginate} \n\t\t\tref={this.keybindRef} \n\t\t\tperspectives={this.state.perspectives}\n\t\t\tprojects={this.state.projects}\n\t\t\tabtib={this.abtibRef}\n\t\t    />\n                    {/* OoIp */}\n                    <ReactTooltip />\n                    {/* App container */}\n                    <IonContent noBounce forceOverscroll={false}>\n                        {/* Menu pane to control mobile view splitting */}\n                        <IonSplitPane id=\"main-split\" contentId=\"main\" mode=\"md\">\n                            {/* The left: menu! */}\n                            <IonMenu id=\"main-menu\" contentId=\"main\" ref={this.menu}>\n                                <br />\n                                <IonContent id=\"menu-content\" className={(()=>{\n                                    if (!isPlatform(\"electron\")) // if we are not running electron\n                                        return \"normal\"; // normal windowing proceeds\n                                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                                        return \"darwin\"; // frameless setup\n                                    }\n                                    else if (process.platform === \"win32\") // windows\n                                        return \"windows\"; // non-frameless\n\n                                })()}>\n                                    {/* === Built Ins: upcoming + completed == */}\n                                    {/* Upcoming button + link */}\n                                    <Link to=\"/upcoming\" onClick={()=>this.setState({itemSelected:{item:\"upcoming\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Upcoming button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"upcoming\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20}} icon={chevronForwardCircle} />Upcoming</div>\n                                    </Link>\n\n                                    {/* Completed button + link */}\n                                    <Link to=\"/completed\" onClick={()=>this.setState({itemSelected:{item:\"completed\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Completed button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"completed\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={checkmarkCircle} />Completed</div>\n                                    </Link>\n\n                                    {/* Calendar button + link */}\n                                    <Link to=\"/calendar\" onClick={()=>this.setState({itemSelected:{item:\"calendar\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Calendar button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"calendar\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={calendar} />Calendar</div>\n                                    </Link>\n\n                                    {/* === Perspectives == */}\n                                    <div className=\"menu-sublabel menu-decoration\">Perspectives <a onClick={()=>{\n                                        if (this.menu.current)\n                                            this.menu.current.close();\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"perspective.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/perspectives/${npid}/do`);\n                                            this.paginate(\"perspectives\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n\n                                    {/* === Perspective button + link == */}\n                                    {this.state.perspectives.map((psp) => {\n                                        return (\n                                            <Link key={psp.id} to={`/perspectives/${psp.id}`} onClick={()=>this.setState({itemSelected:{item:\"perspectives\", id:psp.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"perspectives\" && this.state.itemSelected.id === psp.id ? \"menu-item-selected\" : \"\")}><i className=\"fas fa-layer-group\" style={{paddingRight: 2}}></i> {psp.name}</div> \n                                            </Link>\n                                        )\n                                    })}\n\n\n                                    {/* === Projects == */}\n                                    <div className=\"menu-sublabel menu-decoration\">Projects <a onClick={()=>{\n                                        if (this.menu.current)\n                                            this.menu.current.close();\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"project.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/projects/${npid}/do`);\n                                            this.paginate(\"projects\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n                                    {/* === Project Contents == */}\n                                    {this.state.projects.map((proj) => {\n                                        return (\n                                            <Link key={proj.id} to={`/projects/${proj.id}`} onClick={()=>this.setState({itemSelected:{item:\"projects\", id:proj.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"projects\" && this.state.itemSelected.id === proj.id ? \"menu-item-selected\" : \"\")}><IonIcon icon={listOutline}/>{proj.name}</div></Link> \n                                        )                            \n                                    })}\n\n                                </IonContent>\n\n                                {/* Logout button */}\n                                <div className=\"menu-item\" id=\"logout\" onClick={()=>{history.push(`/`);this.props.dispatch({operation: \"logout\"})}}><i className=\"fas fa-snowboarding\" style={{paddingRight: 5}} />Logout</div>\n                            </IonMenu>\n                            <IonPage id=\"main\">\n                                {/* the add button to inbox button*/}\n                                <ABTIB reference={this.abtibRef} uid={this.props.uid} gruntman={this.props.gruntman} />\n                                {/* the portal root for DOM elements to park */}\n                                <div id=\"parking-lot\"></div>\n                                {/* The actual page */}\n                                <IonRouterOutlet>\n                                    {/* empty => /upcoming*/}\n                                    <Route render={() => <Redirect to=\"/upcoming\"/>}/>\n                                    {/* / => /upcoming */}\n                                    <Route exact path=\"/\" render={() => <Redirect to=\"/upcoming\" />} />\n                                    {/* and the perspective switch */}\n                                    <Switch>\n                                        {/* upcoming renders upcoming */}\n                                        <Route path=\"/upcoming\" exact render={()=><Upcoming engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} displayName={this.props.displayName} />} />\n                                        {/* completed renders completed */}\n                                        <Route path=\"/calendar\" exact render={()=><Calendar engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} />} />\n\n                                        {/* completed renders completed */}\n                                        <Route path=\"/completed\" exact render={()=><Completed engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} />} />\n\n                                        {/* perspective renders perspectives */}\n                                        <Route path=\"/perspectives/:id/:create?\" render={({match})=><Perspectives engine={this.props.engine} paginate={this.paginate} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh}  options={match.params.create}/>}  />\n\n                                        {/* project renders perspectives */}\n                                        <Route path=\"/projects/:id/:create?\" render={({match})=><Projects engine={this.props.engine} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh} paginate={this.paginate} options={match.params.create}/>}  />\n                                        {/* TODO projects */}\n                                    </Switch>\n                                </IonRouterOutlet>\n                            </IonPage>\n                        </IonSplitPane>\n                    </IonContent>\n                </Router>\n            </IonPage>\n        );\n    }\n};\n\nexport default Home;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform, IonInfiniteScroll, IonInfiniteScrollContent } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Upcoming.scss';\nimport './Pages.css';\n\nimport { SortableTaskList } from './Components/Sortable';\n\nimport Task from './Components/Task';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\n/* \n * The lack of a poem here is scathing\n * so I thought\n * I'd contribute.\n *\n * The homepage needs no introduction\n * For it explains itself in production.\n *\n * But alas,\n * I still write this.\n *\n * What for?\n *\n * @Jemoka\n *\n */\n\n\nclass Upcoming extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        let tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate()+1);\n\n        let greetings = [\"Hello,\", \"Hey,\", \"Heyo,\", \"Aloha,\", \"Yo!\"];\n\n        this.state = {\n            inbox: [], // define the inbox\n            dueSoon: [], // whats due soon? \n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            timeline: [],\n            timelineShown: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        autoBind(this);\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pandt = await this.props.engine.db.getInboxandDS(this.props.uid, avail) // get inbox and due soon \n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.updatePrefix = this.random();\n\n        let timeline = await this.props.engine.db.selectTasksInRange(this.props.uid, new Date(), new Date(2100, 1, 1), true);\n        \n                            //timeline.push({type: \"label\", content: timelineRenderedUntil});\n                        //for (let task of fTasks)\n                            //timeline.push({type:\"task\", content:task});\n\n                        //this.setState({timelineRenderedUntil, timelineSoFar: timeline});\n        // Date same date check https://stackoverflow.com/questions/4428327/checking-if-two-dates-have-the-same-date-info\n        timeline = timeline.filter((x)=>!pandt[1].includes(x[0]))\n        Date.prototype.isSameDateAs = function(pDate) {\n          return (\n            this.getFullYear() === pDate.getFullYear() &&\n            this.getMonth() === pDate.getMonth() &&\n            this.getDate() === pDate.getDate()\n          );\n        }\n\n        let refrenceDate = new Date();\n        let tcontent = [];\n        for (let task of timeline) {\n            let due = new Date(task[1].due.seconds*1000);\n            if (!due.isSameDateAs(refrenceDate)) {\n                tcontent.push({type:\"label\", content: due});\n                refrenceDate = due;\n            }\n            tcontent.push({type:\"task\", content: task[0]});\n        }\n\n        this.setState({inbox: pandt[0], dueSoon: pandt[1], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, timeline: tcontent});\n    }\n\n    componentDidMount() {\n        this.refresh();\n\n        //// Jack and the Misadventures of Hiding the Scrollbar\n        //const content = this.pageRef.current;\n        //const styles = document.createElement('style');\n        //styles.textContent = `\n            //.scroll-y::-webkit-scrollbar {\n                //display: none;\n            //}\n        //`;\n        {/*content.shadowRoot.appendChild(styles);*/}\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n\n    render() {\n\n        return (\n            <IonPage>\n                <div style={{overflow: \"hidden\"}}>\n\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n                        <div className=\"header-container\" onTouchMove={(e)=>e.preventDefault()}>\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle><i className=\"fas fa-bars\" style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} /></IonMenuToggle> <h1 className=\"page-title\"><i style={{paddingRight: 10}} className=\"fas fa-chevron-circle-right\"></i>Upcoming</h1> \n\n                                    \n                            <div className=\"greeting-datewidget\">\n                                <div style={{display: \"inline-block\"}} className=\"greeting-date\">{(new Date()).getDate()}</div>\n                                <div style={{display: \"inline-block\"}} className=\"greeting-datename\">{new Date().toLocaleString('en-us', {  weekday: 'long' })}</div>\n                            </div>\n                            \n\n\n                                <div className=\"greeting-container\"><span id=\"greeting\">{this.state.greeting}</span> <span id=\"greeting-name\" style={{fontWeight: 600}}>{this.props.displayName}</span></div>\n                            </div>\n                        </div>\n                        <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", flexGrow: 5}}>\n                            <div>\n                                {(()=>{\n                                    if (this.state.inbox.length > 0)\n                                        return <div className=\"page-label\">Unsorted<IonBadge className=\"count-badge\">{this.state.inbox.length}</IonBadge></div>\n                                })()}\n                                <SortableTaskList list={this.state.inbox} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                            </div>\n                            <div>\n                                {(()=>{\n                                    if (this.state.dueSoon.length > 0)\n                                        return <div className=\"page-label\">Due Soon<IonBadge className=\"count-badge\">{this.state.dueSoon.length}</IonBadge></div>\n                                })()}\n                                {this.state.dueSoon.map(id => (\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                            </div>\n                            <div>\n                                <div className=\"timeline-button\">\n                                    <a \n                                        onClick={()=>\n                                                this.setState({timelineShown: !this.state.timelineShown})} \n                                        // for some reason, css classes don't work, so we have to style here\n                                        // @jack? why don't they? well, styling here's fine anyways. most likely b/c they are overrode by className=timeline-button\n                                        style={{\n                                            marginLeft: 15,\n                                            marginTop: 20, \n                                            display: \"inline-block\", \n                                            fontWeight: 600, \n                                            fontSize: 13, \n                                            //color: \"var(--decorative-light-alt)\", \n                                            cursor: \"pointer\"}}\n                                    >\n                                        <i \n                                            className=\"fas fa-calendar-week\" \n                                            style={{paddingRight: 5}}\n                                        ></i> {this.state.timelineShown? \"Hide\" : \"Show\"} timeline</a>\n                                </div> \n                                {\n                                    (()=>{\n                                        if (this.state.timelineShown)\n                                            return this.state.timeline.map(timelineItem => {\n                                                if (timelineItem.type === \"task\")\n                                                    return <Task tid={timelineItem.content} key={timelineItem.content+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[timelineItem.content]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                                        else if (timelineItem.type === \"label\")\n                                                    return <div className=\"timeline-box\"><div className=\"timeline-line-container\"><div className=\"timeline-line\">&nbsp;</div></div><div className=\"timeline-text\"><span className=\"timeline-weekname\">{timelineItem.content.toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</span></div></div>\n\n\n                                            })\n                                    })()\n                                }\n                                {\n                                    (()=>{\n                                            if (this.state.timelineShown)\n                                            return <span style={{fontSize: 8, color:\"var(--commitid)\", paddingLeft:10, paddingTop:10}}>Commit ID: {process.env.REACT_APP_COMMIT_HASH}</span>\n                                    })()\n                                }\n                            </div>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\n// Hiding scrollbar, a journey\n\n\n\nexport default Upcoming;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport {withGetScreen} from 'react-getscreen'\nimport './Calendar.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport CalendarPopover, { CalendarUnit } from './Components/CalendarPopover';\nimport CalendarTasklistPopover from './Components/CalendarTasklistPopover';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n *\n * Apparently,\n * People like calendars.\n *\n * WHY?\n *\n * People don't respect \n * the existance \n * of the whole idea of GTD.\n *\n * Seriously.\n *\n * Why. A calendar?! in a GTD app.\n *\n * FINE. Here's your calendar.\n *\n * @jemoka\n *\n *\n */\n\nlet refreshed = 0;\n\nfunction CalPageBigOllendar(props) {\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let [dateSelected, setDateSelected] = useState(new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    let [heat, setHeat] = useState({});\n\n    let [isPopoverShown, setIsPopoverShown] = useState(false);\n\n    let [shownList, setShownList] = useState([]);\n    \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    let refresh = (async function() {\n            let map = new Map();\n            let names = new Map();\n            let ids = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([id, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n                if(names.has(time))\n                    names.set(time, [...names.get(time), val.name]);\n                else\n                    names.set(time, [val.name]);\n                if(ids.has(time))\n                    ids.set(time, [...ids.get(time), id]);\n                else\n                    ids.set(time, [id]);\n\n            });\n            let values = Array.from(map.values());\n            let nameList = Array.from(names.values());\n            let idList = Array.from(ids.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]={color:hexes[i], value:values[i], names:nameList[i], ids: idList[i]}});\n            }\n            setHeat(hm);\n        })\n\n    useEffect(()=>{\n        refresh();\n    },[dateSelected, refreshed]);\n\n    return (\n        <div id=\"calendar-page-bigol-calendar-wrapper\" style={{display: \"inline-block\", height: \"85%\", width: \"95%\", ...props.style}}>\n            <CalendarTasklistPopover uid={props.uid} engine={props.engine} isShown={isPopoverShown} onDidDismiss={()=>setIsPopoverShown(false)} list={shownList} availability={props.availability} datapack={props.datapack} gruntman={props.gruntman} currentDate={dateSelected}/>\n            <div id=\"bigol-calendar-wrapper\">\n                <div id=\"bigol-calendar-daterow\">\n                    <span className=\"bigol-calendar-daterow-item\">Sun</span>\n                    <span className=\"bigol-calendar-daterow-item\">Mon</span>\n                    <span className=\"bigol-calendar-daterow-item\">Tues</span>\n                    <span className=\"bigol-calendar-daterow-item\">Wed</span>\n                    <span className=\"bigol-calendar-daterow-item\">Thu</span>\n                    <span className=\"bigol-calendar-daterow-item\">Fri</span>\n                    <span className=\"bigol-calendar-daterow-item\">Sat</span>\n                </div>\n                <div id=\"bigol-calendar-container\">\n                    {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                    <span className={`bigol-calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                        backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                            `#${heat[i.content].color}` :\n                            \"inherit\")\n                    }}\n                        onClick={(e)=>{\n                            let date;\n                            if (i.type === \"pre\")\n                                date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                            if (i.type === \"actual\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                            if (i.type === \"post\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                            setDateSelected(date);\n                            if (heat[i.content])\n                                setShownList(heat[i.content].ids);\n                            else\n                                setShownList([]);\n                            setIsPopoverShown(true)\n                            if (props.onDateSelected)\n                                props.onDateSelected(date);\n                        }}>\n                        <div className=\"calendar-date-text\">\n                            {i.content}<span className=\"calendar-date-value\">{(heat[i.content]&&i.type===\"actual\")?`${heat[i.content].value} Tasks`:null}</span></div><div style={{marginLeft: 6, marginRight: 5, marginBottom: 2}}>{((heat[i.content]&&i.type===\"actual\")?heat[i.content].names:[]).map((name)=><span className=\"calendar-date-taskname\"><div className=\"calendar-task-circle\">&nbsp;</div>{name}</span>)}</div>\n                    </span>\n                    )}\n                </div>\n                <div id=\"bigol-calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected)\n                            props.onDateSelected(new Date());\n\n                    }}>Today</div>\n\n\n                </div>\n\n                <div id=\"bigol-calendar-infopanel\">\n                    <div id=\"bigol-calendar-dategroup\">\n                        <div className=\"bigol-calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                        <div className=\"bigol-calendar-infopanel-datename\">{dateSelected.toLocaleString('en-us', {  weekday: 'long' })}</div>\n                        <div className=\"bigol-calendar-infopanel-month\">{dateSelected.toLocaleString('en-us', { month: 'long' })}</div>\n                        <div className=\"bigol-calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nclass Calendar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let today = new Date();\n        today.setHours(0,0,0,0);\n\n        this.state = {\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            currentDate: (today), // new date\n            taskList: [],\n            popoverIsVisible: false,\n\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        let endDate = new Date(this.state.currentDate);\n        endDate.setHours(23,59,59,60);\n        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, this.state.currentDate, endDate);\n\n        refreshed++;\n\n        this.setState({\n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB, \t\t\t      // and the project db \n            taskList\n        }); // once we finish, set the state\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                {/* the perspective editor! */}\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-calendar-alt\">\n                                    </i>\n                                    Calendar\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                            </div> \n                        </div>\n                    </div>\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", height: \"100%\"}}>\n                        <div id=\"calendar-page-wrapper\">\n                            {(()=>{\n                                if (this.props.isMobile())\n                                    return <CalendarUnit uid={this.props.uid} engine={this.props.engine} isShown={this.state.popoverIsVisible} onDidDismiss={()=>this.setState({popoverIsVisible: false})}  onDateSelected={(async function(d){\n                                        let endDate = new Date(d.getTime());\n                                        endDate.setHours(23,59,59,60);\n                                        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, d, endDate);\n                                        this.setState({currentDate: d, taskList});\n                                    }).bind(this)}/>\n                                else \n                                    return <CalPageBigOllendar gruntman={this.props.gruntman}  uid={this.props.uid} engine={this.props.engine} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                            })()}\n                            {(()=>{\n                                if (this.props.isMobile())\n                            return <div id=\"calendar-page-taskpage-wrapper\">\n                                <span id=\"calendar-page-header\">\n                                    <div class=\"calendar-page-count\">{this.state.taskList.length}</div>\n                                    <div class=\"calendar-page-title\">tasks due on</div>\n                                    <div class=\"calendar-page-date\">{this.state.currentDate.toLocaleString('en-us', {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'  })}</div>\n                                </span>\n                                {this.state.taskList.map(id=>(\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                            </div>\n                            })()}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\nexport default withGetScreen(Calendar, {mobileLimit: 720, tabletLimit:768, shouldListenOnResize: true});\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { createRef, useEffect, useRef } from 'react';\nimport '../Calendar.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\nimport Task from '../Components/Task';\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the calendar popover\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\n\nfunction CalendarTasklistPopover(props) {\n\n    let refs = useRef([]);\n\n    useEffect(()=>{\n        refs.current=props.list.map((_)=>createRef());\n    }, [props.list]);\n\n    return (\n        <IonModal ref={props.reference} isOpen={props.isShown} onDidDismiss={() => {if(props.onDidDismiss) props.onDidDismiss()}} style={{borderRadius: 5}} cssClass=\"calendar-list-popover\">\n                <div id=\"airplane-hanger\"></div> {/*to mount the calendar*/}\n            <div className=\"popover-list\">\n                <span id=\"calendar-page-header\">\n                    <div class=\"calendar-page-count\">{props.list.length}</div>\n                    <div class=\"calendar-page-title\">tasks due on</div>\n                    <div class=\"calendar-page-date\" >{props.currentDate.toLocaleString('en-us', {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'  })}</div>\n                </span>\n\n                {props.list.map((id, i)=>\n                    <div ref={refs.current[i]}>\n                        <Task tid={id} key={id} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[id]} datapack={props.datapack} envelope={refs.current[i]} onModal={true}/>\n                    </div>\n                )}\n                <div className=\"bottom-helper\" style={{height: 150}}>&nbsp;</div>\n            </div>\n        </IonModal>\n    )\n}\n\nexport default CalendarTasklistPopover;\n\n","// IMPORTS\nimport { IonContent, IonPage, IonMenuToggle, isPlatform } from '@ionic/react'; \nimport React, { Component, useEffect } from 'react';\nimport './Completed.css';\nimport './Pages.css';\nimport Task from './Components/Task';\nconst autoBind = require('auto-bind/react'); // autobind is a lifesaver\n\n/*\n\n * Sometimes we complete.\n *\n * This is not always correct,\n *\n * so we have this page! \n *\n * @enquirer\n\n*/\n\n// construtor for rendered object\nfunction TaskObject(type, contents) {\n    this.type = type; // set the type to the type (label or task)\n    this.contents = contents; // set the contents to the contents (title or id)\n}\n\n// define the main component!\nclass Completed extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // the objects we render\n            tasksShown: 1, // track the number of times we have fetched more\n            taskCats: [\"Today\", \"Yesterday\", \"This Week\", \"This Month\", \"Even Before\"], // define task categories (cats!)\n            rendering: true, // define whether or not the element is rendering \n            possibleProjects:{}, // see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    async refresh() {\n        let taskArr = []; // define temp array\n        let full = await this.props.engine.db.getCompletedTasks(this.props.uid); // get the tasks from the database \n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n        // loop through the tasks, converting to objects and inserting labels between each cat\n        full.forEach((cat, i) => {\n            taskArr.push(new TaskObject(\"label\", this.state.taskCats[i])) // each iteration, push the next label to the temp arr\n            cat.forEach(task => { // this loops through each cat\n                taskArr.push(new TaskObject(\"task\", task)) // convert each task to an object then push it to the temp arr\n            })\n        });\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.setState({taskList: taskArr, rendering: false, possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB}); // once we finish, set the state\n        // also set rendering to false. \n        // This is a hacky solution instead of creating an entirely new async function.\n    }\n\n    async componentDidMount() {\n        this.refresh(); // refresh when the component mounts\n    }\n\n    handleFetchMore() {\n        this.setState({rendering: true}) // trigger loading screen\n        const loader =  setTimeout(() => { // set a timeout to set the rendering to false \n            this.setState({rendering: false})\n\n        }, 2);\n\n        const updateTasks =  setTimeout(() => { // set another timeout for the actual task update\n            this.setState({tasksShown: this.state.tasksShown+1}) \n            // increment tasksShown by one whenever fetch more is clicked\n            // this renders 10 more items \n            this.setState({rendering: false}) // set rendering to false\n        }, 1)\n\n        // disclaimer: I do not understand how this works. I was just messing around trying to debug and this happened to work.\n        // if it ain't broke, dont fix it? \n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                <div style={{overflowY: \"scroll\"}}>\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n\n                        <div className=\"header-container\">\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle>\n                                    <i class=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-check-circle\">\n                                    </i>\n                                    Completed\n                                </h1> \n                            </div>\n                        </div>\n                        {/* loop through the taskList ten times, multiplyed by the times we have fetched more */}\n                        {/* if the cat is empty or the final item rendered is a label, don't render it */}\n                        {/* otherwise, render a task */}\n                        {/* for the fetch more, if we are currently rendering, render a loading animation. */}\n                        {/* Otherwise, render a fetch more.*/}\n                        <div style={{overflowY: \"scroll\"}}>\n                            {this.state.taskList.slice(0, 10*this.state.tasksShown).map((content, i) => (\n                                <div style={{marginLeft: 10, marginRight: 10}}>\n                                    {(content.type == \"label\")?  \n                                            (this.state.taskList[i+1] ? \n                                                ((this.state.taskList[i+1].type == \"label\" || this.state.taskList.slice(0, 10*this.state.tasksShown).length == i+1) ? \n                                                \"\" : <p className=\"page-label\" style={{marginBottom:0}}>{content.contents}</p>) : \"\") : \n                                                <Task \n                                                    tid={content.contents} \n                                                    startingCompleted={true}\n                                                    key={content.contents+\"-\"+this.updatePrefix} \n                                                    uid={this.props.uid} \n                                                    engine={this.props.engine} \n                                                    gruntman={this.props.gruntman} \n                                                    availability={this.state.availability[content.contents]} \n                                                    datapack={[this.state.tagSelects,\n                                                        this.state.projectSelects, \n                                                        this.state.possibleProjects, \n                                                        this.state.possibleProjectsRev, \n                                                        this.state.possibleTags, \n                                                        this.state.possibleTagsRev]}\n                                                />\n                                    }\n                                </div>\n                            ))}\n\n                        <div className=\"fetch-more\" > \n                            {/* define the fetch more button */}\n                            {this.state.rendering? <p className=\"loader\" >Loading...</p> : <p onClick={this.handleFetchMore}>Fetch more...</p>}\n                        </div> \n                    <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default Completed;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Perspectives.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport PerspectiveEdit from './Components/PerspectiveEditor';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n * To sort, we give our tasks tags\n *\n * We can also give them flags\n * \n * With perspectives we filter,\n *\n * To keep our tasks in kilter,\n *\n * Then refactor the code if it lags!\n *\n *\n * @enquirer\n *\n */\n\n\nclass Perspectives extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // what tasks should we display? \n            perspectiveName: \"\", // whats the perspective name? \n\t    perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n\t    perspectiveAvail: {}, // whats the perspective availability? \n\t    perspectiveTord: {},  // whats the perspective ordering?\n\t    // not truth or dare. jack doent even know what that is! ^^ \n            showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n\n        };\n\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let possiblePerspectives = await this.props.engine.db.getPerspectives(this.props.uid); // get all possible perspectives\n        let perspectiveObject = possiblePerspectives[0][this.props.id] // get the one we want based on page id \n        let taskList = await this.props.engine.perspective.calc(this.props.uid, perspectiveObject.query, perspectiveObject.avail, perspectiveObject.tord) // then get the tasks from that perspective\n\n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.setState({\n            taskList: taskList,                           // set the tasklist, \n            perspectiveName: perspectiveObject.name,     // set the perspective name \n\t    perspectiveQuery: perspectiveObject.query,  // set the perspective query \n\t    perspectiveAvail: perspectiveObject.avail, // set the perspective avail \n\t    perspectiveTord: perspectiveObject.tord,  // set the perspective tord \n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB \t\t\t      // and the project db \n        }); // once we finish, set the state\n    }\n\n    updateName(e) {\n        if (e) { // if the name if defined, \n            this.props.gruntman.registerScheduler(() => {\n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n\t\t\t// pass it the things \n                        uid: this.props.uid, // the user id \n                        id: this.props.id,  // the perspective id \n                        payload: {name: e.target.value} // the action, setting name to the new value \n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n            this.setState({perspectiveName: e.target.value}) // set the perspectiveName\n        }\n    } \n\n\n    handleDelete() {\n        this.props.history.push(\"/upcoming\"); // go back\n        this.props.paginate(\"upcoming\"); // idk man \n        this.props.gruntman.do( // call a gruntman function\n            \"perspective.delete__perspective\", { \n                uid: this.props.uid, // pass it the user id \n                id: this.props.id, // and the current id \n            }\n        ).then(()=>{\n            this.props.menuRefresh(); // refresh menubar\n\n        }) // call the homebar refresh\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) { // if we updated the defer date\n            this.setState({\n                taskList: [], // what tasks should we display? \n                perspectiveName: \"\", // whats the perspective name? \n                perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n                perspectiveAvail: {}, // whats the perspective availability? \n                perspectiveTord: {},  // whats the perspective ordering?\n                // not truth or dare. jack doent even know what that is! ^^ \n                showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n                possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n                possibleTags:{}, \n                possibleProjectsRev:{}, \n                possibleTagsRev:{}, \n                availability: [], \n                projectSelects:[], \n                tagSelects: [], \n                projectDB: {}\n\n            });\n\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n        }\n        // so we want to refresh the perspective that's rendered\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.setState({showEdit: true});\n\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n\t\t{/* the perspective editor! */}\n                <PerspectiveEdit \n                    reference={this.repeater} \n                    isShown={this.state.showEdit} \n                    onDidDismiss={this.hideEdit}\n                    uid={this.props.uid} \n                    engine={this.props.engine} \n                    gruntman={this.props.gruntman}\n                    id={this.props.id}\n                    perspectiveName={this.state.perspectiveName}\n                    query={this.state.perspectiveQuery}\n                    avail={this.state.perspectiveAvail}\n                    tord={this.state.perspectiveTord}\n                    menuRefresh={this.props.menuRefresh}\n                    updateName={this.updateName}\n                    startHighlighted={this.props.options === \"do\"}\n                />\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n\t\t    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-layer-group\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.perspectiveName} // TODO: jack this is hecka hacky\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n\n                                <div className=\"greeting-container\" style={{marginLeft: 11, marginTop: 7}}>\n                                    <a \n                                        onClick={this.showEdit} \n                                        data-tip=\"LOCALIZE: Edit\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}}>\n                                        <i className=\"fas fa-edit\" \n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, \n                                                transform: \"translate(2px, -2px)\"}} \n                                        ></i>\n                                    </a>\n\n                                    <a \n                                        onClick={this.handleDelete} \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}>\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\"}}>\n\n                        {this.state.taskList.map(id => (\n                            <Task \n                                tid={id}\n                                key={id+\"-\"+this.updatePrefix} \n                                uid={this.props.uid} \n                                engine={this.props.engine} \n                                gruntman={this.props.gruntman} \n                                availability={this.state.availability[id]} \n                                datapack={[\n                                    this.state.tagSelects, \n                                    this.state.projectSelects, \n                                    this.state.possibleProjects, \n                                    this.state.possibleProjectsRev, \n                                    this.state.possibleTags, \n                                    this.state.possibleTagsRev\n                                ]}\n                            />\n                        ))}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Perspectives);\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\nimport '../Perspectives.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\nconst autoBind = require('auto-bind/react');\n\n\n/* \n * perspectives are amazing \n *\n * dab on them haters \n *\n * I just said the cringiest thing ever\n *\n * oh my god huxley i swear to god \n *\n * i will rebase your commits \n *\n *\n * - @zbuster05, recorded by @enquirer\n *\n */\n\nclass PerspectiveEdit extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            inputEvent: \"\", // define our input event for the perspective title \n        }\n\n        this.name = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.startHighlighted) // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    handleQueryChange(e) {\n        if (e) { // if the event is defined \n            this.props.gruntman.registerScheduler(() => { \n                //Register a scheduler to deal with React's onChange\n                //check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n                        // pass it the things \n                        uid: this.props.uid, // pass it the uid \n                        id: this.props.id,  // pass it the perspective id \n                        payload: {query: e.target.value} // pass it the action, updating the query\n                    }\n                )\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n        } else {console.log(e)}\n    }\n\n    handleHelp() { // TODO TODO TODO: jack what do u want here? \n        alert(\"You really think we have documentation ready? I mean, if they are there, they are at docs.condution.com\")\n        console.log(\"no one is here to help. grow up.\")\n    }\n\n    render() {\n        return (\n            <IonModal \n                ref={this.props.reference} \n                isOpen={this.props.isShown} \n                onWillPresent={() => {this.props.gruntman.lockUpdates();}}\n                onDidDismiss={() => {\n                    this.props.gruntman.unlockUpdates(); \n                    this.props.updateName(this.state.inputEvent);\n                    if (this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}\n                } \n                cssClass={\"perspective-modal\"}\n            > \n\n                <div>\n                    {/* Header */}\n                    <div className=\"perspective-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\", whiteSpace: \"nowrap\"}}>\n                            <b className=\"bold-prefix\" >Let&#39;s build &nbsp;</b> \n                            <input className=\"editable-title pbuilder-pname\" \n                                ref={this.name}\n                                defaultValue={this.props.perspectiveName} \n                                onChange={(e)=> {e.persist(); this.props.updateName(e); this.setState({inputEvent: e})}}\n                                style={{minWidth: 0}}\n                                placeholder=\"Tap to set name\"\n                            />\n\n                            <div className=\"repeat-task-name\">{this.state.name}</div>\n                        </span>\n                        {/* Close button */} \n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss} style={{transform: \"translate(-10px, 3px)\"}}><i className=\"fa fa-times\"></i></a>\n\n                    </div>\n                    <div className=\"build-input\">\n                        <span className=\"bold-prefix\" style={{minWidth: \"70px\", marginTop: \"4px\"}}>Filter by</span>\n                        <input \n                            className=\"build-input-edit\"\n                            defaultValue={this.props.query}\n                            onChange={(e)=> {e.persist(); this.handleQueryChange(e)}}\n                            placeholder=\"LOCALIZE: perspective query\"\n                        >\n                        </input> \n                    </div>\n\n\n                    <div className=\"perspective-basic-row\">\n                        <span className=\"pbasic-container\" style={{marginRight: \"25px\"}}>\n                            <span>\n                                <i className=\"repeat-label fas fa-exchange-alt\"></i>\n                                <span className=\"perspective-label\">Include</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.avail} // TODO: make a database hit \n                                mode=\"ios\"\n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the user id \n                                            id: this.props.id,  // pass it the perspective id\n                                            payload: {avail: e.detail.value} // set the availability \n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"remain\">Remaining</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"avail\">Available</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"flagged\">Flagged</IonSelectOption>\n                            </IonSelect>\n                        </span>\n\n                        <span className=\"pbasic-container\">\n                            <span>\n                                <i className=\"repeat-label fas fa-sort-amount-down-alt\"></i>\n                                <span className=\"perspective-label\">Order</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.tord} \n                                mode=\"ios\" \n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the things, you know the drill \n                                            id: this.props.id, \n                                            payload: {tord: e.detail.value}\n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duas\">Ascend by Due</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duds\">Descend by Due</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deas\">Ascend by Defer</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deds\">Descend by Defer</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"alph\">Alphabetical</IonSelectOption>\n                            </IonSelect>\n                            <div className=\"help-icon\" onClick={this.handleHelp}>\n                                <i \n                                    className=\"far fa-question-circle\" \n                                ></i>\n                            </div>\n                        </span>\n\n\n                    </div> \n\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default PerspectiveEdit;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Projects.css';\nimport './Pages.css';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport Task from './Components/Task';\n\nimport { withRouter } from \"react-router\";\n\nimport { SortableProjectList } from './Components/Sortable';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\nclass Projects extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '', // project name\n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            parent: \"\",\n            is_sequential: false,\n            currentProject: {children:[]},\n            activeTask: \"\"\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        this.activeTask = React.createRef();\n\n        this.name = React.createRef();\n\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) // if we updated the defer date\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.updatePrefix = this.random();\n        let cProject = (await views.props.engine.db.getProjectStructure(this.props.uid, this.props.id, false));\n        this.setState({name:pPandT[0][0][this.props.id], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, currentProject: cProject, is_sequential: cProject.is_sequential, parent: cProject.parentProj});\n    }\n\n    componentDidMount() {\n        this.refresh();\n        if (this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    updateName(e) {\n        if (e) {\n            this.props.gruntman.registerScheduler(() => { \n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"project.update__name\", { \n                        uid: this.props.uid, // pass it the things vvv\n                        id: this.props.id, \n                        name: e.target.value\n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `project.this.${this.props.id}-update`) // give it a custom id\n            this.setState({name: e.target.value})\n        } else { console.log(e)}\n    } \n\n    render() {\n        return (\n            <IonPage>\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    {(()=> {\n                                        if (this.state.parent !== \"\")\n                                            return <a className=\"fas fa-chevron-left backbutton\" onClick={()=>{this.props.paginate(\"projects\", this.state.parent);this.props.history.push(`/projects/${this.state.parent}`)}} />\n                                    })()}\n                                    <i style={{paddingRight: 4}} \n                                        className=\"fas fa-tasks\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.name} // TODO: jack this is hecka hacky\n                                        style={{transform: \"transformY(-2px)\"}}\n                                        ref={this.name}\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                                <div className=\"greeting-container\" style={{marginLeft: 5, marginTop: 7}}>\n                                    <a \n                                        onClick={()=> {\n                                            this.setState({is_sequential: !this.state.currentProject.is_sequential}, () => {\n                                                this.props.gruntman.do( // call a gruntman function\n                                                    \"project.update__pstate\", { \n                                                        uid: this.props.uid, // pass it the things vvv\n                                                        id: this.props.id, \n                                                        is_sequential: this.state.is_sequential\n                                                    }\n                                                );\n                                            }); // change the icon\n                                        }} \n                                        data-tip=\"LOCALIZE: Sequencial/Paralellel\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className={this.state.is_sequential ? \"fas fa-arrows-alt-v\":\"fas fa-arrows-alt-h\"}\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 13, transform: this.state.is_sequential ? \"translate(3.5px, -1px)\" : \"translate(0.25px, -1px)\"}}>\n                                        </i>\n                                    </a>\n                                    <a \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        onClick={()=>{\n                                            this.props.gruntman.do( // call a gruntman function\n                                                \"project.delete\", { \n                                                    uid: this.props.uid, // pass it the things vvv\n                                                    pid: this.props.id, \n                                                    parent: (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent\n                                                }\n                                            ).then(()=>{\n                                                this.props.menuRefresh(); // refresh menubar\n                                                this.props.history.push((this.state.parent === \"\" || this.state.parent === undefined) ? \"/upcoming/\" : `/projects/${this.state.parent}`); // go back\n                                                this.props.paginate((this.state.parent === \"\" || this.state.parent === undefined) ? \"upcoming\" : `projects`, (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent);\n                                            }) // call the homebar refresh\n                                        }}\n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}\n                                        >\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", overflowX: \"hidden\"}}>\n\n                        <SortableProjectList list={this.state.currentProject.children} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]} possibleProjects={this.state.possibleProjects} history={this.props.history} paginate={this.props.paginate} activeTaskRef={this.activeTask} activeTaskID={this.state.activeTask}/>\n\n                        <div style={{marginTop: 10}}>\n                            <a className=\"newbutton\" onClick={()=>{\n                                this.props.gruntman.do( // call a gruntman function\n                                    \"task.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        pid: this.props.id, \n                                    },\n                                    true // bypass updates to manually do it + make it quicker\n                                ).then((result)=>{\n                                    let cProject = this.state.currentProject; // get current project\n                                    let avail = this.state.availability; // get current availibilty\n                                    avail[result.tid] = true; // set the current one to be available, temporarily so that people could write in it\n                                    cProject.children.push({type: \"task\", content:result.tid}); // add our new task\n                                    this.setState({activeTask:result.tid, currentProject: cProject, availability: avail}, () =>  this.activeTask.current._explode() ) // wosh!\n                                }) // call the homebar refresh\n                            }}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>Add a Task</div></div></a>\n                            <a className=\"newbutton\" onClick={async function() {\n                                let npid = (await this.props.gruntman.do( // call a gruntman function\n                                    \"project.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        parent: this.props.id, \n                                    },\n                                )).pid;\n                                this.props.history.push(`/projects/${npid}/do`);\n                            }.bind(this)}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>Add a Project</div></div></a>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Projects);\n\n","//import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport React, { useState } from 'react';\nimport './FloatingActionButton.css';\nimport * as chrono from 'chrono-node';\nimport {useSpring, animated} from 'react-spring'\n\n\n/*\n * Hello human,\n * You know I'm not Jack because my pen has no nib\n * You know I'm not Huxley because I can't adlib\n * If I said I could do frqnt end, I'd be telling a fib\n * And now, as punishment, I've lost a rib\n * But alas, here is abtib ^-^\n *\n * ~~@Exr0n~~\n * @Ex-rib\n *\n */\n\nconst defaultValue = \"Add something to the inbox?\";\n\nfunction handleABTIBInput(value) {\n    console.log('abtib reportin to handle input ^-^');\n    console.log(value);\n    // TODO: nlp it\n    // TODO: create the task\n}\n\nfunction ABTIB(props) {\n    const [isExpanded, setisExpanded] = useState(false);\n    const [isSaving, setisSaving] = useState(false);\n\n    const anim = useSpring({\n\tto: \n\t    (isSaving ? \n\t\t{\n\t\t    width: 280, \n\t\t    color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd-success)\"\n\t\t} \n\n\t\t: \n\n\t\t{\n\t\t    width: isExpanded ? 280:250, \n\t\t    color:\"var(--quickadd-text)\", \n\t\t    //color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd)\",\n\t\t    //backgroundColor: \"var(--quickadd-success)\"\n\t\t}\n\t    )\n    })\n\n    return <animated.input \n\t\tid=\"abtib\" \n\t\treadOnly={false} \n\t\ttype=\"text\" \n\t\tdefaultValue={\"\"} \n\t\tstyle={anim} \n\t\tclassName=\"attib\"\n\t\tref={props.reference}\n\n        onFocus={\n            (event) => {\n                event.target.value = \"\";\n                setisExpanded(true);\n            }\n        }\n        onBlur={e=>{\n            setisExpanded(false);\n            setisSaving(false);\n            e.target.value = \"\";\n        }}\n        onKeyUp={\n            (event) => {\n                if (event.key === 'Enter') {\n                    event.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                    setisSaving(true);\n                    let taskName = event.target.value;\n                    let dateInfo = chrono.parse(taskName);\n                    let due = undefined;\n                    let defer = undefined;\n                    if (dateInfo.length > 0) {\n                        // we got a date!\n                        if (dateInfo[0].end) {\n                            // both start (defer) and end (due)\n                            // get end (due) date\n                            due = dateInfo[0].end.date();\n                            defer = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n\n                        }\n                        else {\n                            // only start (due)\n                            due = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n                        }\n                    }\n                    let npobj = { \n                            uid: props.uid, // pass it the things vvv\n                            pid: \"\",\n                            due,\n                            defer,\n                            name: taskName\n                    };\n                    props.gruntman.do( // call a gruntman function\n                        \"task.create\", npobj,\n                    ).then(()=>{\n                        event.target.blur();\n                    });\n                }\n            }\n        }\n        placeholder={ defaultValue + ((Math.random()*128 < 1) ? \" ^-^\" : \"\")}\n     />;\n}\n\nexport default ABTIB;\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport { IonModal, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonSearchbar, IonFooter } from '@ionic/react';\nimport './QuickSwitcher.css'\nimport '../Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\n\n\nclass QuickSwitcher extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    searchRef: '',\n\t    items: [],\n\t    filteredList: [],\n\t    query: '',\n\t    firstItem: '',\n\t    direction: true, \n\t    selected: 0,\n\t    prop_store: '',\n\t    initialRenderingDone: false, \n\t}\n\tthis.searcher = React.createRef();\n\tthis.currentlySelected = React.createRef();\n    }\n\n    componentDidUpdate() {\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.processItems() // process the items \n\t}\n\n    }\n\n    componentDidMount() {\n\tthis.processItems() // when we mount, process the items. probs delete this. \n\tthis.setState({prop_store: this.props, options: this.state.items, initialRenderingDone: true}) // set the prop store and the items \n    }\n\n    focusRef() {\n       if (this.searcher.current) // if the ref exists, \n            this.searcher.current.setFocus(); // focus it \n\tthis.setState({query: '', selected: 0}) // and reset the query \n    }\n\n\n    filterItems(searchTerm, org) {\n\tlet filteredItems = this.state.items.filter(item => {\n\t    return item[0].toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n\t});\n\treturn filteredItems\n    }\n\n\n    processItems() {\n\t// name, url prefix, id\n\tthis.setState({items: \n\t    [\n\t\t[':upcoming', 'upcoming', ''], // set the first item to upcoming \n\t\t// (i could do + but i think thats less efficent \n\t\t[':completed', 'completed', ''], // set the second item to completed\n\t\t[':calendar', 'calendar', ''], // set the third item to calendar\n\t\t...this.props.items[0].map(o => ['!'+o.name, 'perspectives', o.id]), // map the perspectives\n\t\t...this.props.items[1].map(o => ['.'+o.name, 'projects', o.id]) // and the projects \n\t    ],\n\t    prop_store: this.props //  and update the props \n\t})\n    }\n\n\n    handleKeydown(e) {\n\tconst keyname = e.key;\n\tif (keyname == \"Enter\") {\n\t    let selectedItem = this.filterItems(this.state.query)[this.state.selected]\n\t    // TODO: jack make the sidebar styling work \n\t    if ((!selectedItem || !this.state.query) && this.state.selected == 0) {\n\t\tif (this.state.direction && this.props.history.length > 2) { \n\t\t    this.props.history.goBack() \n\t\t} \n\t\telse if (this.props.history.length > 2) { this.props.history.goForward() }\n\t\tthis.setState({direction: !this.state.direction})\n\t\t\n\t    } else {\n\t\tconst slicedSelectedItem = selectedItem.slice(1)\n\t\tthis.props.history.push(`/${selectedItem[1]}/${selectedItem[2]}`) // push to the history\n\t\tthis.props.paginate(...slicedSelectedItem); // paginate-ify it!\n\t\tthis.props.updateIdx(slicedSelectedItem)\n\t    }\n\t    this.props.dismiss() // dismiss the modal\n\t} else {\n\t    const idx = this.state.selected\n\t    const len = this.filterItems(this.state.query).length-1\n\t    if (keyname == \"ArrowUp\" || (e.ctrlKey && keyname == \"p\")) {\n\t\tif (idx > 0) {\n\t\t    this.setState({selected: idx-1})\n\t\t} else { this.setState({selected: len})}\n\t\tif (this.currentlySelected) {this.currentlySelected.current.scrollIntoView()}\n\t    } else if (keyname == \"ArrowDown\" || (e.ctrlKey && keyname == \"n\")) {\n\t\tif (idx == len) {\n\t\t    this.setState({selected: 0})\n\t\t} else { this.setState({selected: idx+1}) }\n\t\tif (this.currentlySelected) {this.currentlySelected.current.scrollIntoView()}\n\t    }\n\t    console.log(this.state.selected)\n\n\t}\n\n    }\n\n\n    render() { \n\treturn (\n\t    <IonModal \n\t\tisOpen={this.props.qs_show} \n\t\tanimated={false}\n\t\tcssClass='qs_modal'\n\t\tautoFocus={true}\n\t\tonDidPresent={ this.focusRef }\n\t\tonDidDismiss={this.props.dismiss}\n\t    >\n\t\t<div className='modal-content-wrapper'>\n\t\t    <IonSearchbar \n\t\t\tautoFocus={true}\n\t\t\tref={this.searcher} \n\t\t\tanimated={true}\n\t\t\tspellcheck={true}\n\t\t\tclassName='search-bar'\n\t\t\tplaceholder=\"Previous  |  Let's go to..\" // TODO: jack do you like this? \n\t\t\tonIonChange={e => this.setState({query: e.detail.value, selected: 0})}\n\t\t\tdebounce={0}\n\t\t\tonKeyDown={this.handleKeydown}\n\t\t    />\n\t\t    <div className='option-wrapper'> \n\t\t\t{this.filterItems(this.state.query).map((item, i) => {\n\t\t\t    return (\n\t\t\t\t<p \n\t\t\t\t    className= {`option-text ${(this.state.selected == i)? 'option-text-hover' : ''}`}\n\t\t\t\t    ref={(this.state.selected == i)? this.currentlySelected : null}\n\n\t\t\t\t    onMouseEnter={() => {\n\t\t\t\t\tthis.setState({selected: i}); \n\t\t\t\t    }}\n\t\t\t\t    onClick={()=>{\n\t\t\t\t\tthis.props.history.push(`/${item[1]}/${item[2]}`) // push to the history\n\t\t\t\t\tthis.props.paginate(...item.slice(1)); // paginate-ify it!\n\t\t\t\t\tthis.props.dismiss()\n\t\t\t\t    }}\n\t\t\t\t>{item[0]}</p>\n\t\t\t\t)\n\n\t\t\t    }\n\t\t\t)}\n\n\t\t    </div> \n\t\t</div>\n\n\t    </IonModal>\n\t) \n    }\n\n}\n\nexport default withRouter(QuickSwitcher);\n\n\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport bindGlobal from 'mousetrap-global-bind';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport QuickSwitcher from './QuickSwitcher'\n\nconst autoBind = require('auto-bind/react');\n\n\nclass Keybinds extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    sidebar_list: [], // what's in the sidebar? \n\t    sidebar_index: 0, // how far down the sidebar are we? \n\t    prop_store: '', // store props so we can check if they have changed \n\t    qs_show: false // is the quick switcher shown? \n\t}\n    }\n\n    // define the bindings! 2d array of keybind and function \n    // TODO TODO: for some reason binding works now, so replace that later? \n    // TODO: expand these keybinds. ie, n/p and up/down arrows\n    bindings = [\n\t[\"alt+1\", ()=>{this.sidebar_switcher(this, 0)}], // nav to upcoming keybind\n\t[\"alt+2\", ()=>{this.sidebar_switcher(this, 1)}], // nav to completed keybind\n\t[\"alt+3\", ()=>{this.sidebar_switcher(this, 2)}], // nav to item 3 keybind\n\t[\"alt+4\", ()=>{this.sidebar_switcher(this, 3)}], // nav to item 4 keybind\n\t[\"alt+5\", ()=>{this.sidebar_switcher(this, 4)}], // nav to item 5 keybind\n\t[\"alt+6\", ()=>{this.sidebar_switcher(this, 5)}], // nav to item 6 keybind\n\t[\"alt+7\", ()=>{this.sidebar_switcher(this, 6)}], // nav to item 7 keybind\n\t[\"alt+8\", ()=>{this.sidebar_switcher(this, 7)}], // nav to item 8 keybind\n\t[\"alt+9\", ()=>{this.sidebar_switcher(this, 8)}], // nav to item 9 keybind\n\t[\"alt+0\", ()=>{this.sidebar_switcher(this, this.state.sidebar_list.length-1)}], // nav to last item keybind\n\t[\"alt+j\", ()=>{this.sidebar_incrimentor(this, 1)}], // nav down keybind \n\t[\"alt+k\", ()=>{this.sidebar_incrimentor(this, -1)}], // nav up keybind \n    [\"command+enter\", ()=>{this.focusElement(this.props.abtib)}], // nav up keybind \n    ]\n\n    globalBindings = [\n\t[\"command+k\", ()=>{this.manageQs(this)}], // toggle quick swithcher keybind \n    ]\n    \n    //TODO: this doesnt work with clicking or like anything else but eh\n\n    sidebar_switcher(that, num){\n\tconst loca = this.state.sidebar_list[num]; // set our location to index in sidebar\n\tthat.props.history.push(`/${loca[0]}/${loca[1]}`) // push to the history\n\tthat.props.paginate(...loca); // paginate-ify it!\n\tthis.setState({sidebar_index: num}) // update the sidebar index \n    }\n\n    sidebar_incrimentor(that, num) {\n\tconst next_loca = this.state.sidebar_list[this.state.sidebar_index+num] // store the variable -- we can delet this. \n\tif (next_loca) { // if its defined, \n\t    this.sidebar_switcher(that, this.state.sidebar_index+num) // go there\n\t    // if it's not defined and it's at the end, \n\t} else if (this.state.sidebar_index == this.state.sidebar_list.length-1) {\n\t    this.sidebar_switcher(that, 0) // wrap around and go back to the beginning \n\t} else { // if it's not defined and not at the end, then it must be at the beginning,\n\t    this.sidebar_switcher(that, this.state.sidebar_list.length-1) // so go to the end \n\t}\n    }\n\n    setSidebarIndex(item) {\n\tlet idx\n\tthis.state.sidebar_list.forEach((sidebarItem, i) => {\n\t    if (this.arraysAreIdentical(sidebarItem, item)) {\n\t\tidx = i\n\t    }\n\t})\n\tthis.setState({sidebar_index: idx})\n    }\n\n\n    arraysAreIdentical(arr1, arr2){\n\tfor (let i = 0, len = arr1.length; i < len; i++){\n\t    if (arr1[i] !== arr2[i]){\n\t\treturn false;\n\t    }\n\t}\n\treturn true; \n    }\n\n\n    manageQs(that) {\n\tthis.setState({qs_show: !this.state.qs_show}); \n    }\n\n    focusElement(ref) {\n\tif (ref) {\n\t    ref.current.focus()\n\t}\n    }\n\n    componentDidUpdate(){\n\t//TODO: safe-proof(?) this\n\t// update the props\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.setState({\n\t\tsidebar_list: [\n\t\t    ['upcoming', ''], // set the first item to upcoming \n\t\t    // (i could do + but i think thats less efficent \n\t\t    ['completed', ''], // set the second item to completed\n\t\t    ['calendar', ''], // set the third item to calendar\n\t\t    ...this.props.perspectives.map(o => ['perspectives', o.id]), // map the perspectives\n\t\t    ...this.props.projects.map(o => ['projects', o.id]) // and the projects \n\t\t], \n\t\tprop_store: this.props //  and update the props \n\t    })\n\t}\n\n\t// TODO: get the current url and set the index that way \n\t//if (!this.state.sidebar_index) {\n\t//    this.setState({sidebar_index: side\n\n\t//}\n    }\n\n    // loop through and bind all our things!\n    componentDidMount() {\n\tthis.setState({prop_store: this.props})\n\n        this.bindings.map(combo => {\n\t\tMousetrap.bind(...combo)\n        })\n\n\tthis.globalBindings.map(combo => {\n\t\tMousetrap.bindGlobal(...combo)\n\t})\n    }\n\n    // loop through and unbind all our things!\n    componentWillUnmount() { \n        this.bindings.map(combo => {\n            Mousetrap.unbind(...combo)\n        })\n    }\n\n    render() { \n\treturn (\n\t    <QuickSwitcher \n\t\tqs_show={this.state.qs_show} \n\t\tdismiss={()=> this.setState({qs_show: false})}\n\t\titems={[this.props.perspectives, this.props.projects]}\n\t\tpaginate={this.props.paginate}\n\t\tupdateIdx={this.setSidebarIndex}\n\n\t    /> \n\t)\n    }\n\n}\n\nexport default withRouter(Keybinds);\n\n\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t423,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t424,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t425,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t426,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t427,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t428,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t429,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t430,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t431,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t432,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t433,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t434,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t435,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t436,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t437,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t438,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t439,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t440,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t441,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t442,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t443,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t444,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t445,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t446,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t447,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t448,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t449,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t450,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t451,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t452,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t453,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t454,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t455,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t456,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t457,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t458,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t459,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t460,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t461,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t462,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t463,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t464,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t465,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 215;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t469,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 217;\nmodule.exports = webpackAsyncContext;","import dbManager from \"./DBManager\"\nlet cRef = dbManager.cRef;\n\nconst util = {\n    select: {\n        compare: (lhs, cmp, rhs) => {\n            switch (cmp) {\n                case \"<\":\n                    return lhs < rhs;\n                case \">\":\n                    return lhs > rhs;\n                case \"<=\":\n                    return lhs <= rhs;\n                case \">=\":\n                    return lhs >= rhs;\n                case \"==\":\n                    return lhs == rhs;\n                case \"!=\":\n                    return lhs != rhs;\n                case \"has\":\n                    return lhs.includes(rhs);\n                case \"!has\":\n                    return !lhs.includes(rhs);\n                default:\n                    throw new TypeError(\"Unkown comparator \" + cmp);\n            }\n        },\n        all: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (!util.select.compare(dat[lhs], cmp, rhs))\n                    return false;\n            return true;\n        },\n        any: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs))\n                    return true;\n            return false;\n        },\n        atLeast: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter >= threshold)\n                        return true;\n                }\n            return false;\n        },\n        atMost: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter > threshold)\n                        return false;\n                }\n            return true;\n        }\n    },\n    debug: {\n        log: (arg) => {\n            console.log(arg);\n            return arg;\n        },\n        trace: (arg) => {\n            console.trace(arg);\n            return arg;\n        }\n    }\n};\n\nasync function getTasks(userID) {\n    return cRef(\"users\", userID, \"tasks\").get()\n    .then(snap => snap.docs\n        .map(doc => doc.id)\n    ).catch(err => {\n        console.error('Error getting documents', err);\n    });\n}\n\nasync function getTasksWithQuery(userID, query) {\n    let taskDocs = await cRef(\"users\", userID, \"tasks\")\n        .get()\n        .then(snap => snap.docs\n            .filter(query)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return taskDocs.map(doc => doc.id);\n}\n\nasync function getInboxTasks(userID) {\n    let inboxDocs = await cRef(\n        \"users\", userID,\n        \"tasks\")\n        //['project', '==', ''],\n        //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(util.select.all(['project', '==', ''], ['isComplete', '==', false]))\n            .sort((a,b) => a.data().order - b.data().order)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return inboxDocs.map(doc => doc.id);\n}\n\nasync function getDSTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(dsTime.getHours() + 24);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function dueTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(23,59,59,999);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function selectTasksInRange(userID, min=(new Date(1900, 1, 1)), max=(new Date(2100, 1, 1)), returnFull=false) {\n/*    let maxT = max;*/\n    //let minT = min;\n    //maxT.setHours(23, 59, 59, 999);\n    /*minT.setHours(0, 0, 0, 0);*/\n    let tasks = await cRef(\"users\", userID, \"tasks\")\n                    .get()\n                    .then(snap => snap.docs\n                        .filter(doc =>\n                            (doc.data().due ?\n                                (doc.data().defer ?\n                                    (new Date(doc.data().due.seconds*1000)) <= max && (new Date(doc.data().due.seconds*1000)) >= min && (new Date() >= (new Date(doc.data().defer.seconds*1000)))\n                                : false) \n                                : false)\n                        )\n                        .filter(doc => !doc.data().isComplete)\n                        .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n                    ).catch(console.error);\n    return returnFull ? tasks.map(doc => [doc.id, doc.data()]):tasks.map(doc => doc.id);\n}\n\nasync function getDSRow(userID, avaliable) {\n    console.warn(\"DEPERCATED: use instead selectTasksInRange\");\n    let ibt = await getInboxTasks(userID);\n    let d = new Date();\n    let dsTasks = [];\n    let prev = [];\n    for (let i=0; i<=7; i++) {\n        let content = (await dueTasks(userID, avaliable, d))\n        let cache = content;\n        dsTasks.push(content.filter(x => !prev.includes(x)));\n        prev = cache;\n        d.setDate(d.getDate() + 1)\n    }\n    return dsTasks.map(dst => dst.filter(x => ibt.indexOf(x) < 0));\n}\n\nasync function getInboxandDS(userID, avalibility) {\n    let ibt = await getInboxTasks(userID);\n    let dst = await getDSTasks(userID, avalibility);\n    let dstWithoutIbt = dst.filter(x => ibt.indexOf(x) < 0);\n    return [ibt, dstWithoutIbt]\n}\n\nasync function getTaskInformation(userID, taskID) {\n    let dat = (await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs\n            .filter(doc => doc.id === taskID))\n    )[0]\n    if (dat) return dat.data();\n}\n\nasync function removeParamFromTask(userID, taskID, paramName) {\n    let ti = await getTaskInformation(userID, taskID);\n    delete ti[paramName];\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .set(ti)\n        .catch(console.error);\n}\n\nasync function getTopLevelProjects(userID) {\n    let projectIdByName = {};\n    let projectNameById = {};\n    let projectsSorted = []; \n\n    let snap = (await cRef('users', userID, \"projects\")\n        .get());\n\n    snap.docs.forEach(proj => {\n        if (proj.exists && proj.data().top_level === true) {\n            projectNameById[proj.id] = proj.data().name;\n            projectIdByName[proj.data().name] = proj.id;\n            let projElem = {};\n            projElem.id = proj.id;\n            projElem.name = proj.data().name;\n            projElem.sortOrder = proj.data().order;\n            projectsSorted.push(projElem);\n        }\n    });\n\n    projectsSorted.sort((a,b) => a.sortOrder-b.sortOrder);\n    let ret = [projectNameById, projectIdByName, projectsSorted];\n    return ret;\n}\n\nasync function getTags(userID) {\n    let tags = [];\n\n    await cRef(\"users\", userID, \"tags\").get()\n        .then(snap => snap.docs.forEach( tag => {\n            if (tag.exists) {\n                tags.push(tag.data());\n            }\n        }\n    )).catch(console.error);\n    return tags;\n}\n\nasync function getProjectsandTags(userID) {\n    // NOTE: no longer console.error when  !project/tag.exists\n    let projectIdByName = {};\n    let projectNameById = {};\n    await cRef(\"users\", userID, \"projects\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(proj => {\n            if (proj.exists) {\n                projectNameById[proj.id] = proj.data().name;\n                projectIdByName[proj.data().name] = proj.id;\n            }\n        }))\n        .catch(console.error);\n\n    let tagIdByName = {};\n    let tagNameById = {};\n    await cRef(\"users\", userID, \"tags\").get()\n        .then(snap => snap.docs.forEach(tag => {\n            if (tag.exists) {\n                tagNameById[tag.id] = tag.data().name;\n                tagIdByName[tag.data().name] = tag.id;\n            }\n        }))\n        .catch(console.error);\n\n    return [[projectNameById, projectIdByName], [tagNameById, tagIdByName]];\n}\n\nasync function getPerspectives(userID) {\n    let pInfobyName = {};\n    let pInfobyID = {};\n    let ps = [];\n    await cRef(\"users\", userID, \"perspectives\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(pstp => {\n            if (pstp.exists) {\n                pInfobyID[pstp.id] = {name: pstp.data().name, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                pInfobyName[pstp.data().name] = {id: pstp.id, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                ps.push({id: pstp.id, ...pstp.data()});\n            }\n        }))\n        .catch(console.error);\n\n    ps.sort((a,b) => a.order-b.order);\n\n    return [pInfobyID, pInfobyName, ps];\n}\n\nasync function modifyProject(userID, projectID, updateQuery) {\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyTask(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyPerspective(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"perspectives\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function newTask(userID, taskObj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    if (taskObj.project === \"\") {\n        let ibtL = (await getInboxTasks(userID)).length;\n        taskObj.order = ibtL;\n    } else {\n        let projL = (await getProjectStructure(userID, taskObj.project)).children.length;\n        taskObj.order = projL;\n    }\n\n    // Perspectives cannot have empty defer dates\n    // But! We could set no defer to defer today.\n    if (!taskObj.defer)\n        taskObj.defer = new Date();\n\n    let taskID = (await cRef(\"users\", userID, \"tasks\").add(taskObj)).id;\n\n    return taskID;\n}\n\nasync function newProject(userID, projObj, parentProj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    let projL;\n    // Util func to get size of ob\n    Object.size = function(obj) {\n        var size = 0, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) size++;\n        }\n        return size;\n    };\n\n    if (parentProj) {\n        projL = (await getProjectStructure(userID, parentProj)).children.length;\n        projObj.parent = parentProj;\n    } else {\n        projL = Object.size((await getTopLevelProjects(userID))[0]);\n        projObj.parent = \"\";\n    }\n    projObj.order = projL;\n    projObj.children = {};\n\n    let pid = (await cRef(\"users\", userID, \"projects\").add(projObj)).id;\n    return pid;\n}\n\nasync function newPerspective(userID, pstObj) {\n    return (await cRef(\"users\", userID, \"perspectives\").add({order: (await getPerspectives(userID))[2].length, ...pstObj})).id;\n}\n\nasync function newTag(userID, tagName) {\n    return (await cRef(\"users\", userID, \"tags\").add({name: tagName})).id;\n}\n\nasync function completeTask(userID, taskID) {\n    await cRef(\"users\", userID, \"tasks\", taskID).update({\n        isComplete: true\n    });\n}\n\nasync function dissociateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[taskID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[taskID] = \"task\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[assosProjID] = \"project\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function dissociateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[assosProjID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function deleteTask(userID, taskID, willDissociateTask = true) {\n    let taskData = await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs.filter(doc => doc.id === taskID)[0].data()); // Fetch task data\n\n    if (taskData.project!== \"\" && willDissociateTask) {\n        await dissociateTask(userID, taskID, taskData.project);\n    }\n    await cRef(\"users\", userID, \"tasks\", taskID).delete()\n        .catch(console.error);\n}\n\nasync function deletePerspective(userID, perspectiveID) {\n    await cRef(\"users\", userID, \"perspectives\", perspectiveID).delete();\n}\n\nasync function deleteProject(userID, projectID) {\n    let struct = await getProjectStructure(userID, projectID)\n    for (let i of struct.children) {\n        if (i.type === \"project\") deleteProject(userID, i.content.id)\n        else modifyTask(userID, i.content, {project:\"\"});\n    }\n   \n    let cpLtTasks = await getCompletedTasks(userID);\n    const cpLt = [].concat(...cpLtTasks);\n    for (let t of cpLt)\n        if ((await getTaskInformation(userID, t)).project === projectID)\n            modifyTask(userID, t, {project:\"\"});\n\n    await cRef(\"users\", userID, \"projects\", projectID).delete()\n        .catch(console.error);\n}\n\nasync function deleteTag(userID, tagID) {\n    await cRef(\"users\", userID, \"tags\", tagID).delete()\n        .catch(console.error);\n}\n\nasync function getProjectStructure(userID, projectID, recursive=false) {\n    let children = [];\n\n    // absurdly hitting the cache with a very broad query so that the\n    // cache will catch all projects and only hit the db once\n\n    let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n    if (!project) {\n        return { id: projectID, children: [], is_sequential: false, sortOrder: 0, parentProj: 0};\n    }\n    for (let [itemID, type] of Object.entries(project.data().children)) {\n        if (type === \"task\") {  // TODO: combine if statements\n            let task = await getTaskInformation(userID, itemID);\n            if(task){\n                if (!task.isComplete) {\n                    children.push({type: \"task\", content: itemID, sortOrder: task.order});\n                }\n            }\n           \n        } else if (type === \"project\") {\n            if (recursive) {\n                let project = await getProjectStructure(userID, itemID);\n                if(project) children.push({type: \"project\", content: project, is_sequential: project.is_sequential, sortOrder: project.sortOrder}); \n            } else {\n                let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === itemID)[0];\n                if(project) children.push({type: \"project\", content: {id: itemID}, is_sequential: project.data().is_sequential, sortOrder: project.data().order}); \n            }\n        }\n    }\n    children.sort((a,b) => a.sortOrder-b.sortOrder); //  sort by ascending order of order, TODO: we should prob use https://firebase.google.com/docs/reference/js/firebase.firestore.Query#order-by\n    return { id: projectID, children: children, is_sequential: project.data().is_sequential, sortOrder: project.data().order, parentProj: project.data().parent};\n}\n\nasync function getItemAvailability(userID) {\n    let t = new Date();\n    let tlps = (await getTopLevelProjects(userID))[2];\n    let blockstatus = {};\n    let timea = new Date();\n    async function recursivelyGetBlocks(userID, projectID) {\n        let bstat = {};\n        let project = (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n        let projStruct = (await getProjectStructure(userID, projectID));\n        if (project.data().is_sequential) {\n            let child = projStruct.children[0];\n            if (child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }\n        } else {\n            let children = projStruct.children;\n            await Promise.all(children.map(async function(child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }));\n        }\n        return bstat;\n    };\n    await Promise.all(tlps.map(async function(p) {\n        blockstatus[p.id] = true;\n        let blocks = await recursivelyGetBlocks(userID, p.id);\n        Object.assign(blockstatus, blocks);\n    }));\n    await (await getInboxTasks(userID)).forEach((id) => blockstatus[id] = true);\n    return blockstatus;\n}\n\nasync function getCompletedTasks(userID) {\n    let completedTasks = await getTasksWithQuery(userID, util.select.all([\"isComplete\", \"==\", true]));\n    let taskItems = {};\n    await Promise.all(completedTasks.map(async function(tsk){\n        taskItems[tsk] = await getTaskInformation(userID, tsk);\n    }));\n    const cpSorted = completedTasks.sort(function(b,a) {\n        let taskA = taskItems[a];\n        let taskB = taskItems[b];\n        if (!taskA || !taskB) {\n            return 1;\n        }\n        return ((\n            (taskA.completeDate) ?\n                (taskA.completeDate.seconds) :\n                1\n        )-(\n            (taskB.completeDate) ?\n                (taskB).completeDate.seconds :\n                1\n        ));\n    });\n    let today = new Date();\n    let yesterday = new Date();\n    let thisWeek = new Date();\n    let thisMonth = new Date();\n    today.setHours(0,0,0,0);\n    yesterday.setDate(yesterday.getDate()-1);\n    yesterday.setHours(0,0,0,0);\n    thisWeek.setDate(thisWeek.getDate()-7);\n    thisWeek.setHours(0,0,0,0);\n    thisMonth.setMonth(thisMonth.getMonth()-1);\n    thisMonth.setHours(0,0,0,0);\n    let tasksToday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= today : false;\n    });\n    let tasksYesterday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= yesterday && new Date(tsks.completeDate.seconds * 1000) < today : false;\n    });\n    let tasksWeek = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisWeek && new Date(tsks.completeDate.seconds * 1000) < yesterday : false;\n    });\n    let tasksMonth = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisMonth && new Date(tsks.completeDate.seconds * 1000) < thisWeek : false;\n    });\n    let evenBefore = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) < thisMonth : true;\n    });\n    //console.log(tasksYesterday);\n    //console.log(tasksWeek);\n    //console.log(tasksMonth);\n    /*console.log(evenBefore);*/\n    return [tasksToday, tasksYesterday, tasksWeek, tasksMonth, evenBefore];\n}\n\nasync function onBoard(userID, tz, username, payload) {\n    // Inbox, in reverse cronological order\n    await newTask(userID, {\n            name: payload[0] + ` ${username}, ` + payload[1],\n            desc: payload[2],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[3],\n            desc: payload[4],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[5],\n            desc: payload[6],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n\n    let cdyrslf = await newProject(userID, {name: payload[7], top_level: true, is_sequential: false});\n    let npd = await newProject(userID, {name: payload[8], top_level: true, is_sequential: false});\n    let od = new Date();\n    let ds = new Date();\n    od.setHours(od.getHours() - 24);\n    ds.setHours(ds.getHours() + 20);\n    let odid = await newTask(userID, {\n            name: payload[9],\n            desc: payload[10],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: od,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let dsID = await newTask(userID, {\n            name: payload[11],\n            desc: payload[12],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: ds,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, odid, npd);\n    await associateTask(userID, dsID, npd);\n    ds.setHours(ds.getHours() + 2);\n    let checkoutID = await newTask(userID, {\n            name: payload[13],\n            desc: payload[14],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let nice = await newTask(userID, {\n            name: payload[15],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, nice, cdyrslf);\n    let sequential = await newTask(userID, {\n            name: payload[16],\n            desc: payload[17],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sequential, cdyrslf);\n    let blocked = await newTask(userID, {\n            name: payload[18],\n            desc: payload[19],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, blocked, cdyrslf);\n    let click = await newTask(userID, {\n            name: payload[20],\n            desc: payload[21],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, click, cdyrslf);\n    let pspDir = await newTask(userID, {\n            name: payload[22],\n            desc: payload[23],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, pspDir, cdyrslf);\n    let pspsp = await newProject(userID, {name: payload[24], top_level: true, is_sequential: false});\n    let tags = await Promise.all([newTag(userID, payload[25]), newTag(userID, payload[26]), newTag(userID, payload[27]), newTag(userID, payload[28])]);\n    let specific = await newTask(userID, {\n            name: payload[29],\n            desc: payload[30],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[2], tags[3]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, specific, pspsp);\n    let sp = await newTask(userID, {\n            name: payload[31],\n            desc: payload[32],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[0]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sp, pspsp);\n    await newPerspective(userID, {name: payload[33], query: payload[34]});\n    let promotion = await newProject(userID, {name: payload[35], top_level: true, is_sequential: false});\n    let online = await newTask(userID, {\n            name: payload[36],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, online, promotion);\n    let dis = await newTask(userID, {\n            name: payload[37],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, dis, promotion);\n    let patreon = await newTask(userID, {\n        name: payload[38],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, patreon, promotion);\n    let yiipee = await newTask(userID, {\n        name: payload[39],\n            desc: payload[40],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, yiipee, promotion);\n}\n\nexport default {util, getTasks, getTasksWithQuery, getInboxTasks, getDSTasks, getInboxandDS, removeParamFromTask, getTopLevelProjects, getProjectsandTags, getPerspectives, modifyProject, modifyTask, modifyPerspective, newProject, newPerspective, newTag, newTask, completeTask, dissociateTask, associateTask, associateProject, dissociateProject, deleteTask, deletePerspective, deleteProject, selectTasksInRange, getProjectStructure, getItemAvailability, getTaskInformation, getDSRow, deleteTag, getCompletedTasks, onBoard, getTags};\n\n","import dbObj from \"./ObjectManager\";\n\nconst perspectiveHandler = function(){\n    let cgs = {\n        taskFilter: /([^\\w\\d\\s\\[]{1,2}[\\w\\s]+)/gi,\n        taskCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\]/gi,\n        logicCaptureGroup: /(.*) *([<=>]) *(.*)/gi,\n        globalCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\](\\$\\w+)* *[<=>]* * *(\\$\\w+)*/gi,\n        clear: function() {\n            this.taskFilter.lastIndex = 0;\n            this.taskCaptureGroup.lastIndex = 0;\n            this.logicCaptureGroup.lastIndex = 0;\n            this.globalCaptureGroup.lastIndex = 0;\n        }\n    };\n\n    let getCaptureGroups = (str) => str.match(cgs.globalCaptureGroup);\n\n    let parseTaskCaptureGroup = (str) => (str.split(\"$\").map(i=>i.trim()));\n\n    let parseSpecialVariables = function(...val) {\n        let vr;\n        switch(val[0]) {\n           case \"today\":\n               vr = new Date();\n               break;\n        }\n        return vr;\n    };\n\n    let compileTask = async function(uid, str, pPaT, additionalFilter) {\n        let queries = additionalFilter ? [additionalFilter] : [];\n        let taskCache = [];\n        let antiCache = [];\n        await Promise.all(str.match(cgs.taskFilter).map(async function(e) {\n            e = e.trim();\n            if (e[0] !== \"!\") {\n                switch (e[0]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(1, e.length)];\n                        queries.push(['project', '==', pid]);\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                taskCache = [...taskCache, ...(await compileTask(uid, str.replace(e.slice(1, e.length), pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', 'has',  pPaT[1][1][e.slice(1, e.length)]]);\n                }\n            } else {\n                switch (e[1]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(2, e.length)];\n                        queries.push(['project', '!=', pid]);\n\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                antiCache = [...antiCache, ...(await compileTask(uid, str.replace(e, \".\"+pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', '!has',  pPaT[1][1][e.slice(2, e.length)]]);\n                }\n            }\n            queries.push(['isComplete', '==', false]);\n        }));\n        return [...taskCache, ...(await dbObj.getTasksWithQuery(uid, dbObj.util.select.all(...queries)))].filter(i=>(!antiCache.includes(i)));\n    };\n\n    let compileLogicCaptureGroup = async function(uid, tasks, cmp, value, ltr) {\n        let taskInfo = await Promise.all(tasks[0].map(async function(t){\n            return [await dbObj.getTaskInformation(uid, t), t];\n        }));\n        let taskCompValues;\n        // TODO: add more?\n        if (tasks[1].includes(\"due\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].due ? new Date((t[0].due.seconds)*1000) : undefined)]);\n        } else if (tasks[1].includes(\"defer\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].defer ? new Date((t[0].defer.seconds)*1000) : undefined)]);\n        }\n        let filteredResults;\n        let util_datesequal = function(dateA, dateB) {\n            return dateA.getFullYear() === dateB.getFullYear() && dateA.getMonth() === dateB.getMonth() && dateA.getDate() === dateB.getDate();\n        };\n        switch (cmp) {\n            case \"=\":\n                taskCompValues = taskCompValues.filter(t=>util_datesequal(t[1], value));\n                break;\n            case \">\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] > value) : taskCompValues = taskCompValues.filter(t => t[1] < value);\n                break;\n            case \"<\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] < value) : taskCompValues = taskCompValues.filter(t => t[1] > value);\n                break;\n            case \">=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] >= value) : taskCompValues = taskCompValues.filter(t => t[1] <= value);\n                break;\n            case \"<=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] <= value) : taskCompValues = taskCompValues.filter(t => t[1] >= value);\n                break;\n\n        }\n        return (taskCompValues.map(t => t[0]));\n    };\n\n    let getPerspectiveFromString = async function(uid, pStr, filter, order) {\n        let pPaT = await dbObj.getProjectsandTags(uid);\n        let pRes = await getCaptureGroups(pStr);\n        if (!pRes) {\n            return [];\n        }\n        let fquery; \n        switch (filter) {\n            case \"avail\":\n                fquery = [\"defer\", \"<\", ((new Date()).getTime())/1000];\n                break;\n            case \"flagged\":\n                fquery = [\"isFlagged\", \"==\", true];\n                break;\n        }\n        let tasks = await Promise.all(pRes.map(async function(i) {\n            cgs.clear();\n            let logicSort = cgs.logicCaptureGroup.exec(i);\n            let t;\n            if(logicSort) {\n                // handle logic group\n                let [, lhs, cmp, rhs] = logicSort;\n                [lhs, rhs] = [parseTaskCaptureGroup(lhs), parseTaskCaptureGroup(rhs)];\n                if (cgs.taskCaptureGroup.test(lhs)) {\n                    lhs = [await compileTask(uid, lhs[0], pPaT, fquery), lhs[1]];\n                    rhs = parseSpecialVariables(rhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, lhs, cmp, rhs, true)); // true (that is, left to right order)\n                } else {\n                    rhs = [await compileTask(uid, rhs[0], pPaT, fquery), rhs[1]];\n                    lhs = parseSpecialVariables(lhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, rhs, cmp, lhs, false)); // false (that is, right to left order)\n                }\n            } else {\n                // handle standard group\n                t = (await compileTask(uid, i, pPaT, fquery));\n            }\n            return t;\n        }));\n        tasks = [...new Set(tasks.flat(1))];\n        let taskObjs = await Promise.all(tasks.map(async function(t){\n            return {id: t, ...(await dbObj.getTaskInformation(uid, t))}\n        })).then(values=>values);\n        switch (order) {\n            case \"duas\":\n                taskObjs.sort((a,b)=>(a.due?a.due.seconds:10000000000)-(b.due?b.due.seconds:10000000000));\n                break;\n            case \"duds\":\n                taskObjs.sort((a,b)=>(b.due?b.due.seconds:1)-(a.due?a.due.seconds:1));\n                break;\n            case \"deas\":\n                taskObjs.sort((a,b)=>(a.defer?a.defer.seconds:10000000000)-(b.defer?b.defer.seconds:10000000000));\n                break;\n            case \"deds\":\n                taskObjs.sort((a,b)=>(b.defer?b.defer.seconds:1)-(a.defer?a.defer.seconds:1));\n                break;\n\n        }\n        // Final availability filter for sequential\n        let aval = await dbObj.getItemAvailability(uid);\n        if (filter === \"avail\") taskObjs = taskObjs.filter(it => (aval[it.id] !== undefined)); \n        return taskObjs.map(t=>t.id);\n    };\n\n    return {calc: getPerspectiveFromString};\n}();\n\nexport default perspectiveHandler;\n\n","import dbFuncs from \"./src/ObjectManager\"\nimport pspObj from \"./src/PerspectiveManager\"\nimport dbRefObj from \"./src/DBManager\"\n\n\nexport default {start:dbRefObj.__init__, use:dbRefObj.useDb, db: dbFuncs, perspective: pspObj, flush: dbRefObj.flush};\n\n","import { Plugins } from '@capacitor/core';\nimport { getPlatforms } from '@ionic/react';\n\nconst { parseFromTimeZone } = require('date-fns-timezone')\n\nconst { LocalNotifications, Permissions } = Plugins;\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\nclass Gruntman {\n\n    /*\n     * Hello human,\n     * good afternoon.\n     * I am gruntman.\n     *\n     * Register refreshers with me\n     * so I could handle refreshes.\n     *\n     * Do actions with me\n     * so I could reverse them.\n     *\n     * Undo happens from me\n     * refresh happens from me.\n     *\n     *\n     * @jemoka\n     *\n     */\n\n    constructor(engine) {\n        this.notifPermissionGranted = false;\n        Permissions.query({name: \"notifications\"}).then((async function (e) {\n            if (e.state === \"prompt\")\n                this.notifPermissionGranted = (await LocalNotifications.requestPermission()).granted;\n            else if (e.state === \"granted\")\n                this.notifPermissionGranted = true;\n\n            let platforms = getPlatforms();\n            if (this.notifPermissionGranted && !platforms.includes(\"mobileweb\") && !platforms.includes(\"desktop\")) {\n                // notification specific setup\n                //\n                // TODO TODO TODO TODO TODO TODO TODO TODO\n                //\n\n                //LocalNotifications.registerActionTypes({types: [{id: \"completeOrSnooze\", actions: [{id:\"complete\", title: \"LOCALIZE: Complete\", requiresAuthentication: \"true\", foreground: \"false\"}, {id:\"snooze\", title: \"LOCALIZE: Snooze\", requiresAuthentication: \"true\", foreground: \"false\"}]}]});\n            }\n            LocalNotifications.addListener(\"localNotificationActionPerformed\", this.handleNotificationAction);\n        }).bind(this));\n\n        this.hashCode = s => Math.abs(s.split('').reduce((a,b)=>{a=((a<<5)-a)+b.charCodeAt(0);return a&a},0));\n\n        this.e = engine;\n        this.refresher = ()=>{};\n        this.callbackRefresherReleased = true; // prevent live callback merge conflicts\n        this.conflictResolution = 1000; // 1000 ms = 1s worth of conflict time.\n        this.releaseTimeout = undefined;\n\n        this.doers = {\n            macro: {\n                applyOrder: async function (options) {\n                    // TODO undo handler?\n                    if (options.items.length !== options.order.length) \n                        console.error(\"Length of items and order length must be the same!\")\n                    await Promise.all(options.order.map((e,i) => {\n                        let item = options.items[e];\n                        if (item.type === \"task\") \n                            return engine.db.modifyTask(options.uid, item.content, {order: i});\n                        else if (item.type === \"project\")\n                            return engine.db.modifyProject(options.uid, item.content, {order: i});\n                            //await engine.db.modifyProject(options.uid, e.content, {order: options.order[i]});\n                    }));\n                    return {uid:options.uid}; // TODO HANDLE UNDO\n                }\n            },\n            tag: {\n                create: async function (options) {\n                    let newTag = await engine.db.newTag(options.uid, options.name);\n                    return {uid: options.uid, id: newTag};\n                }\n            },\n            task: {\n                create: async function (options) {\n                    let ntObject = {\n                        desc: \"\",\n                        isFlagged: false,\n                        isFloating: false,\n                        isComplete: false,\n                        project: options.pid?options.pid:\"\",\n                        tags: [],\n                        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n                        repeat: {rule: \"none\"},\n                        name: options.name?options.name:\"\",\n                    };\n\n                    if (options.due)\n                        ntObject.due = options.due\n                    if (options.defer)\n                        ntObject.defer = options.defer\n\n                    let ntID = await engine.db.newTask(options.uid, ntObject)\n\n                    if (options.pid && options.pid != \"\")\n                        engine.db.associateTask(options.uid, ntID, options.pid);\n\n                    return {uid: options.uid, tid: ntID};\n                },\n                update: async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, options.query)\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__project:  async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {project: options.project})\n\n                    if (options.oldProject)\n                        await engine.db.dissociateTask(options.uid, options.tid, options.oldProject);\n\n                    if (options.project !== \"\")\n                        await engine.db.associateTask(options.uid, options.tid, options.project);\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__uncomplete: async function (options) {\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: false, completeDate: new Date()});\n                    return {uid: options.uid, tid: options.tid, taskInfo};\n                },\n                update__complete: async function (options) {\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: true, completeDate: new Date()})\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    let due = (\n                        taskInfo.due ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.due.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.due.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ):\n                        undefined\n                    );\n                    let defer = (\n                        taskInfo.defer ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.defer.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.defer.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ): undefined\n                    );\n                    let repeat = taskInfo.repeat;\n                    if (repeat.rule !== \"none\" && due) {\n                        let rRule = repeat.rule;\n                        if (rRule === \"daily\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        } else if (rRule === \"weekly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let current = \"\";\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                    defer.setDate(defer.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let current = \"\";\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"monthly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let dow = due.getDate();\n                                let oDow = due.getDate();\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let dow = due.getDate();\n                                    let oDow = due.getDate();\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"yearly\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        }\n                    }\n                    return {message: \"Todo TODO TODO Todo: undo pack?\"}\n                }\n            },\n            project: {\n                create: async function (options) { // create project\n                    let projObj = {\n                        name: \"\",\n                        top_level: options.parent === undefined,\n                        is_sequential: false,\n                    };\n                    let npid = options.parent ? await engine.db.newProject(options.uid, projObj, options.parent) : await engine.db.newProject(options.uid, projObj) // make a project... with or without a parent\n                    if (options.parent) {\n                        engine.db.associateProject(options.uid, npid, options.parent);\n                    }// associate the two\n                    return {uid: options.uid, pid: npid}\n                },\n                delete: async function (options) {\n                    await engine.db.deleteProject(options.uid, options.pid);\n                    if (options.parent)\n                        engine.db.dissociateProject(options.uid, options.pid, options.parent);\n\n                    return {uid: options.uid, TODO: \"TODO\"} // TODO: how do we undelete a project?\n                },\n                update__name: async function (options) { // update the project name!\n                    let possibleProjects = await engine.db.getProjectsandTags(options.uid);\n                    // get all possible project\n                    let projectName = possibleProjects[0][0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {name: options.name});\n                    // return what we need to undo\n                    return {projectName, uid: options.uid}\n                },\n                update__pstate: async function (options) { // update the project name!\n                    let currentProject = await engine.db.getProjectStructure(options.uid, options.id, false); // get current project info\n                    // get all possible project\n                    let is_sequential = currentProject;\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {is_sequential: options.is_sequential});\n                    // return what we need to undo\n                    return {is_sequential, uid: options.uid}\n                },\n                associate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.associateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                },\n                dissociate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.dissociateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                }\n            },\n            perspective: {\n                create: async function(options) {\n                    let pObj = {\n                        name: \"\",\n                        avail: \"remain\",\n                        tord: \"duds\",\n                        query: \"\"\n                    }\n                    let npspid = await engine.db.newPerspective(options.uid, pObj);\n                    return {uid: options.uid, pid: npspid};\n                },\n                update__perspective: async function (options) { // update the perspective name!\n                    let possiblePerspectives = await engine.db.getPerspectives(options.uid);\n                    // get all possible perspectives\n                    let perspectiveObject = possiblePerspectives[0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the perspective\n                    await engine.db.modifyPerspective(options.uid, options.id, options.payload);\n\n                    // return what we need to undo\n                    return {perspectiveObject, uid: options.uid}\n                },\n\n                delete__perspective: async function (options) { // update the perspective name!\n                    console.log(\"perspective delete gruntman func\")\n                    // TODO: is this it? @jack\n                    await engine.db.deletePerspective(options.uid, options.id);\n                }\n            },\n        } // type:action:functionaction (return resources)\n        this.undoers = {\n            task: {\n                update: \"task.set\"\n            }\n        } // action: string\n        this.backlog = []; // actionID\n        this.undolog = []; // actionID\n        this.taskLog = {\n        } // actionID: [type, resources]\n        this.canUndo = {\n            task: {\n                update: true,\n            }\n        }\n        this.schedulers = {\n        } // util function onChange fixer-upper\n        this.updateLock = false;\n        this.updateInterval = undefined;\n\n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    halt() {\n        for (let key in this.schedulers)\n            clearTimeout(this.schedulers[key])\n        //this.refresher = ()=>{}; TODO TODO may cause memory leaks in _very_ narrow circumstances but uncomming will break project toggles due to refresher mounting too quickly\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    lockUpdates() {\n        this.updateLock = true;\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    unlockUpdates(interval=580) {\n        this.updateLock = false;\n        this.updateInterval = setTimeout(this.refresher, interval);\n    }\n\n    requestRefresh() {\n        if (!this.updateLock && this.callbackRefresherReleased)\n            this.refresher();\n    }\n\n    async scheduleNotification(id, uid, title, desc, time) {\n        return await LocalNotifications.schedule({\n            notifications: [\n                {\n                    title: title,\n                    body: desc,\n                    schedule: { at: time},\n                    sound: null,\n                    id: this.hashCode(id),\n                    attachments: [`${id}`, `${uid}`],\n                    extra: uid,\n                }\n            ]\n        });\n    }\n\n    async handleNotificationAction(action) {\n        let [taskID, userID] = action.notification.attachments;\n        switch (action.actionId) {\n            case \"complete\":\n                // TODO TODO\n                this.do(\"task.update__complete\", { uid: userID, tid: taskID}, true)\n                break;\n            case \"snooze\":\n                // TODO TODO\n                taskID = action.notification.attachments;\n                userID = action.notification.extra;\n                break;\n        }\n    }\n\n    async cancelNotification(id) {\n        return await LocalNotifications.cancel({notifications: [{id:`${this.hashCode(id)}`}]});\n    }\n\n    async checkNotification(id) {\n        let expectedID = this.hashCode(id);\n        let pending = await LocalNotifications.getPending();\n        let needed = pending.notifications.map(e=>e.id).filter(e=>e==expectedID); // two equal signs to ignore type\n        return needed.length > 0;\n    }\n\n    /*\n     * @param refresher: refresher function to refresh what you registered\n     */\n\n    registerRefresher(r) {\n        this.refresher = r;\n        // lock updates every time a new page loads to prevent MeRGE Conflicts\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n    }\n\n    registerScheduler(callback, identifier, wait=500) {\n        if (this.schedulers[identifier])\n            clearTimeout(this.schedulers[identifier]); // clear the timeout\n        this.schedulers[identifier] = setTimeout(callback, wait);\n    }\n\n    async do(actionName, options, bypassUpdates, isUndo, unsafe_FORCE_UPDATES) {\n        /*\n         * @param actionName => action directive like task.edit or project.create\n         * @param options => options\n         *\n         */\n\n        // Lock updates every time cacheRef is called to prevent mErGE ConFLIcTS\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n\n        let actionID = this.random();\n\n        let nodes = actionName.split(\".\");\n\n        let action = this.doers;\n        while (nodes.length > 0) {\n            action = action[nodes.shift()];\n        }\n\n        if (isUndo) this.undolog.push(actionID);\n        else this.backlog.push(actionID);\n\n        let resources = await action(options);\n\n        this.taskLog[actionID] = [actionName, resources];\n\n        if (!this.updateLock && !bypassUpdates)\n            this.refresher();\n\n        if (unsafe_FORCE_UPDATES)\n            this.refresher();\n\n        return await resources;\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n}\n\nexport default Gruntman;\n\n","import React, { Component } from 'react';\nimport { Plugins } from '@capacitor/core';\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\n\nimport $ from \"jquery\";\n\n\nimport './Auth.css';\n\n\nimport '../themefiles/condutiontheme-default.css';\nimport '../themefiles/condutiontheme-default-dark.css';\nimport '../themefiles/condutiontheme-default-light.css';\nimport '../themefiles/condutiontheme-default-adapter.css';\n\n\n\nconst autoBind = require('auto-bind/react');\n\n\nconst { Storage } = Plugins;\n\nclass Auth extends Component {\n    constructor(props) {\n        super(props);\n\n        let greetings = [\"Hello,\", \"Hey,\", \"Heyo,\", \"Aloha,\", \"Yo!\"];\n\n        /*\n         * mode 0 = login in progress, \n         *      1 = new account in progress,\n         *      2 = recovery in progress, \n         *      3 = email unverified,\n         *      4 = email verified, proceed create\n         *      5 = recovery executed, shepeard them back\n         *\n         */\n\n        this.state = {\n            authMode: 0,\n            showExtra: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        autoBind(this);\n    }\n\n    doLogin() {\n        let view = this;\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            firebase.auth().signInWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).then(function() {\n                if (firebase.auth().currentUser.emailVerified)\n                     view.props.dispatch({service: \"firebase\", operation: \"login\"});\n                else\n                    view.setState({authMode: 3});\n            }).catch(function(error) {\n                    // Handle Errors here.\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log(error);\n                    $(\".auth-upf\").addClass(\"wrong\");\n            });\n        });\n    }\n\n    doCreate() {\n        // TODO: actually create the account\n        let view = this;\n        let problem = false;\n        firebase.auth().createUserWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).catch(function(error) {\n            view.setState({showExtra: true}, ()=>$('#need-verify').html(error.message));\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                firebase.auth().currentUser.sendEmailVerification();\n                firebase.auth().currentUser.updateProfile({displayName: $(\"#name\").val()});\n                view.setState({authMode: 4, showExtra: true});\n            }\n        })\n    }\n\n    dispatchCreate() {\n        firebase.auth().currentUser.reload().then(()=>{;\n            if (firebase.auth().currentUser.emailVerified)\n                this.props.dispatch({service: \"firebase\", operation: \"create\"});\n            else\n                $('#need-verify').html(\"Please double-check that you tapped the verification link in your email.\");\n        });\n    }\n\n    doRecover() {\n        let problem = false;\n        let view = this;\n        firebase.auth().sendPasswordResetEmail($(\"#email\").val()).catch(function(error) {\n            view.setState({showExtra: true});\n            $('#need-verify').html(error.message);\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                view.setState({authMode: 5});\n            }\n        })\n        // TODO: actually recover the account\n    }\n\n    doLocal() {\n        this.props.dispatch({service: \"json\", operation: \"login\"});\n    }\n\n    render() {\n        return (\n            <div id=\"auth-content-wrapper\">\n                <div id=\"auth-left-menu\">\n                    <div className=\"menu-area\" style={{height:\"100%\"}}>\n                        <div className=\"auth-component\"></div>\n                        <div className=\"auth-component\"></div>\n                        <span id=\"auth-image-credit\">Image by <span style={{fontWeight: 500}}>Tobias Keller/Paweł Czerwiński</span></span>\n                    </div>\n                </div>\n                <div id=\"authwall\">\n                    <h1 id=\"greeting-auth\">{this.state.greeting}</h1><span id=\"welcome-auth-msg\">Welcome to Condution.</span>\n                    <h3 className=\"greeting-auth-subtitle\" id=\"greeting-auth-normal\">{(()=>{\n                        switch (this.state.authMode) {\n                            case 2:\n                                return \"No worries! Let's recover your password.\";\n                            default:\n                                return \"Good to see you. Please sign in or tap Use Locally.\";\n\n                        }\n                    })()}</h3> \n                    <input className=\"auth-upf\" id=\"name\" type=\"text\" autoComplete=\"off\" defaultValue=\"\" placeholder=\"What should we call you?\" style={{display: this.state.authMode === 1 ? \"block\" : \"none\"}}/>\n                    <input className=\"auth-upf\" id=\"email\" type=\"email\" autoComplete=\"off\" defaultValue=\"\" placeholder=\"Email\" />\n                    <input className=\"auth-upf\" id=\"password\" type=\"password\" autoComplete=\"off\" defaultValue=\"\" placeholder=\"Password\" style={{display: this.state.authMode !== 2 ? \"block\" : \"none\"}} onKeyPress={(event)=>{\n                        if (event.key === \"Enter\") {\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                                case 5: \n                                    this.doLogin();\n                                    break;\n                            }\n                        }\n                    }}/>\n                    {(() => {\n                        if (this.state.authMode === 3 || this.state.authMode ===  4 || this.state.authMode === 5 || this.state.showExtra) return <span id=\"need-verify\">\n                            {(()=>{\n                                switch(this.state.authMode){\n                                    case 3:\n                                        return \"Check and verify your email, then tap Let's Do This!\";\n                                    case 4:\n                                        return \"Check and verify your email, then tap Proceed!\";\n                                    case 5:\n                                        return \"Check and verify your email, then return to login.\";\n\n                            }})()}\n                        </span>\n                    })()}\n                    <span id=\"recover-password\" style={{display: this.state.authMode === 3 ? \"none\" : \"block\"}} onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 2});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return \"Remembered? Login\";\n                                default:\n                                    return \"Recover Password\";\n\n                            }\n                        })()}</span>\n                    <div id=\"auth-actiongroup\">\n                        <div id=\"newuser\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 1});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return \"Log in\";\n                                default:\n                                    return \"Make an account\";\n\n                            }\n                        })()}</div>\n                        <div id=\"login\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                            }\n                        }}>\n                            <i className=\"fas fa-snowboarding\" style={{paddingRight: \"5px\"}}></i><span id=\"login-text\">{(() => {\n                                switch(this.state.authMode) {\n                                    case 0:\n                                    case 3:\n                                        return \"Let's Do This!\";\n                                    case 1:\n                                        return \"Verify Email!\";\n                                    case 2:\n                                        return \"Let's Recover!\";\n                                    case 4:\n                                        return \"Proceed!\";\n                                    case 5:\n                                        return \"Proceed!\";\n                                }\n                            })()}</span>\n                        </div>\n                        {(() => {\n                            if (this.state.authMode !== 2) return <div className=\"convert-src\" id=\"ulac\" onClick={this.doLocal}>Use Locally</div>\n                        })()}\n                    </div>\n                </div>\n            </div>\n      );\n    }\n}\n\nexport default Auth;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\nfunction Loader(props) {\n    return (\n        <div style={{width: \"100%\", height: \"100%\", position: \"absolute\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{marginRight: 20, maxWidth: 500}}>\n                <b>Condution v1.0.0-alpha.0</b> <br />\n\n                    <i>Like, why are you reading this?</i> <br />\n\n                    If there is something here [{props.error}], <br />\n                then talk to Jack or something. Or fix it. <br />\n                    INTERNAL USE ONLY. DO NOT DISTRIBUTE.\n            </div>\n            <div style={{marginLeft: 20, maxWidth: 500}}>\n                <br />\n\n                <pre style={{fontSize: 10}}>\n                    {`\n    Copyright (C) 2019-2020. Shabang Systems, LLC\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see https://www.gnu.org/licenses/.\n                    `}\n                </pre>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Loader;\n\n","/* Global Imports */\nimport React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, IonMenu, setupConfig } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Themefiles */\nimport './themefiles/condutiontheme-default-adapter.css';\nimport './themefiles/condutiontheme-default.css';\nimport './themefiles/condutiontheme-default-dark.css';\nimport './themefiles/condutiontheme-default-light.css';\n//import './themefiles/condutiontheme-default-new.css';\nimport './themefiles/condutiontheme-black-n-red.css';\n\n/* Font awesome */\nimport './static/fa/scripts/all.min.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n/* Capacitor core plugins + jQuery */\nimport { Plugins } from '@capacitor/core';\nimport $ from \"jquery\";\n\n/* Our Lovley Core Engine */\nimport Engine from './backend/CondutionEngine';\nimport Gruntman from './gruntman';\n\n/* Firebase */\nimport * as firebase from \"firebase/app\";\n\n/* Auth and store modules */\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n/* Views that we need */\nimport Auth from './pages/Auth';\nimport Loader from './pages/Loader';\nimport Home from './pages/Home';\n\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\n\n/* Storage Plugins */\nconst { Storage } = Plugins;\n\n\n/* \n * Hello human, good morning.\n *\n * Hope you are doing well. Thanks (why are you) visiting App.jsx?\n *\n * I manage global routing, auth handling, and all that jazz.\n * You should not touch me to change the interface.\n * But I guess I change the interface. So.\n *\n * I kind of change the interface?\n *\n * Anyways, I return one of Loader, Auth, or Home depending on auth state.\n *\n * And check for the auth state to determine which one to return\n *\n * It's not really a poem, isn't it.\n *\n * @Jemoka\n *\n */\n\nsetupConfig({ swipeBackEnabled: false, }); // globally disable swipe b/c we implemented our own\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        // We start with setting our state. We don't know our user's UID (duh)\n        this.state = {authMode: \"loader\", uid: \"\", displayName: \"\"};\n        \n        // We also set the theme based on the user's media query\n        if (window.matchMedia('(prefers-color-scheme:dark)').matches) {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-dark\");\n        }\n        else {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-light\");\n        }\n\n        // Make ourselves a nice gruntman\n        this.gruntman = new Gruntman(Engine);\n        \n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    async componentDidMount() {\n        // This IS in fact the view\n        let view = this;\n\n        // Light the fire, kick the tires an instance \n        // of {firebase}, and initializing the firebase \n        // and json engines\n        await Engine.start({firebase}, \"firebase\", \"json\");\n\n\n        // ==Handling cached dispatch==\n        // So, do we have a condution_stotype? \n        Storage.get({key: 'condution_stotype'}).then((dbType) => {\n            switch (dbType.value) {\n                // If its firebase \n                case \"firebase\":\n                    // Check if we actually has a user\n                    firebase.auth().onAuthStateChanged(function(user) {\n                        if (!user)\n                            view.authDispatch({operation:\"logout\"});\n                        // If we have one, shift the engine into firebase mode\n                        else {\n                            Engine.use(\"firebase\", view.gruntman.requestRefresh);\n                            // Load the authenticated state, set authmode as \"firebase\" and supply the UID\n                            view.setState({authMode: \"firebase\", uid: user.uid, displayName: user.displayName});\n                        }\n                    })\n                    break;\n                // If its json\n                case \"json\":\n                    // Shift the engine into json mode\n                    Engine.use(\"json\", view.gruntman.requestRefresh);\n                    // Load the authenticated state, set the authmode as \"json\" and supply \"hard-storage-user\" as UID\n                    this.setState({authMode: \"json\", uid:\"hard-storage-user\"});\n                    break;\n                // If there is nothing, well, set the authmode as \"none\"\n                default:\n                    this.setState({authMode: \"none\", uid:undefined});\n                    break;\n            }\n        });\n    }\n\n    // authDispatch handles the dispatching of auth operations. {login, create, and logout}\n    authDispatch(mode) {\n        // TODO: that's a state machine! @zbuster05\n        let uid;\n        let name;\n        switch (mode.operation) {\n            // operation mode login\n            case \"login\":\n                // shift the engine into whatever mode we just logged into\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                // write the login state into cookies\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                // get the UID\n\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n                // load the authenicated state and supply the UID\n                this.setState({authMode: mode.service, uid, displayName: name});\n                break;\n            // operation mode create\n            case \"create\":\n                // setthe engine as whatever service\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n\n                // TODO: do onboarding\n                // Here\n                console.log(\"I would be onboarding, but... alas.\");\n                // TODO: be done with onboarding\n                // Set the storage type and write it into cookies\n                // load the authenicated state and TODO supply the UID\n                this.setState({authMode: mode.service, uid, displayName: name});\n                break;\n            case \"logout\":\n                // Set the storage type to nada and write it into cookies\n                Storage.set({key: 'condution_stotype', value: \"none\"});\n                // Sign out if we are signed in\n                firebase.auth().signOut();\n                // Load the auth view\n                this.setState({authMode: \"none\", name: \"\"});\n                break;\n        }\n    }\n\n    render() {\n        // Check for onboarding here\n        // then continue\n        // Which authmode?\n        switch (this.state.authMode) {\n            // if we are at the first-paint load mode, do this:\n            case \"loader\":\n                return <Loader />\n            // if we did not authenticate yet, load the auth view:\n            case \"none\":\n                return <Auth dispatch={this.authDispatch}/>;\n            // if we did auth, load it up and get the party going\n            case \"firebase\":\n            case \"json\":\n                return <Home engine={Engine} uid={this.state.uid} dispatch={this.authDispatch} gruntman={this.gruntman} displayName={this.state.displayName}/>;\n            // wut esta this auth mode? load the loader with an error\n            default:\n                console.error(`CentralDispatchError: Wut Esta ${this.state.authMode}`);\n                return <Loader isError={true} error={this.state.authMode}/>\n        }\n    }\n}\n\nexport default App;\n//class App extends Component {\n    //render() {\n        //return (\n            //<IonApp>\n                //<Home />\n            //</IonApp>\n        //);\n    //}\n//}\n\n/*export default App;*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\nconst autoBind = require('auto-bind/react');\n\nclass Repeat extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            name: \"\", // task's name\n            rule: \"none\", // the repeat rule\n            advanced: false, // advanced or not\n            on: undefined, // advanced repeat rules\n        }\n    }\n\n    async loadTask() {\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n        this.setState({\n            name: taskInfo.name, // name is name\n            rule: taskInfo.repeat ? taskInfo.repeat.rule : \"none\", // rule is rule, if there's a rule\n            advanced: taskInfo.repeat ? (taskInfo.repeat.on !== undefined) : false, // on is on, if there's a rule\n            on: taskInfo.repeat ? taskInfo.repeat.on : undefined, // on is on, if there's a rule\n        });\n    }\n\n    componentDidMount() {\n        this.loadTask();\n    }\n\n    render() {\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}} cssClass={\"task-repeat \"+(()=>{\n                // Different repeat modes require different height modals\n                 switch (this.state.rule) {\n                      case \"none\":\n                          return \"task-repeat__default\";\n                      case \"daily\":\n                          return \"task-repeat__default\";\n                      case \"weekly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-weekly\" : \"task-repeat__default\");\n                      case \"monthly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-monthly\" : \"task-repeat__default\");\n                      case \"yearly\":\n                          return \"task-repeat__default\";\n                  }\n            })()}>\n                <div>\n                    {/* Header */}\n                    <div className=\"repeat-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\"}}>\n\t\t\t                <b className=\"bold-prefix\" >Repeat</b> \n\t\t\t                <div className=\"repeat-task-name\">{this.state.name}</div>\n\t\t\t            </span>\n                        {/* Close button */}\n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                    </div>\n                    <div>\n                        <div className=\"repeat-basic-row\">\n                            <div className=\"repeat-rule-selector\">\n                            <span>\n                                <i className=\"repeat-label fa fa-redo\"></i>\n                                <span className=\"repeat-label\">Repeat</span>\n                            </span>\n                            {/* The big select, force iOS style */}\n                            <IonSelect className=\"repeat-select\" interface=\"popover\" value={this.state.rule} mode=\"ios\" onIonChange={e=>{\n                                    // Set the repeat\n                                    this.props.gruntman.do(\n                                        \"task.update\", \n                                        { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: e.detail.value}}}\n                                    )\n\n                                    // Set the state too!\n                                    this.setState({rule: e.detail.value, advanced: false, on: undefined});\n \n                                }}>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"none\">None</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"daily\">Daily</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"weekly\">Weekly</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"monthly\">Monthly</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"yearly\">Yearly</IonSelectOption>\n                            </IonSelect>\n                            </div>\n                                {\n                                    \n                                <a style={{color: \"var(--decorative-light-alt)\", float: \"right\", cursor: \"pointer\", display: [\"weekly\", \"monthly\"].includes(this.state.rule) ? \"inline\" : \"none\" }} className={\"fas \" + (this.state.advanced ? \"fa-caret-down\":\"fa-caret-up\")} onClick={()=> {\n                                    if (this.state.advanced) {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule}}}\n                                        ) // undo advanced \n                                        this.setState({rule: this.state.rule, advanced: false, on: undefined}); // set the state too!\n                                    } else {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: []}}}\n                                        ) // do advanced \n                                        this.setState({rule: this.state.rule, advanced: true, on: []}); // set the state too!\n                                    }\n                                }}></a>\n                                }\n                        </div>\n                    </div>\n                    <div style={{margin: \"10px 20px\", color: \"var(--content-normal-alt)\"}}>\n                        {(()=>{\n                            if (this.state.advanced)\n                                switch (this.state.rule) {\n                                    case \"weekly\":\n                                        return (\n                                            <div className=\"repeat-weekgrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {/* [\"originalString\", \"localizedString\"] <= localize in this way */}\n                                                {[[\"M\", \"M\"], [\"T\", \"T\"], [\"W\", \"W\"], [\"Th\", \"Th\"], [\"F\", \"F\"], [\"S\", \"S\"], [\"Su\", \"Su\"]].map(e => <a key={e} className={\"repeat-weekgrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e[0]) ? \"repeat-weekgrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e[0])) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e[0]);\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e[0]);\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e[1]}</a>)}\n                                            </div>\n                                        )\n                                    case \"monthly\":\n                                        return (\n                                            <div className=\"repeat-dategrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"Last\"].map(e => <a key={e} className={\"repeat-dategrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e.toLowerCase()) ? \"repeat-dategrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e.toLowerCase())) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e.toLowerCase());\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e.toLowerCase());\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e}</a>)}\n                                            </div>\n                                        );\n                                }\n                        })()}\n                    </div>\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default Repeat;\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport './TagEditor.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n/*\n * Although I do not agree\n * Jack told me to make this feat\n * I did not make this carefree\n * yet this is far from elite\n *\n * I resolved to give it a try\n * and encountered this very strange bug\n * This thing makes me want to cry\n * Front-end is far from a drug\n *\n * I may be exageratting\n * Maybe this bug wasn't so bad\n * But still I cannot add padding\n * and it still makes me very sad\n *\n * React may feel like a drug\n * Until you find the next bug\n *\n * by @zbuster05\n * */\n\nconst autoBind = require('auto-bind/react');\n\nclass TagEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tagList: []\n        }\n    }\n\n   async setTagState() {\n        this.state.tagList = await this.props.engine.db.getTags(this.props.uid);\n    }\n   // TODO BADDD \n    componentDidMount() {\n        this.setTagState()\n    }\n\n    render() {\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidPresent={() => {this.setTagState()}} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5, border: \"1px solid red\"}} cssClass={\"tag-editor\"}>\n\n                {/*Text Header*/}\n                <div className=\"TagEditor-header\">\n                    <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\n\t\t\t            <b className=\"bold-prefix\" >Tags</b> \n\t\t\t        </span>\n\n                    {/*Close Button*/}\n                    <a className=\"TagEditor-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                </div>\n                \n                {/*Like actual tag setting stuff*/}\n                <div className=\"tag-pane-container\">\n                    <div className=\"tag-list\">\n                        {this.state.tagList.map(tag => {\n                            return (<div className=\"tag-in-list\">\n                                {tag.name} \n                            </div>)\n                        })}\n                    </div>\n                    <div className=\"tag-settings\"></div>\n                </div>\n            </IonModal>\n        )\n    }\n}\n\nexport default TagEditor\n","// A whole lotta imports\n\n// Ionic components\nimport { IonItem, IonInput, IonContent, IonGrid, IonRow, IonCol, IonSegment, IonLabel, IonButton, IonPopover } from '@ionic/react';\n\n// Detect whether is mobile\nimport { getPlatforms } from '@ionic/react';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// React Spring animation packages\nimport { Spring, animated, Keyframes } from 'react-spring/renderprops'\n\n// Cool components \nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable';\n\n// Our very own repeat UI\nimport Repeat from './Repeat';\n\n// Our very own tag editor UI\nimport TagEditor from './TagEditor';\n\n// Our very own calendar popover\nimport CalendarPopover from './CalendarPopover';\n\n// Our very own CSS\nimport './Task.css';\n\n// Oooips\nimport ReactTooltip from 'react-tooltip';\n\n// FNS date parcing utils\nconst { parseFromTimeZone } = require('date-fns-timezone')\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\n\n/*\n *\n * Hello human,\n *\n * I am a task.\n *\n * You seriously are reading the help poem about this?\n *\n * @jemoka\n *\n */\n\n\n// Our very own custom animatinos\nconst AnimationFactory = Keyframes.Spring({\n    // Open->close animation\n    hide: {\n        to: {\n            taskHeight:38, \n            taskMargin: \"2px 8px\", \n            taskBackground:\"\", \n            taskPadding: 3,\n            taskEditOpacity: 0,\n            taskEditMaxHeight: 0,\n            taskOpacity: 1,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskDisplay: \"\",\n            taskMaxHeight: 40,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n\n    },\n    // Close->open animation\n    show: {\n        to: {\n            taskHeight:38, \n            taskMargin:\"15px 25px\", \n            taskBackground:\"var(--task-selected)\", \n            taskPadding: 10,\n            taskEditOpacity: 1,\n            taskDisplay: \"\",\n            taskOpacity: 1,\n            taskEditMaxHeight: 300,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskMaxHeight: 500,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n    },\n    // Incomplete->complete animation\n    complete: [\n        {\n            to: {\n                taskMargin: \"14px 8px\", \n                taskNameDecoration: \"line-through\",\n                taskOpacity: 1,\n                taskPosition: \"\",\n            },\n            config: {\n                tension: 200,\n                friction: 25,\n                mass: 1\n            },\n\n        }, \n        {\n            to: {\n                taskMaxHeight: 0,\n                taskHeight:0, \n                taskOpacity: 0,\n                taskMargin: \"0px 8px\", \n                taskPadding: 0,\n                taskPosition: \"absolute\",\n            },\n            config: {\n                tension: 800,\n                friction: 50,\n                mass: 1\n            },\n        }\n    ],\n})\n\n// Aww sheat, here we go\nclass Task extends Component {\n\n    constructor(props) {\n        // Invoke React's constructor\n        super(props);\n\n        // Bind it good!\n        autoBind(this);\n\n        this.state = { \n            expanded: false, // are we expanded?\n            deferDate: undefined, // what's our defer date?\n            dueDate: undefined, // what's our due date?\n            name: \"\", // what's our name string?\n            desc: \"\",  // what's our description string?\n            isFlagged: false, // are we flagged?\n            isFloating: false, // are we floating? or just eating jello?\n            project:\"\", // what's our project ID?\n            tags: [], // what are the IDs of our tags?\n            decoration: \"\",  // are we \"od\" \"ds\" or just just good ol' \"\"?\n            availability: true, // are we avaliable? or are we deferred or blocked (in which case it'd be false.)\n            isComplete: false, // are we completed?\n            showRepeat: false, // is our repeat UI shown?\n            showTagEditor: false, // is our TagEditor UI shown?\n            deferPopoverShown: false, // is the defer calendar popover shown?\n            duePopoverShown: false, // is the due calendar popover shown?\n            startingCompleted: this.props.startingCompleted, // disable immediate onComplete animation for completed\n            possibleTags: this.props.datapack[0], // tags will need to be dynamically added, so\n            haveBeenExpanded: (this.props.startOpen !== undefined && this.props.startOpen !== false), // did we render the edit part yet? optimization\n            notificationPopoverShown: [false, null], // is our notification popover shown?\n            notificationCalendarShown: false, // is the notification calendar shown?\n            hasNotification: false // do we have a notification scheudled?\n        }\n        this.initialRenderDone = false; // wait for data to load to make animation decisions\n        this.me = React.createRef(); // who am I? what am I?\n        this.repeater = React.createRef(); // what's my repeater?\n        this.checkbox = React.createRef(); // what's my pseudocheck\n        this.TagEditorRef = React.createRef(); // what's my tag editor\n        this.actualCheck = React.createRef(); // what's my (actual, non-seen) checkmark\n        this.duePopover = React.createRef(); // what's my due popover?\n        this.deferPopover = React.createRef(); // what's my defer popover?\n        this.notificationPopover = React.createRef(); // what's my notification popover?\n        this.notificationCalender = React.createRef(); // what's my notification calandar?\n    }\n\n    showRepeat() {this.setState({showRepeat: true})} // util func for showing repeat\n    hideRepeat() {this.setState({showRepeat: false})} // util func for hiding repeat\n\n    showTagEditor() {this.setState({showTagEditor: true})} // function for showing tag editor\n    showTageEditor() {this.setState({showTageEditor: false})}  // function for hiding tag editor\n\n    showNotificationPopover(e) {\n        if (this.state.hasNotification)\n            this.setState({notificationPopoverShown: [true, e.nativeEvent]})\n        else \n            this.setState({notificationCalendarShown: true})\n    }\n\n    // Monster function to query task info TODO TODO #cleanmeup\n    async loadTask() {\n\n        // Obviously we need this, the task info\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n\n        // Setting state to update the rest of them elements\n        this.setState({\n            name: taskInfo.name, // Set name field\n            desc: taskInfo.desc, // Set task description\n            project: taskInfo.project,  // Set project ID\n            tags: taskInfo.tags, // Set tag ID array\n            isFloating: taskInfo.isFloating, // Set isFloating bool\n            isFlagged: taskInfo.isFlagged, // Set is Flagged bool\n            isComplete: taskInfo.isComplete, // Set is complete style\n            dueDate: (\n                taskInfo.due ? // If we have a due date\n                (taskInfo.isFloating ? // and if we are floating\n                    new Date(taskInfo.due.seconds*1000) : // then the due date in just... the due date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.due.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ):\n                undefined \n            ), \n            deferDate: (\n                taskInfo.defer ? // If we have a defer date\n                (taskInfo.isFloating ?  // and if we are floating\n                    new Date(taskInfo.defer.seconds*1000) : // then the defer date is just... the defer date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.defer.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ): undefined\n            ),\n            hasNotification: await this.props.gruntman.checkNotification(this.props.tid),\n        });\n        this.refreshDecorations(); // flush and generate them decorations!\n        this.initialRenderDone = true;\n    }\n\n    refreshDecorations() {\n        if (this.state.dueDate) // if we gotta due date\n            if (this.state.dueDate-(new Date()) < 0) // and this kid has not done his homework\n                this.setState({decoration: \"od\"}); // give 'em a red badge\n        else if (this.state.dueDate-(new Date()) < 24*60*60*1000) // or if this kid has not done his homework a day earlier\n            this.setState({decoration: \"ds\"}); // give 'em an orange badge\n        else \n            this.setState({decoration: \"\"}); // give 'em an nothing badge\n\n        if (this.state.deferDate) // if we gotta defer date\n            if (this.state.deferDate-(new Date()) > 0) // and this kid is trying to start early\n                this.setState({availability: false}); // tell 'em it's not avaliable\n        else if (this.props.availability === true) //  otherwise, if this thing's avaliable\n            this.setState({availability: true}); // set it to be so!\n        else if (!this.props.availability) // or if my props make me disabled\n            this.setState({availability: false}); // well then you gotta follow them props, no?\n    }\n\n    componentDidMount() {\n        this.loadTask(); // load the task when we mount   \n        document.addEventListener('mousedown', this.detectOutsideClick, false); // and listen for clicks everywhere\n    }\n\n    componentWillUnmount = () => document.removeEventListener('mousedown', this.detectOutsideClick, false); // remove the listener... no memory leaks plez\n\n    toggleTask = () => this.setState(state => ({expanded: !state.expanded})); // util function to toggl a task\n    \n    closeTask() {\n        this.setState({expanded: false});\n    }\n    //closeTask = () => this.setState({expanded: false}); // util function to close a task\n\n    openTask() {\n        if (this.state.haveBeenExpanded)\n            this.setState({expanded: true});\n        else \n            this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }// util function to open a task\n\n    _explode() {\n        // You should probably be calling openTask()\n        this.initialRenderDone = true;\n        this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }\n\n    detectOutsideClick(e) {\n\n        if (this.me.current) // if we are mounted\n            if (this.me.current.contains(e.target)) // if we are clicking me\n                return; //click inside\n\n        if (this.repeater.current) // if our repeater is a thing that mounted\n            if (this.repeater.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.duePopover.current) // if our due popover is a thing that mounted\n            if (this.duePopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.deferPopover.current) // if our defer popover is a thing that mounted\n            if (this.deferPopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.notificationPopover.current) // if our notification popover is a thing that mounted\n            if (this.notificationPopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.notificationCalender.current) // if our notification calendar is a thing that mounted\n            if (this.notificationCalender.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n        \n        if (this.TagEditorRef.current) // if our repeater is a thing that mounted\n            if (this.TagEditorRef.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n        \n        //if (this.props.envelope) // if we have a drag envelope\n            //if (this.props.envelope.current) // if we have a drag envelope\n                //if (this.props.envelope.current.contains(e.target)) // and we are clicking inside that\n                    {/*return; //click inside*/}\n\n        // DRAG ENVELOPES ARE SUPPOSED TO PROTECT AGAINST DRAGGING, AND ARE UNIVERSAL ACROSS ALL TASKS\n        // UNCOMMENTING THIS WILL MAKE MULTIPLE TASKS OPEN AT ONCE ON UPCOMING\n\n        if (document.getElementById(\"parking-lot\").contains(e.target))\n            return;\n\n        if (this.props.onModal)\n            if (document.getElementById(\"airplane-hanger\").contains(e.target))\n                return;\n\n        if (this.state.showRepeat) // if we are showing our repeat\n            return; //click inside\n\n        if (this.state.showTagEditor) // if we are showing TagEditor\n            return; // click inside\n\n        //otherwise,\n        this.closeTask();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevState.deferDate !== this.state.deferDate) // if we updated the defer date\n            this.refreshDecorations();\n        if (prevState.dueDate !== this.state.dueDate) // if we updated the due date\n            this.refreshDecorations();\n        if (prevState.expanded !== this.state.expanded && this.state.expanded === true) {// if we opened a task for updating\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"none\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(false); // disable drag\n            this.props.gruntman.lockUpdates(); // tell gruntman to chill\n        }\n        else if (prevState.expanded !== this.state.expanded && this.state.expanded === false) { // if we closed a task\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"block\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(true); // enable drag\n            this.props.gruntman.unlockUpdates(); // tell gruntman to... grunt!\n        }\n        if (prevProps.startOpen !== this.props.startOpen && this.props.startOpen) // we are newly starting open\n            this.openTask(); // open task\n    }\n\n\n    // ready fo this?\n\n    render() {\n\n        return (\n            <div>\n\n                {/*animation factory to orchistrate animations*/}\n\n                <AnimationFactory\n\n                    native  \n\n                    state = {\n                        this.initialRenderDone ?\n                            (this.state.isComplete? // if we are complete \n                                (this.state.startingCompleted? // and we start complete \n                                    (this.state.expanded? // and we are expanded \n                                        \"show\":\"hide\") // show, otherwise, hide \n                                        :\"complete\") // if we are complete,  and don't start completed, complete. \n                                        : // if we arnt complete, \n                                this.state.startingCompleted ?  // and we start complete \n                                \"complete\" :\n                                (this.state.expanded? \"show\":\"hide\")):\"hide\"\n                    } // if we are incomplete, and we start incomplete, then show or hide based on expanded \n\n                >\n                    {animatedProps => {\n                        return (\n                            // Actual task container, now\n                            <animated.div \n                                onClick={(e)=>{\n                                    if(!this.state.expanded && e.target !== this.checkbox.current && e.target !== this.actualCheck.current && !this.props.freeze && !(this.state.isComplete&&!this.state.startingCompleted)) { \n                                        this.openTask(); // open the task\n                                    }\n                                }}\n                                className={\"task \"+(this.state.expanded?\"expanded\":\"collapsed\")} \n\n                                ref={this.me} \n\n                                style={{\n                                    minHeight: animatedProps.taskHeight, \n                                    maxHeight: animatedProps.taskMaxHeight, \n                                    margin: animatedProps.taskMargin, \n                                    background:animatedProps.taskBackground, \n                                    opacity:animatedProps.taskOpacity, \n                                    overflow: \"hidden\",\n                                    display: animatedProps.taskDisplay,\n                                    position: animated.taskPosition,\n                                    padding: animatedProps.taskPadding}}\n                            >\n\n                                {/* Chapter 0: Utility Components */}\n\n                                {/* Gotta get those on hover tips */}\n                                {/* And load up + hide the repeat UI, too! */}\n                                <Repeat tid={this.props.tid} reference={this.repeater} isShown={this.state.showRepeat} onDidDismiss={this.hideRepeat} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                {/* As well as load up + hide the tag editor!*/}\n                                <TagEditor reference={this.TagEditorRef} isShown={this.state.showTagEditor} onDidDismiss={()=>this.setState({showTagEditor: false})} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                \n                                {/* Chapter 1: Task Checkmark */}\n                                {/* Who could have thought so much code goes into a checkbox? */}\n                                <div style={{display: \"inline-block\", transform: \"translateY(-3px)\"}}>\n                                    {/* First, an invisible checkmark */}\n                                    <input \n                                        type=\"checkbox\" \n\n     ref={this.actualCheck}\n                                        id={\"task-check-\"+this.props.tid} \n                                        className=\"task-check\"\n                                        defaultChecked={this.props.startingCompleted}\n                                        onChange={()=>{\n\n                                            // If we are uncompleting a task (that is, currently task is complete) \n                                            if (this.state.isComplete) {\n                                                this.props.gruntman.lockUpdates();\n                                                // Well, first, uncomplete it\n                                                this.setState({isComplete: false})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__uncomplete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                // Whatever this is\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                            // If we are completing a task (that is, currently task is incomplete)\n                                            else if (!this.state.isComplete) {\n                                                // Lock updates so that animation could finish\n                                                this.props.gruntman.lockUpdates();\n                                                // Complete it\n                                                this.setState({isComplete: true})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__complete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                //TODO wait for animation to finish before state update??\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                        }} \n                                        style={{opacity: this.state.availability?1:0.35}}\n                                    />\n\n                                    {/* Oh yeah, that checkmark above you can't actually see */}\n                                    {/* Here's what the user actually clicks on, the label! */}\n                                    <label ref={this.checkbox} className={\"task-pseudocheck \"+this.state.decoration} id={\"task-pseudocheck-\"+this.props.tid} htmlFor={\"task-check-\"+this.props.tid}>&zwnj;</label>\n                                </div>\n\n                                {/* The animated input box */}\n                                <animated.input \n                                    defaultValue={this.state.name} \n                                    placeholder={\"LOCALIZE: Task Name\"} \n                                    onChange={\n                                        (e)=>{\n                                            // THIS. REFER TO THIS. YOU ARE HERE. STOP SEARCHING.\n                                            // :point down: is FANCYCHANGE\n\n                                            // If somebody dares to do the complicated action of task name change\n                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n\n                                            // Register a scheduler to watch for more changes\n                                            // because dang react calls onChange on every freaking change\n                                            // TODO TODO destruct all schedulers on view change\n                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                \"task.update\", // the scheduler actually updates the task\n                                                {\n                                                    uid: this.props.uid, \n                                                    tid: this.props.tid, \n                                                    query:{name: e.target.value} // setting the name to the name\n                                                }\n                                            ), `task-name-${this.props.tid}-update`) // and we will schedule it as this\n                                        }\n                                    } \n\n                                    onFocus={(e)=>{ \n                                        // open the task if its not open already\n                                        if(!this.state.expanded) { \n                                            //this.openTask(); // open the task\n                                            if (getPlatforms().includes(\"mobile\")) e.target.blur(); // blur, only if mobile to fix bugs where even in attempted readonly the cursor blurs\n                                        }\n                                    }} \n                                    className={\"task-name \"+(this.state.expanded?\"\":\"no-select\")} \n                                    readOnly={(!this.state.expanded)} \n                                    type=\"text\" \n                                    autoComplete=\"off\" \n                                    placeholder=\"LOCALIZE: Task Name\" \n                                    style={{opacity: this.state.availability?1:0.35, textDecoration: animatedProps.taskNameDecoration}} />\n\n                                {/* Task edit. The thing that slides open on edit. */}\n                                {(() => {\n                                    if (this.state.haveBeenExpanded===true)\n                                        return(\n                                            <animated.div className=\"task-edit\" style={{opacity: animatedProps.taskEditOpacity, overflow: \"hidden\",maxHeight: animatedProps.taskEditMaxHeight}}>\n\n                                                {/* First, task description field */}\n                                                <textarea \n                                                    placeholder=\"LOCALIZE:Description\" \n                                                    className=\"task-desc\" \n                                                    style={{marginBottom: 10}} \n                                                    defaultValue={this.state.desc}\n                                                    onChange={\n                                                        (e)=>{\n                                                            // Register a scheduler to deal with React's onChange\n                                                            // Search for the word FANCYCHANGE to read my spheal on this\n                                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                                \"task.update\", \n                                                                {\n                                                                    uid: this.props.uid, \n                                                                    tid: this.props.tid, \n                                                                    query:{desc: e.target.value}\n                                                                }\n                                                            ), `task-desc-${this.props.tid}-update`)\n                                                        }\n                                                    }\n                                                >\n                                                </textarea>\n\n                                                {/* Task icon set. TODO delete task */}\n                                                <div style={{display: \"inline-block\", marginBottom: 6, transform: \"translateY(-5px)\"}}>\n                                                    {/* Flagged icon */}\n                                                    <a data-tip=\"LOCALIZE: Flagged\" className=\"task-icon\" style={{borderColor: this.state.isFlagged ? \"var(--task-icon-ring-highlighted)\":\"var(--task-icon-ring)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the flagged state to the opposite of whatever it is\n                                                        // Both on the db...\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFlagged: !this.state.isFlagged}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFlagged: !this.state.isFlagged});\n\n                                                    }}><i className=\"fas fa-flag\" style={{margin: 3, color: this.state.isFlagged ? \"var(--task-icon-highlighted)\" : \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Floating icon */}\n                                                    <a data-tip=\"LOCALIZE: Floating\" className=\"task-icon\" style={{borderColor: this.state.isFloating? \"var(--task-icon-ring-highlighted)\":\"var(--task-icon-ring)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the floating state to the opposite of whatever it is\n                                                        // Both on the db... TODO flush the timezone too?\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFloating: !this.state.isFloating}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFloating: !this.state.isFloating});\n\n                                                    }}><i className=\"fas fa-globe-americas\" style={{margin: 3, color: this.state.isFloating? \"var(--task-icon-highlighted)\" : \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Repeat icon that, on click, shows repeat */}\n                                                    <a onClick={this.showRepeat} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}} data-tip=\"LOCALIZE: Repeat\"><i className=\"fas fa-redo\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}} ></i></a>\n\n                                                    {/* Notification icon that, on click, shows notify popover */}\n                                                    <CalendarPopover reference={this.notificationCalender} uid={this.props.uid} disableOnclick engine={this.props.engine} isShown={this.state.notificationCalendarShown} onDidDismiss={()=>this.setState({notificationCalendarShown: false})} useTime initialDate={this.state.dueDate} onDateSelected={(d)=>{\n                                                        this.props.gruntman.cancelNotification(this.props.tid).then(()=>{\n                                                            this.props.gruntman.scheduleNotification(this.props.tid, this.props.uid, this.state.name, this.state.desc, d);\n                                                            this.setState({hasNotification: true});\n                                                        });\n                                                    }}/>\n                                                    <IonPopover\n                                                        showBackdrop={false}\n                                                        isOpen={this.state.notificationPopoverShown[0]}\n                                                        cssClass='notif-popover'\n                                                        mode=\"md\" \n                                                        onDidDismiss={e => this.setState({notificationPopoverShown: [false, null]})}\n                                                        event={this.state.notificationPopoverShown[1]}\n                                                        ref={this.notificationPopover}\n                                                    >\n                                                        <div>\n                                                            <div className=\"notification-popover-item\" onClick={()=>{\n                                                                this.props.gruntman.cancelNotification(this.props.tid)\n                                                                this.setState({hasNotification: false, notificationPopoverShown: [false, null]});\n                                                            }}>Cancel Notification</div>\n                                                            <div className=\"notification-popover-item\" onClick={()=>this.setState({notificationCalendarShown: true, notificationPopoverShown:[false, null]})}>Change Notification</div>\n                                                        </div>\n                                                    </IonPopover>\n                                                    {(()=>{\n                                                        if (this.props.gruntman.notifPermissionGranted && !(getPlatforms().includes(\"mobileweb\") || getPlatforms().includes(\"desktop\")))\n                                                            return <a onClick={this.showNotificationPopover} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}} data-tip=\"LOCALIZE: Repeat\"><i className=\"fas fa-bell\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5.5px)\"}} ></i></a>\n                                                    })()}\n\n                                                    {/* TagEditor icon that shows TagEditor on click*/}\n                                                    <a onClick={this.showTagEditor} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", marginRight: 20, cursor: \"pointer\"}} data-tip=\"LOCALIZE: Freaking TagEditor\"><i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}}></i></a>\n                                                    {/*<div className=\"task-icon\" style={{borderColor: \"var(--task-checkbox-feature-alt)\", marginRight: 20}}><a className=\"fas fa-globe-americas\" style={{margin: 3, color: \"var(--task-textbox)\", fontSize: 13, transform: \"translate(2.5px, -0.5px)\"}}></a></div>*/}\n                                                </div>\n\n\n                                                {/* Task date set */}\n                                                <div style={{display: \"inline-block\", marginBottom: 8}}>\n\n                                                    {/* Defer date container */}\n                                                    <div style={{display: \"inline-block\", marginRight: 10, marginBottom: 5, marginLeft: 6}}>\n                                                        {/* The. Defer. Date. */}\n                                                        <i className=\"fas fa-play\" data-tip=\"LOCALIZE: Defer Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        <CalendarPopover reference={this.deferPopover} uid={this.props.uid} engine={this.props.engine} isShown={this.state.deferPopoverShown} onDidDismiss={()=>this.setState({deferPopoverShown: false})} useTime initialDate={this.state.deferDate} onDateSelected={(d)=>{\n                                                            this.props.gruntman.do(\n                                                                \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                            )\n                                                            this.setState({deferDate: d});\n\n                                                        }}/>\n                                                        {(() => {\n                                                            {/* The. Defer. Date. Input. */}\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\"))} defaultValue={value}  onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // DATEHANDLING is here too. If you are looking for that, stop searching\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value); // NLP that date!\n                                                                            if (d) this.setState({deferDate: d}); // we we got a valid date, update the calendar UI\n                                                                            if (d) // and update the database too!\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n                                                                        }, `task-defer-${this.props.tid}-update`)\n                                                                    }} onFocus={(e) => {\n                                                                        if (getPlatforms().includes(\"mobile\"))\n                                                                            this.setState({deferPopoverShown: true})\n                                                                        else {\n                                                                            onClick();\n                                                                            e.target.focus();\n                                                                        }\n\n                                                                    }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // TIMEHANDLING is here. If you are searching for that, it's here.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds()); // TODO make this with the onChange API\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.deferDate}\n                                                                    portalId={this.props.onModal?\"airplane-hanger\":\"parking-lot\"}\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({deferDate: date});\n\n                                                                        // No longer needed. State updates handle decoration udpates. Kept here for decorative purposes:\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                    showTimeInput\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n\n                                                    <div style={{display: \"inline-block\", marginBottom: 5, marginLeft: 6}}>\n                                                        <i className=\"fas fa-stop\" data-tip=\"LOCALIZE: Due Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        {/* Due date popover */}\n                                                        <CalendarPopover reference={this.duePopover} uid={this.props.uid} engine={this.props.engine} isShown={this.state.duePopoverShown} onDidDismiss={()=>this.setState({duePopoverShown: false})} useTime initialDate={this.state.dueDate} onDateSelected={(d)=>{\n                                                            this.props.gruntman.do(\n                                                                \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                            )\n                                                            this.setState({dueDate: d});\n\n                                                        }}/>\n                                                        {(() => {\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\")) ? true : false} defaultValue={value} onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // Search for the word DATEHANDLING for what the heck the code actually does\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value);\n                                                                            if (d) this.setState({dueDate: d});\n                                                                            if (d)\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n\n                                                                        }, `task-due-${this.props.tid}-update`)\n                                                                    }\n                                                                        } onFocus={(e) => {\n                                                                            if (getPlatforms().includes(\"mobile\"))\n                                                                                this.setState({duePopoverShown: true})\n                                                                            else {\n                                                                                onClick();\n                                                                                e.target.focus();\n                                                                            }\n                                                                        }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // Search for TIMEHANDLING for notes on time handling.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds());\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.dueDate}\n                                                                    portalId={this.props.onModal?\"airplane-hanger\":\"parking-lot\"}\n                                                                    onChange={date => this.setState({dueDate: date})}\n                                                                    showTimeInput\n                                                                    isClearable\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({dueDate: date});\n\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    {/* Task project container */}\n                                                    <span className=\"task-project-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-list-ul\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, marginRight: 5, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Project select */}\n                                                        <Select \n                                                            options={this.props.datapack[1]}\n                                                            className='task-project'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            styles={{\n                                                                // Fixes the overlapping problem of the component\n                                                                menuPortal: provided => ({ ...provided, zIndex: \"99999 !important\" })\n                                                            }}\n                                                            menuPortalTarget={document.body}\n                                                            value={this.props.datapack[1].filter(option => option.value === this.state.project)}\n                                                            onChange={(e)=>{\n                                                                {/* :point up: filter for only options with this project and set that to be the value */}\n                                                                {/* Actually update the project */}\n                                                                this.props.gruntman.do(\"task.update__project\", { uid: this.props.uid, tid: this.props.tid, oldProject: this.state.project===\"\"?undefined:this.state.project, project: (e?e.value:\"\")})\n                                                                {/* And set the state, too! */}\n                                                                this.setState({project:(e?e.value:\"\")});\n                                                            }}\n                                                        />\n                                                    </span>\n                                                    {/* Task tag container */}\n                                                    <span className=\"task-tag-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Tag select */}\n                                                        <CreatableSelect\n                                                            options={this.props.datapack[0]}\n                                                            className='task-tag'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            isMulti\n                                                            styles={{ menuPortal: base => ({ ...base, zIndex: \"99999 !important\" }) }}\n                                                            menuPortalTarget={document.body}\n                                                            value={this.props.datapack[0].filter(option => this.state.tags.includes(option.value))}\n                                                            onChange={(newValue, actionMeta) => {\n                                                                let view = this;\n                                                                let tids = newValue?newValue.map(async function (e) { // for each tag\n                                                                    if (e.__isNew__) { // if it's a new tag\n                                                                        let tagID = (await view.props.gruntman.do( // create it!\n                                                                            \"tag.create\",\n                                                                            {\n                                                                                uid: view.props.uid,\n                                                                                name: e.label,\n                                                                            }, \n                                                                        )).id;\n                                                                        let originalTags = view.state.possibleTags; // get tags\n                                                                        originalTags.push({label: e.label, value: tagID}); // add our new tag\n                                                                        view.setState({possibleTags: originalTags}); // sax-a-boom!\n                                                                        return tagID;\n                                                                    } else\n                                                                        return e.value;\n                                                                }):[]; // find the correct tags sets, or set it to an empty set\n                                                                Promise.all(tids).then(tagIDs => {\n                                                                    this.setState({tags: tagIDs}); // set the state\n                                                                    this.props.gruntman.do(\n                                                                        \"task.update\", \n                                                                        {\n                                                                            uid: this.props.uid, \n                                                                            tid: this.props.tid, \n                                                                            query:{tags: tagIDs} // set a taskID\n                                                                        }\n                                                                    )\n                                                                });\n                                                            }}\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </animated.div>\n                                        )\n                                })()}\n                            </animated.div>\n                        )}\n                    } \n                </AnimationFactory>\n            </div >\n\n\n        )\n    }\n}\n\nexport default Task;\n\n","//\"use strict\";\n\n// Initialize Firebase Application\n// TODO TODO TODO !!!! Change this on deploy\n\nlet storageType;\nlet sqliteDB;\nlet memoryDB;\nlet firebaseDB, fsRef;\nlet requestRefresh;\n\nconst { FilesystemDirectory, FilesystemEncoding, Plugins } = require('@capacitor/core');\nconst { Device, Filesystem } = Plugins;\n\nlet readiness;\n\nconst initStorage = (payload, ...features) => {\n /*   // Firebase App (the core Firebase SDK) is always required and*/\n    //// must be listed before other Firebase SDKs\n    // const firebase = require(\"firebase/app\");\n\n    let loaders = [];\n\n    if (features.includes(\"firebase\")) {\n        const obj = require(\"./../secrets.json\");\n        if (process.env.NODE_ENV === \"development\")\n            payload.firebase.initializeApp(obj.dbkeys.debug);\n        else if (process.env.NODE_ENV === \"production\")\n            payload.firebase.initializeApp(obj.dbkeys.deploy);\n        [ firebaseDB, fsRef ] = [payload.firebase.firestore(), payload.firebase.firestore];\n        firebaseDB.enablePersistence({synchronizeTabs: true}).catch(console.error);\n        loaders.push(new Promise(function(resolve) {\n            return resolve(fsRef);\n        }));\n    } \n\n    if (features.includes(\"sqlite\")) {\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        // TODO: TODO: SQLITE 3!!\n        //const sqlite3 = require('sqlite3').verbose();   // see https://www.sqlitetutorial.net/sqlite-nodejs/connect/\n        const { FilesystemDirectory, Plugins } = require('@capacitor/core');\n        const { Device } = Plugins;\n        loaders.push((async function() {\n            const isMobile = (await Device.getInfo()).platform !== \"web\";\n            const dbRoot = isMobile ? FilesystemDirectory.Data : process.resourcesPath;\n            const dbPath = '/condution.db'; // TODO: use capacitor storage api\n            //sqliteDB = new sqlite3.Database(dbRoot+dbPath, (e)=>{if(e) console.error(e)});\n            return sqliteDB;\n        })());\n    } \n\n    if (features.includes(\"json\")) {\n        loaders.push((async function() {\n            const dbRoot = FilesystemDirectory.Data;\n            const dbPath = 'condution.json'; // TODO: use capacitor storage api\n            let contents;\n            try {\n                contents = (await Filesystem.readFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    encoding: FilesystemEncoding.UTF8\n                })).data;\n            } catch(e) {\n                contents = \"{}\";\n                await Filesystem.writeFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    data: JSON.stringify({}),\n                    encoding: FilesystemEncoding.UTF8\n                })\n            }\n            //contents = `{\"users\":{\"hard-storage-user\":{\"projects\":{\"asenuoth239p8\":{\"name\":\"bontehu\",\"is_sequential\":false,\"order\":0,\"parent\":\"\",\"top_level\":true, \"children\": []}}}}}`;\n            memoryDB = JSON.parse(contents);\n        })());\n    }\n\n    readiness = Promise.all(loaders);\n    return readiness;\n};\n\nconst useDb = (db, refresher=()=>{}) => {\n    storageType = db;\n    requestRefresh = refresher; // generate fresh refresher\n    return readiness;\n};\n\nconst [cRef, flush] = (() => {\n    //const { Plugins } = require('@capacitor/core');\n    //const { Network } = Plugins;\n\n    let cache = new Map();\n    let unsubscribeCallbacks = new Map();\n\n\n    function flush() {\n        /*\n         * Nukes the cache\n         *\n         * Used to log people out\n         *\n         * @return none\n         *\n         */\n        cache = new Map();\n        unsubscribeCallbacks = new Map();\n    }\n\n    function getFirebaseRef(path) {\n        /*\n         * Get a database reference.\n         *\n         * @param   path        A valid path array, see below.\n         * @return  reference   The generated reference\n         *\n         * Examples of valid path arrays:\n         *  [`collection/${docName}`] => DocumentReference\n         *  [\"collection\", \"docName\"] => DocumentReference\n         *  [\"collection\", \"docName\", \"collection\"] => CollectionReference\n         *  [\"collection\", [\"query\", \"params\"], [\"more\", \"params\"]] => Query\n         *  [\"collection\", [\"query\", \"params\"], \"docname\"] => DocumentReference\n         */\n        let ref = firebaseDB;\n        // special handling for first collection from root\n        console.assert(typeof path[0] === 'string');\n        if (path[0].includes('/'))\n            ref = ref.collectionGroup(path[0]);\n        else\n            ref = ref.collection(path[0]);\n        // generic handling\n        for (let nav of path.slice(1)) {\n            if (typeof nav === 'string') {\n                if (ref instanceof fsRef.DocumentReference) {\n                    ref = ref.collection(nav);\n                } else if (ref instanceof fsRef.Query) {\n                    ref = ref.doc(nav);\n                } else {\n                    throw new Error(\"Unknown reference\", ref.toString());\n                }\n            } else if (Array.isArray(nav)) {                // query, TODO shouldn't need to query\n                if (ref instanceof fsRef.Query) {\n                    ref = ref.where(...nav);\n                } else {\n                    throw new Error(\"Cannot query with\", nav.toString());\n                }\n                console.assert(ref instanceof fsRef.Query)\n            } else {\n                throw new Error(\"Cannot parse\", nav.toString());\n            }\n        }\n        return ref;\n    }\n\n    function generateRandomString() {\n        /*\n         * Generates a random string. Used for Ids.\n         * THIS IS NOT CRYPTOGRAPHICALLY SECURE\n         *\n         * @return  string  The random string\n         *\n         */\n\n        return Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2);\n    }\n\n    async function cachedRead(path) {   // TODO: make this also use hard storage, dupe for cachedSet\n        /*\n         * Get a snapshot from the cache.\n         *\n         * @param   path    The valid path to the reference\n         * @return  any     The result of calling `.get()` on the database reference\n         *\n         * Logic:\n         *  If the path is cached, return from cache.\n         *  Else, register a snapshot listener to update the cache\n         *      and return the newly cached value.\n         */\n        const TODOstring = JSON.stringify(path);        //  strigify to hash array\n        if (!cache.has(TODOstring)) {                   //  if path string isn't cached\n            // TODO: comment this out someday \\/\n            const ref = getFirebaseRef(path);           //  get the reference from the database\n            cache.set(TODOstring, ref.get());           //  save result in cache\n            unsubscribeCallbacks.set(TODOstring,        //  TODO: comment this code, someday\n                ref.onSnapshot({\n                    error: console.trace,\n                    next: (snap) => {\n                        cache.set(TODOstring, snap);\n                        requestRefresh();\n                    }\n                })\n            );\n        }\n        return await cache.get(TODOstring);\n    }\n\n    let diskJSONDB = function() {\n        const dbRoot = FilesystemDirectory.Data;\n        const dbPath = 'condution.json'; // TODO: use capacitor storage api\n        let read = async function() {\n            let contents = (await Filesystem.readFile({\n                path: dbPath,\n                directory: dbRoot,\n                encoding: FilesystemEncoding.UTF8\n            })).data;\n            memoryDB = JSON.parse(contents);\n        }\n\n        let write = async function() {\n            await Filesystem.writeFile({\n                path: dbPath,\n                directory: dbRoot,\n                data: JSON.stringify(memoryDB),\n                encoding: FilesystemEncoding.UTF8\n            })\n        }\n\n        return {read, write};\n    }()\n\n    async function storageRead(path) { \n        /*\n         * Read value in storage\n         *\n         * @param   path    The path to a reference\n         * @return  DocumentSnapshot    A snapshot of documents\n         *\n         */\n\n\n        let pointer;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Get an object pointer that's an option that\n             * looks like a noSQL object.  See JSON implimentation \n             * for tips and tricks.\n             *\n             */\n\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.some(i => {\n                pointer = pointer[i];\n                return (pointer === undefined); // https://stackoverflow.com/questions/2641347/short-circuit-array-foreach-like-calling-break\n            });\n        }\n\n        let parsed = (function parsePointer(pointer) {\n            /*\n             * Parse a dbPointerObject\n             *\n             * @param    pointer   A Javascript Object containing data\n             * @return   DocumentSnapshot   A Firebase-like Doc Snapshot\n             *\n             * TODO: also make this work for single documents, not just collections\n             */\n\n            let docRefs = [];\n            for (const docID in pointer) \n                docRefs.push({id: docID, data: ()=>Object.assign({}, pointer[docID]), exists: true}); // TODO TODO Better way to make JS objects immutable?\n            return {docs: docRefs}\n        })(pointer)\n        return parsed;\n    }\n\n    async function storageAdd(path, payload) {\n        /* \n         * Add a value\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            id = generateRandomString();\n            while (pointer[id]) id = generateRandomString();\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[id] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageDel(path) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @return  none\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            delete pointer[task];\n            await diskJSONDB.write();\n        }\n    }\n\n    async function storageSet(path, payload) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[task] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageUpdate(path, payload) {\n        /* \n         * Object.assigns the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer = Object.assign(pointer, payload);\n            await diskJSONDB.write();\n        }\n        return Object.assign(payload, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n\n\n    //async function storageSet(path, value) {\n        /*\n         * Set a value in the storage.\n         *\n         * @param   path    The valid path to reference\n         * @param   value   The value to set it to\n         * @return  none\n         */\n    //    const TODOstring = JSON.stringify(path);    // stringify array, please change someday\n    //    // update storage\n    //    if (decideWhetherToUseHardStorage())\n    //\n    //    // maintain the cache\n    //    if (!cache.has(TODOstring)) {\n    //        cache.set();\n    //    }\n    //    const ref = getFirebaseRef(path);\n    //    ref.set(value);\n    //    cache.set(stringPath, value)\n    //}\n\n    function cacheRef(path) {\n        /*\n         * Get a reference wrapper that forces cache hits.\n         * This function will be exposed to the outside world.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(getFirebaseRef(path));\n        \n        \n        return Object.assign(\n            getFirebaseRef(path),               //  default methods from firebase reference\n            { get: () => cachedRead(path) }     //  read on get, read from cache if available\n        );\n    }\n    function TODO() { console.error('bad news bears'); }\n    function storageRef(path) {\n        /*\n         * Get a reference wrapper that acts as a database blackbox.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(ref.add, ref.doc, ref.docs);\n        return {\n            id: TODO,\n            add: (payload) => storageAdd(path, payload),\n            //doc: not here, right?,\n            //docs: not here, rgiht?, // TODO: docs.filter\n            get: () => storageRead(path),\n            set: (payload) => storageSet(path, payload),\n            update: (payload) => storageUpdate(path, payload),\n            delete: () => storageDel(path),\n        };\n    }\n\n    function dispatch(...path) {\n        /* \n         * Get the currently initialized storageRef\n         *\n         * @return  storageRef/CacheRef\n         *\n         */\n\n        switch (storageType) {\n            case \"firebase\":\n                return cacheRef(path);\n            default:\n                return storageRef(path);\n        }\n    }\n\n    return [dispatch, flush];\n})();\n\nexport default {__init__:initStorage, cRef, flush, useDb};\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport '../Calendar.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\n\nfunction CalendarPopover(props) {\n    let [dateSelected, setDateSelected] = useState(props.initialDate ? props.initialDate : new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    \n    let [heat, setHeat] = useState({});\n    \n \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    \n    useEffect(()=>{\n        (async function() {\n            let map = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([_, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n            });\n            let values = Array.from(map.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]=hexes[i]});\n            }\n            setHeat(hm);\n        })();\n    },[dateSelected, props.initialDate]);\n    return (\n        <IonModal ref={props.reference} isOpen={props.isShown} onDidDismiss={() => {if(props.onDidDismiss) props.onDidDismiss()}} style={{borderRadius: 5}} cssClass=\"calendar-popover\">\n            <div id=\"calendar-page-calendar-wrapper\" style={{display: \"inline-block\", ...props.style}}>\n                <div id=\"calendar-wrapper-popover\">\n                    <div id=\"calendar-daterow\">\n                        <span className=\"calendar-daterow-item\">Sun</span>\n                        <span className=\"calendar-daterow-item\">Mon</span>\n                        <span className=\"calendar-daterow-item\">Tues</span>\n                        <span className=\"calendar-daterow-item\">Wed</span>\n                        <span className=\"calendar-daterow-item\">Thu</span>\n                        <span className=\"calendar-daterow-item\">Fri</span>\n                        <span className=\"calendar-daterow-item\">Sat</span>\n                    </div>\n                    <div id=\"calendar-container\">\n                        {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                        <span className={`calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                            backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                                `#${heat[i.content]}` :\n                                \"inherit\"),\n                            border:  (i.type === \"actual\" && i.content === dateSelected.getDate()) ? \n                            \"2px solid var(--decorative-light)\" :\n                            \"0\"}} \n\n                            onClick={(e)=>{\n\n                                let date;\n                                if (i.type === \"pre\")\n                                    date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                                if (i.type === \"actual\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                                if (i.type === \"post\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                                setDateSelected(date);\n                                if (props.onDateSelected && !props.disableOnclick)\n                                    props.onDateSelected(date);\n                            }}>{i.content}</span>\n                        )}\n                    </div>\n                    <div id=\"calendar-infopanel\">\n                    <div className=\"calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                    <div className=\"calendar-infopanel-datename\">{dateSelected.toLocaleString('en-us', {  weekday: 'long' })}</div>\n                    <div className=\"calendar-infopanel-month\">{dateSelected.toLocaleString('en-us', { month: 'long' })}</div>\n                    <div className=\"calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                    </div>\n                    {(()=>{\n                        if (props.useTime)\n                            return <div className=\"calendar-timeunit\">   \n                                <span className=\"calendar-time\">\n                                    Time\n                                </span>\n                                <input\n                                    className=\"calendar-timebox\"\n                                    defaultValue={dateSelected.toLocaleTimeString()}\n                                    onKeyPress={e => {\n                                        // TIMEHANDLING is here. If you are searching for that, it's here.\n                                        // But anyway, on change, parse the time\n                                        let d = chrono.parseDate(e.target.value); //TODO bad?\n                                        // ...and throw away the date \n                                        if (d && e.key === \"Enter\") {\n                                            let newDate = new Date(dateSelected.getFullYear(), dateSelected.getMonth(), dateSelected.getDate(), d.getHours(), d.getMinutes(), d.getSeconds());\n                                            setDateSelected(newDate); // TODO make this with the onChange API\n                                            e.target.value = newDate.toLocaleTimeString();\n                                            if (props.onDateSelected && !props.disableOnclick)\n                                                props.onDateSelected(newDate);\n\n                                        }\n                                    }}\n                                />\n                            </div>\n                    })()}\n                    <div id=\"calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(new Date());\n\n                    }}>Today</div>\n                        <div className=\"calendar-today\" style={{marginRight: 10, float: \"right\"}} onClick={()=>{\n                            if (dateSelected)\n                                props.onDateSelected(dateSelected);\n                            props.onDidDismiss()\n                        }}>Done</div>\n                </div>\n                </div>\n            </div>\n        </IonModal>\n    )\n}\n\nfunction CalendarUnit(props) {\n    let [dateSelected, setDateSelected] = useState(props.initialDate ? props.initialDate : new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    \n    let [heat, setHeat] = useState({});\n    \n \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    \n    useEffect(()=>{\n        (async function() {\n            let map = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([_, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n            });\n            let values = Array.from(map.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]=hexes[i]});\n            }\n            setHeat(hm);\n        })();\n    },[dateSelected, props.initialDate]);\n    return (\n        <div id=\"calendar-page-calendar-wrapper\" style={{display: \"inline-block\", ...props.style}}>\n            <div id=\"calendar-wrapper-popover\">\n                <div id=\"calendar-daterow\">\n                    <span className=\"calendar-daterow-item\">Sun</span>\n                    <span className=\"calendar-daterow-item\">Mon</span>\n                    <span className=\"calendar-daterow-item\">Tues</span>\n                    <span className=\"calendar-daterow-item\">Wed</span>\n                    <span className=\"calendar-daterow-item\">Thu</span>\n                    <span className=\"calendar-daterow-item\">Fri</span>\n                    <span className=\"calendar-daterow-item\">Sat</span>\n                </div>\n                <div id=\"calendar-container\">\n                    {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                    <span className={`calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                        backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                            `#${heat[i.content]}` :\n                            \"inherit\"),\n                        border:  (i.type === \"actual\" && i.content === dateSelected.getDate()) ? \n                        \"2px solid var(--decorative-light)\" :\n                        \"0\"}} \n\n                        onClick={(e)=>{\n\n                            let date;\n                            if (i.type === \"pre\")\n                                date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                            if (i.type === \"actual\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                            if (i.type === \"post\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                            setDateSelected(date);\n                            if (props.onDateSelected && !props.disableOnclick)\n                                props.onDateSelected(date);\n                        }}>{i.content}</span>\n                    )}\n                </div>\n                <div id=\"calendar-infopanel\">\n                    <div className=\"calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                    <div className=\"calendar-infopanel-datename\">{dateSelected.toLocaleString('en-us', {  weekday: 'long' })}</div>\n                    <div className=\"calendar-infopanel-month\">{dateSelected.toLocaleString('en-us', { month: 'long' })}</div>\n                    <div className=\"calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                </div>\n                {(()=>{\n                    if (props.useTime)\n                        return <div className=\"calendar-timeunit\">   \n                            <span className=\"calendar-time\">\n                                Time\n                            </span>\n                            <input\n                                className=\"calendar-timebox\"\n                                defaultValue={dateSelected.toLocaleTimeString()}\n                                onKeyPress={e => {\n                                    // TIMEHANDLING is here. If you are searching for that, it's here.\n                                    // But anyway, on change, parse the time\n                                    let d = chrono.parseDate(e.target.value); //TODO bad?\n                                    // ...and throw away the date \n                                    if (d && e.key === \"Enter\") {\n                                        let newDate = new Date(dateSelected.getFullYear(), dateSelected.getMonth(), dateSelected.getDate(), d.getHours(), d.getMinutes(), d.getSeconds());\n                                        setDateSelected(newDate); // TODO make this with the onChange API\n                                        e.target.value = newDate.toLocaleTimeString();\n                                        if (props.onDateSelected && !props.disableOnclick)\n                                            props.onDateSelected(newDate);\n\n                                    }\n                                }}\n                            />\n                        </div>\n                })()}\n                <div id=\"calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(new Date());\n\n                    }}>Today</div>\n                    <div className=\"calendar-today\" style={{marginRight: 10, float: \"right\"}} onClick={()=>{\n                        if (dateSelected)\n                            props.onDateSelected(dateSelected);\n                        props.onDidDismiss()\n                    }}>Done</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\n\nexport default CalendarPopover;\nexport { CalendarUnit };\n\n"],"sourceRoot":""}