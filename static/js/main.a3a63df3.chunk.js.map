{"version":3,"sources":["pages/Components/Sortable.jsx","pages/Home.jsx","pages/Upcoming.jsx","pages/Calendar.jsx","pages/Components/CalendarTasklistPopover.jsx","pages/Completed.jsx","pages/Perspectives.jsx","pages/Components/PerspectiveEditor.jsx","pages/Projects.jsx","pages/Components/FloatingActionButton.jsx","pages/Components/QuickSwitcher.jsx","pages/Components/KeybindManager.jsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","backend/src/ObjectManager.js","backend/src/PerspectiveManager.js","backend/CondutionEngine.js","gruntman.js","pages/Auth.jsx","pages/Loader.jsx","pages/Onboarding.jsx","App.jsx","serviceWorker.ts","index.jsx","pages/Components/Repeat.jsx","pages/Components/TagEditor.jsx","pages/Components/Task.jsx","backend/src/DBManager.js","pages/Components/CalendarPopover.jsx"],"names":["SortableTaskList","props","useState","activelyDragging","setActivelyDragging","order","useRef","moveApplied","currentIndex","dragEnvelope","dragEnabled","setDragEnabled","objRefs","list","map","_","React","createRef","getAnimationDestinationFromIndex","activeIndex","mY","currentOrder","noAnim","down","indx","y","indexOf","zIndex","config","tension","friction","mass","clamp","immediate","useSprings","length","current","springs","set","useEffect","i","uid","bind","useDrag","a","args","index","movement","movementY","first","last","tap","includes","onSortStart","sorted","sortedID","moveBy","Math","floor","abs","newIndex","splice","setTimeout","filter","x","gruntman","do","items","type","content","onSortEnd","newOrder","drag","delay","filterTaps","enabled","id","anim","ref","e","div","className","style","borderRadius","position","cursor","transform","interpolate","onClickCapture","stopPropagation","tid","key","prefix","datapack","engine","availability","envelope","SortableProjectList","item","activeTaskID","activeTaskRef","opacity","onClick","paginate","history","push","display","possibleProjects","autoBind","require","isPlatform","createHashHistory","createBrowserHistory","Home","to","setState","itemSelected","state","projects","perspectives","undefined","abtibRef","menu","url","URL","document","uri","pathname","split","hash","this","refresh","prevProps","prevState","snapshot","sends","db","getTopLevelProjects","tlp","getPerspectives","psp","Router","IonReactHashRouter","IonReactRouter","keybindRef","abtib","noBounce","forceOverscroll","contentId","mode","window","navigator","platform","process","fontSize","icon","chevronForwardCircle","localizations","upcoming","checkmarkCircle","completed","calendar","close","npid","pid","f","paddingRight","name","proj","listOutline","dispatch","operation","logout","reference","render","exact","path","displayName","match","params","menuRefresh","options","create","Component","Upcoming","tomorrow","Date","setDate","getDate","greetings","greetings_setA","inbox","dueSoon","possibleTags","possibleProjectsRev","possibleTagsRev","projectSelects","tagSelects","projectDB","timeline","timelineShown","greeting","random","updatePrefix","registerRefresher","getItemAvailability","avail","getInboxandDS","pandt","getProjectsandTags","pPandT","projectList","tagsList","value","label","views","pdb","topLevels","getProjectStructure","buildSelectString","p","level","children","selectTasksInRange","prototype","isSameDateAs","pDate","getFullYear","getMonth","refrenceDate","tcontent","task","due","seconds","halt","toString","overflow","onTouchMove","preventDefault","marginLeft","color","toLocaleString","getLanguage","weekday","fontWeight","marginRight","overflowY","flexGrow","unsorted","ds","marginTop","hide","show","timelineItem","toLocaleDateString","year","month","day","paddingLeft","paddingTop","refreshed","CalPageBigOllendar","__util_calculate_gradient","left","right","gradientAmount","color1","color2","ratio","hex","r","ceil","parseInt","substring","g","b","dateSelected","setDateSelected","currentMonth","currentYear","firstDayMonth","lastDayMonth","lastDayLastMonth","firstDayDayname","getDay","daysBefore","Array","daysAfter","contentDays","heat","setHeat","isPopoverShown","setIsPopoverShown","shownList","setShownList","max","apply","Map","names","ids","hm","forEach","val","date","setHours","time","has","get","values","from","nameList","idList","getComputedStyle","body","hexes","getPropertyValue","trim","slice","keys","height","width","isShown","onDidDismiss","currentDate","backgroundColor","onDateSelected","marginBottom","clbtd","Calendar","today","taskList","popoverIsVisible","repeater","showEdit","endDate","effect","offset","top","isMobile","d","getTime","class","withGetScreen","mobileLimit","tabletLimit","shouldListenOnResize","CalendarTasklistPopover","refs","isOpen","cssClass","onModal","TaskObject","contents","Completed","tasksShown","taskCats","rendering","taskArr","getCompletedTasks","full","cat","startingCompleted","handleFetchMore","Perspectives","perspectiveName","perspectiveQuery","perspectiveAvail","perspectiveTord","possiblePerspectives","perspectiveObject","perspective","calc","query","tord","registerScheduler","payload","target","then","hideEdit","updateName","startHighlighted","onChange","persist","data-tip","borderColor","margin","handleDelete","withRouter","PerspectiveEdit","inputEvent","focus","console","log","alert","onWillPresent","lockUpdates","unlockUpdates","alignItems","whiteSpace","perspective_build_callout","defaultValue","minWidth","placeholder","handleQueryChange","perspective_include","interface","onIonChange","detail","psp_rem","psp_avil","psp_flg","perspective_order","psp_abd","psp_dbd","psp_abe","psp_dbe","psp_alpha","handleHelp","Projects","parent","is_sequential","currentProject","activeTask","cProject","parentProj","overflowX","result","_explode","nb_at","nb_ap","ABTIB","qa_content","isExpanded","setisExpanded","isSaving","setisSaving","useSpring","input","readOnly","onFocus","event","onBlur","onKeyUp","taskName","dateInfo","chrono","defer","end","start","replace","text","npobj","blur","QuickSwitcher","filteredList","direction","selected","prop_store","projs","searcher","currentlySelected","processItems","getProjs","subs","mod","Object","entries","setFocus","searchTerm","toLowerCase","o","keyname","selectedItem","filterItems","slicedSelectedItem","updateIdx","goBack","goForward","dismiss","idx","len","ctrlKey","scrollIntoView","behavior","block","qs_show","animated","autoFocus","onDidPresent","focusRef","spellcheck","debounce","onKeyDown","handleKeydown","Keybinds","bindings","sidebar_switcher","sidebar_list","sidebar_incrimentor","focusElement","globalBindings","manageQs","sidebar_index","that","num","loca","sidebarItem","arraysAreIdentical","arr1","arr2","combo","Mousetrap","bindGlobal","unbind","setSidebarIndex","webpackAsyncContext","req","__webpack_require__","Promise","resolve","Error","code","module","exports","cRef","dbManager","util","select","compare","lhs","cmp","rhs","TypeError","all","requirements","doc","dat","data","any","atLeast","threshold","counter","atMost","debug","arg","trace","userID","snap","docs","catch","err","error","getTasksWithQuery","taskDocs","getInboxTasks","sort","inboxDocs","getDSTasks","available","wrt","dsTime","getHours","isComplete","dsDocs","dueTasks","min","returnFull","tasks","avaliable","warn","ibt","dsTasks","prev","cache","dst","avalibility","dstWithoutIbt","getTaskInformation","taskID","paramName","ti","projectIdByName","projectNameById","projectsSorted","exists","top_level","projElem","sortOrder","ret","tags","tag","tagIdByName","tagNameById","pInfobyName","pInfobyID","ps","pstp","projectID","updateQuery","update","modifyTask","newTask","taskObj","project","ibtL","projL","add","newProject","projObj","size","obj","hasOwnProperty","newPerspective","pstObj","newTag","tagName","dissociateTask","dump","t","originalChildren","associateTask","assosProjID","willDissociateTask","taskData","delete","perspectiveID","deleteProject","struct","cpLtTasks","cpLt","concat","tagID","recursive","itemID","recursivelyGetBlocks","bstat","projStruct","child","assign","tlps","blockstatus","blocks","completedTasks","taskItems","tsk","cpSorted","taskA","taskB","completeDate","yesterday","thisWeek","thisMonth","setMonth","tasksToday","tsks","tasksYesterday","tasksWeek","tasksMonth","evenBefore","tz","username","desc","isFlagged","isFloating","timezone","repeat","rule","cdyrslf","npd","od","odid","dsID","nice","sequential","blocked","click","pspDir","pspsp","specific","sp","promotion","online","dis","patreon","yiipee","getTasks","removeParamFromTask","modifyProject","modifyPerspective","completeTask","associateProject","dissociateProject","deleteTask","deletePerspective","getDSRow","deleteTag","onBoard","getTags","perspectiveHandler","cgs","taskFilter","taskCaptureGroup","logicCaptureGroup","globalCaptureGroup","clear","lastIndex","parseTaskCaptureGroup","str","parseSpecialVariables","vr","compileTask","pPaT","additionalFilter","queries","taskCache","antiCache","dbObj","pS","compileLogicCaptureGroup","ltr","taskInfo","taskCompValues","util_datesequal","dateA","dateB","pStr","pRes","fquery","logicSort","exec","test","Set","flat","taskObjs","aval","it","dbRefObj","__init__","use","useDb","dbFuncs","pspObj","flush","parseFromTimeZone","LocalNotifications","Plugins","Permissions","Gruntman","notifPermissionGranted","requestPermission","granted","platforms","getPlatforms","addListener","handleNotificationAction","hashCode","s","reduce","charCodeAt","refresher","callbackRefresherReleased","conflictResolution","releaseTimeout","doers","macro","applyOrder","ntObject","Intl","DateTimeFormat","resolvedOptions","timeZone","ntID","tInfo","update__project","oldProject","update__uncomplete","update__complete","toISOString","rRule","defDistance","rOn","on","dow","oDow","setFullYear","message","TODO","update__name","projectName","update__pstate","associate","dissociate","pObj","npspid","update__perspective","delete__perspective","undoers","backlog","undolog","taskLog","canUndo","schedulers","updateLock","updateInterval","secretLocalizedStrings","clearTimeout","interval","title","schedule","notifications","at","sound","attachments","extra","action","notification","actionId","cancel","expectedID","getPending","pending","needed","callback","identifier","wait","actionName","bypassUpdates","isUndo","unsafe_FORCE_UPDATES","actionID","nodes","shift","resources","Auth","Storage","greetings_setB","authMode","showExtra","view","firebase","setPersistence","Persistence","LOCAL","signInWithEmailAndPassword","$","currentUser","emailVerified","service","addClass","problem","createUserWithEmailAndPassword","html","sendEmailVerification","updateProfile","reload","sendPasswordResetEmail","welcome_auth_msg","nowirres","greeting_auth_normal","autoComplete","what_should_we","email","password","onKeyPress","doLogin","doCreate","doRecover","dispatchCreate","need_and_do","need_verify","need_and_login","remembered","rec_pswd","login","newuser","lds","verifem","lerec","proceed","doLocal","ulac","Loader","justifyContent","maxWidth","Onboarding","setupConfig","swipeBackEnabled","App","LocalizedStrings","en","zh","de","matchMedia","matches","removeClass","Engine","dbType","onAuthStateChanged","user","requestRefresh","authDispatch","onboarding_content","signOut","isError","Boolean","location","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","Repeat","advanced","loadTask","repeat_word","repeat_every_day","repeat_every_week","repeat_every_month","repeat_every_year","float","repeat_datework_weekname_m","repeat_datework_weekname_tu","repeat_datework_weekname_w","repeat_datework_weekname_th","repeat_datework_weekname_f","repeat_datework_weekname_sa","repeat_datework_weekname_su","newOn","elem","oldOn","TagEditor","tagList","setTagState","border","AnimationFactory","Keyframes","Spring","taskHeight","taskMargin","taskBackground","taskPadding","taskEditOpacity","taskEditMaxHeight","taskOpacity","taskNameDecoration","taskPosition","taskDisplay","taskMaxHeight","reset","complete","Task","componentWillUnmount","removeEventListener","detectOutsideClick","toggleTask","expanded","deferDate","dueDate","decoration","showRepeat","showTagEditor","deferPopoverShown","duePopoverShown","haveBeenExpanded","startOpen","notificationPopoverShown","notificationCalendarShown","hasNotification","initialRenderDone","me","checkbox","TagEditorRef","actualCheck","duePopover","deferPopover","notificationPopover","notificationCalender","showTageEditor","nativeEvent","checkNotification","refreshDecorations","addEventListener","contains","closeTask","openTask","native","animatedProps","freeze","minHeight","maxHeight","background","padding","hideRepeat","defaultChecked","htmlFor","nt","textDecoration","CalendarPopover","disableOnclick","useTime","initialDate","cancelNotification","scheduleNotification","showBackdrop","showNotificationPopover","DateInput","TimeInput","getMinutes","getSeconds","portalId","showTimeInput","dateFormat","customTimeInput","customInput","isClearable","classNamePrefix","styles","menuPortal","provided","menuPortalTarget","option","isMulti","base","newValue","actionMeta","tids","__isNew__","originalTags","tagIDs","storageType","memoryDB","firebaseDB","fsRef","readiness","FilesystemDirectory","FilesystemEncoding","Filesystem","Device","unsubscribeCallbacks","getFirebaseRef","assert","collectionGroup","collection","nav","DocumentReference","Query","isArray","where","generateRandomString","TODOstring","JSON","stringify","onSnapshot","next","diskJSONDB","dbRoot","Data","read","readFile","directory","encoding","UTF8","parse","write","writeFile","pointer","some","parsed","docRefs","docID","round","pop","cacheRef","cachedRead","storageRef","storageAdd","storageRead","storageSet","storageUpdate","storageDel","loaders","features","initializeApp","dbkeys","deploy","firestore","enablePersistence","synchronizeTabs","getInfo","resourcesPath","sqliteDB","dbPath","CalendarUnit","toLocaleTimeString","newDate"],"mappings":"yQA4BMA,EAAmB,SAACC,GAEtB,IAF8B,EAIkBC,mBAAS,IAJ3B,mBAIvBC,EAJuB,KAILC,EAJK,KAMxBC,EAAQC,mBACRC,EAAcD,mBACdE,EAAeF,mBACfG,EAAeH,mBATS,EAUQJ,oBAAS,GAVjB,mBAUvBQ,EAVuB,KAUVC,EAVU,KAa1BC,EAAUX,EAAMY,KAAKC,KAAI,SAAAC,GAAC,OAAIC,IAAMC,eAElCC,EAAmC,SAACC,EAAaC,EAAIC,EAAcC,EAAQC,GAAxC,OAAiD,SAACC,GACvF,OAAOL,IAAgBK,EAAQ,CACvBC,EAfO,MAe8B,IAAhCJ,EAAaK,QAAQF,GAAeH,EAAaK,QAAQF,GAAQA,GAAMA,IAAoBD,EAAOH,EAfhG,IAeqGC,EAAaK,QAAQF,GAAMA,GAAkB,GACzJG,OAAO,IACPC,OAAQ,CAACC,QAAS,IAAKC,SAAU,EAAGC,KAAM,EAAGC,OAAO,GACxDC,UAAUX,GACV,CACIG,EApBO,MAoB8B,IAAhCJ,EAAaK,QAAQF,GAAeH,EAAaK,QAAQF,GAAQA,GAAMA,GAC5EG,OAAO,EACXM,UAAUX,KAxBY,EA8BDY,YAAWjC,EAAMY,KAAKsB,OAAQjB,GAAkC,EAAG,EAAGb,EAAM+B,SAAS,IA9BpF,mBA8BvBC,EA9BuB,KA8BdC,EA9Bc,UAiC9BC,qBAAU,WACNlC,EAAM+B,QAAUnC,EAAMY,KAAKC,KAAI,SAACC,EAAGyB,GAAJ,OAAQA,KACvCjC,EAAY6B,QAAU,EACtB5B,EAAa4B,QAAU,EACvBE,EAAIpB,GAAkC,EAAG,EAAGb,EAAM+B,SAAS,MAC5D,CAACnC,EAAMY,KAAMZ,EAAMwC,MAGtB,IAAMC,EAAOC,YAAS,uCAAC,6CAAAC,EAAA,yEAAkBC,KAAlB,GAAyBC,EAAzB,KAAiCvB,EAAjC,EAAiCA,KAAjC,gBAAuCwB,SAAvC,QAAqDC,EAArD,KAAkEC,EAAlE,EAAkEA,MAAOC,EAAzE,EAAyEA,KAAzE,EAA+EC,IAE9FF,IACAzC,EAAa4B,QAAUU,EAElB3C,EAAiBiD,SAASN,IAC3B1C,EAAoB,GAAD,mBAAKD,GAAL,CAAuB2C,KAE1C7C,EAAMoD,aACNpD,EAAMoD,YAAY,CAACC,OAAQR,EAAOS,SAAUtD,EAAMY,KAAKiC,GAAQjC,KAAMZ,EAAMY,QAInF2C,GADIA,EAASC,KAAKC,MAAMV,EAnDT,OAoDKF,GAASA,EAASU,GAAWvD,EAAMY,KAAKsB,OAAOW,EAAS7C,EAAMY,KAAKsB,OAAO,EAAIqB,EAE9FC,KAAKE,IAAIH,GAAU,GAAKA,IAASjD,EAAY6B,UAEzCwB,EAAWd,EAAMU,EACrBnD,EAAM+B,QAAQyB,OAAOrD,EAAa4B,QAAS,GAC3C/B,EAAM+B,QAAQyB,OAAOD,EAAU,EAAGd,GAClCvC,EAAY6B,QAAUoB,EACtBhD,EAAa4B,QAAUwB,GAIvBtB,EAAIpB,EAAiC4B,EAAOE,EAAW3C,EAAM+B,SAAS,EAAOb,KAK7E2B,EA9Be,wBA+BfY,YAAW,kBAAK1D,EAAoBD,EAAiB4D,QAAO,SAAAC,GAAC,OAAEA,IAAIlB,QAAS,KAC5EvC,EAAY6B,QAAU,EACtB5B,EAAa4B,QAAU,EAjCR,UAkCTnC,EAAMgE,SAASC,GACjB,mBAAoB,CAChBzB,IAAKxC,EAAMwC,IACXpC,MAAOA,EAAM+B,QACb+B,MAAOlE,EAAMY,KAAKC,KAAI,SAAA0B,GAAI,MAAO,CAAC4B,KAAK,OAAQC,QAAQ7B,QAtChD,QA0CXvC,EAAMqE,WACNrE,EAAMqE,UAAU,CAAChB,OAAQR,EAAOS,SAAUtD,EAAMY,KAAKiC,GAAQyB,SAAUlE,EAAM+B,QAASY,YAAWQ,SAAQ3C,KAAKZ,EAAMY,OA3CzG,4CAAD,sDAgDnB6B,U,GAAY,CAAC8B,KAAK,CAACC,MAAM,KAAMC,YAAY,EAAMC,QAASjE,IAE7D,OAAOT,EAAMY,KAAKC,KAAI,SAAC8D,EAAIpC,GACvB,IAAIqC,EAAOxC,EAAQG,GACnB,OACI,yBAAKsC,IAAK,SAACC,GAAKtE,EAAa2B,QAAQ2C,IACrC,kBAAC,IAASC,IAAV,iBACQtC,EAAKF,GADb,CAEIyC,UAAW9E,EAAiBiD,SAASZ,GAAK,yBAA2B,gBACrE0C,MAAO,CACHC,aAAc,EACdC,SAAU,WACVC,OAAQ,UACR1D,OAAQkD,EAAKlD,OACb2D,UAAWC,YAAY,CAACV,EAAKpD,IAAI,SAACA,GAAD,8BAAwBA,EAAxB,aAErC+D,eAAgB,SAACT,GACT5E,EAAiBiD,SAASZ,IAC1BuC,EAAEU,qBAIV,kBAAC,IAAD,CAAMX,IAAKlE,EAAQ4B,GAAIkD,IAAKd,EAAIe,IAAKf,EAAG,IAAI3E,EAAM2F,OAAQC,SAAU5F,EAAM4F,SAAUpD,IAAKxC,EAAMwC,IAAKqD,OAAQ7F,EAAM6F,OAAQ7B,SAAUhE,EAAMgE,SAAU8B,aAAc9F,EAAM8F,aAAanB,GAAKoB,SAAUvF,EAAcE,eAAgBA,UAO5OsF,EAAsB,SAAChG,GAEzB,IAFiC,EAIeC,mBAAS,IAJxB,mBAI1BC,EAJ0B,KAIRC,EAJQ,KAM3BC,EAAQC,mBACRC,EAAcD,mBACdE,EAAeF,mBACfG,EAAeH,mBATY,EAUKJ,oBAAS,GAVd,mBAU1BQ,EAV0B,KAUbC,EAVa,KAa7BC,EAAUX,EAAMY,KAAKC,KAAI,SAAAC,GAAC,OAAIC,IAAMC,eAElCC,EAAmC,SAACC,EAAaC,EAAIC,EAAcC,EAAQC,GAAxC,OAAiD,SAACC,GACvF,OAAOL,IAAgBK,EAAQ,CACvBC,EAfO,MAe8B,IAAhCJ,EAAaK,QAAQF,GAAeH,EAAaK,QAAQF,GAAQA,GAAMA,IAAoBD,EAAOH,EAfhG,IAeqGC,EAAaK,QAAQF,GAAMA,GAAkB,GACzJG,OAAO,IACPC,OAAQ,CAACC,QAAS,IAAKC,SAAU,EAAGC,KAAM,EAAGC,OAAO,GACxDC,UAAUX,GACV,CACIG,EApBO,MAoB8B,IAAhCJ,EAAaK,QAAQF,GAAeH,EAAaK,QAAQF,GAAQA,GAAMA,GAC5EG,OAAO,EACXM,UAAUX,KAxBe,EA8BJY,YAAWjC,EAAMY,KAAKsB,OAAQjB,GAAkC,EAAG,EAAGb,EAAM+B,SAAS,IA9BjF,mBA8B1BC,EA9B0B,KA8BjBC,EA9BiB,UAiCjCC,qBAAU,WACNlC,EAAM+B,QAAUnC,EAAMY,KAAKC,KAAI,SAACC,EAAGyB,GAAJ,OAAQA,KACvCjC,EAAY6B,QAAU,EACtB5B,EAAa4B,QAAU,EACvBE,EAAIpB,GAAkC,EAAG,EAAGb,EAAM+B,SAAS,MAC5D,CAACnC,EAAMY,KAAMZ,EAAMwC,MAGtB,IAAMC,EAAOC,YAAS,uCAAC,6CAAAC,EAAA,yEAAkBC,KAAlB,GAAyBC,EAAzB,KAAiCvB,EAAjC,EAAiCA,KAAjC,gBAAuCwB,SAAvC,QAAqDC,EAArD,KAAkEC,EAAlE,EAAkEA,MAAOC,EAAzE,EAAyEA,KAAzE,EAA+EC,IAE9FF,IACAzC,EAAa4B,QAAUU,EAElB3C,EAAiBiD,SAASN,IAC3B1C,EAAoB,GAAD,mBAAKD,GAAL,CAAuB2C,KAE1C7C,EAAMoD,aACNpD,EAAMoD,YAAY,CAACC,OAAQR,EAAOS,SAAUtD,EAAMY,KAAKiC,GAAQjC,KAAMZ,EAAMY,QAInF2C,GADIA,EAASC,KAAKC,MAAMV,EAnDT,OAoDKF,GAASA,EAASU,GAAWvD,EAAMY,KAAKsB,OAAOW,EAAS7C,EAAMY,KAAKsB,OAAO,EAAIqB,EAE9FC,KAAKE,IAAIH,GAAU,GAAKA,IAASjD,EAAY6B,UAEzCwB,EAAWd,EAAMU,EACrBnD,EAAM+B,QAAQyB,OAAOrD,EAAa4B,QAAS,GAC3C/B,EAAM+B,QAAQyB,OAAOD,EAAU,EAAGd,GAClCvC,EAAY6B,QAAUoB,EACtBhD,EAAa4B,QAAUwB,GAIvBtB,EAAIpB,EAAiC4B,EAAOE,EAAW3C,EAAM+B,SAAS,EAAOb,KAK7E2B,EA9Be,wBA+BfY,YAAW,kBAAK1D,EAAoBD,EAAiB4D,QAAO,SAAAC,GAAC,OAAEA,IAAIlB,QAAS,KAC5EvC,EAAY6B,QAAU,EACtB5B,EAAa4B,QAAU,EAjCR,UAkCTnC,EAAMgE,SAASC,GACjB,mBAAoB,CAChBzB,IAAKxC,EAAMwC,IACXpC,MAAOA,EAAM+B,QACb+B,MAAOlE,EAAMY,KAAKC,KAAI,SAAA0B,GAAI,MAAO,CAAC4B,KAAK5B,EAAE4B,KAAMC,QAAiB,YAAT7B,EAAE4B,KAAiB5B,EAAE6B,QAAQO,GAAGpC,EAAE6B,cAtClF,QA0CXpE,EAAMqE,WACNrE,EAAMqE,UAAU,CAAChB,OAAQR,EAAOS,SAAUtD,EAAMY,KAAKiC,GAAQyB,SAAUlE,EAAM+B,QAASY,YAAWQ,SAAQ3C,KAAKZ,EAAMY,OA3CzG,4CAAD,sDAgDnB6B,U,GAAY,CAAC8B,KAAK,CAACC,MAAM,KAAMC,YAAY,EAAMC,QAASjE,IAE7D,OAAOT,EAAMY,KAAKC,KAAI,SAACoF,EAAM1D,GACzB,IAAIqC,EAAOxC,EAAQG,GACnB,MAAkB,SAAd0D,EAAK9B,KAED,yBAAKU,IAAOrE,GACR,kBAAC,IAASuE,IAAV,iBACQtC,EAAKF,GADb,CAEIyC,UAAW9E,EAAiBiD,SAASZ,GAAK,yBAA2B,gBACrE0C,MAAO,CACHC,aAAc,EACdC,SAAU,WACVC,OAAQ,UACR1D,OAAQkD,EAAKlD,OACb2D,UAAWC,YAAY,CAACV,EAAKpD,IAAI,SAACA,GAAD,8BAAwBA,EAAxB,aAErC+D,eAAgB,SAACT,GACT5E,EAAiBiD,SAASZ,IAC1BuC,EAAEU,qBAIV,kBAAC,IAAD,CAAMX,IAAK7E,EAAMkG,eAAeD,EAAK7B,QAAUpE,EAAMmG,cAAgBxF,EAAQ4B,GAAIkD,IAAKQ,EAAK7B,QAASsB,IAAKO,EAAK7B,QAAQ,IAAIpE,EAAM2F,OAAQC,SAAU5F,EAAM4F,SAAUpD,IAAKxC,EAAMwC,IAAKqD,OAAQ7F,EAAM6F,OAAQ7B,SAAUhE,EAAMgE,SAAU8B,aAAc9F,EAAM8F,aAAaG,EAAK7B,SAAU2B,SAAUvF,EAAcE,eAAgBA,MAInT,YAAduF,EAAK9B,KAEV,yBAAKU,IAAKrE,GACN,kBAAC,IAASuE,IAAV,iBACQtC,EAAKF,GADb,CAEIyC,UAAW9E,EAAiBiD,SAASZ,GAAK,yBAA2B,gBACrE0C,MAAO,CACHC,aAAc,EACdC,SAAU,WACVC,OAAQ,UACR1D,OAAQkD,EAAKlD,OACb2D,UAAWC,YAAY,CAACV,EAAKpD,IAAI,SAACA,GAAD,8BAAwBA,EAAxB,aAErC+D,eAAgB,SAACT,GACT5E,EAAiBiD,SAASZ,IAC1BuC,EAAEU,qBAIV,uBAAGR,UAAU,aAAaC,MAAO,CAACmB,QAAQpG,EAAM8F,aAAaG,EAAK7B,QAAQO,IAAI,IAAI,QAAS0B,QAAS,WAAKrG,EAAMsG,SAAS,WAAYL,EAAK7B,QAAQO,IAAI3E,EAAMuG,QAAQC,KAAd,oBAAgCP,EAAK7B,QAAQO,OAAQ,6BAAK,uBAAGK,UAAU,kDAAiD,yBAAKC,MAAO,CAACwB,QAAS,iBAAkBzG,EAAM0G,iBAAiBT,EAAK7B,QAAQO,cAnBhW,O,8aCxOPgC,EAAWC,EAAQ,IACnBL,EAAUM,YAAW,YAAcC,cAAsBC,cAoBzDC,E,kDACF,WAAYhH,GAAQ,IAAD,8BACf,cAAMA,IAkBVsG,SAAW,SAACW,EAAItC,GAAL,OAAY,EAAKuC,SAAS,CAACC,aAAa,CAAClB,KAAKgB,EAAItC,SAhBzD,EAAKyC,MAAQ,CACTC,SAAS,GACTC,aAAa,GACbH,aAAa,CAAClB,KAAK,WAAYtB,QAAG4C,IAKtCZ,EAAS,gBAET,EAAKa,SAAWzG,IAAMC,YAEtB,EAAKyG,KAAO1G,IAAMC,YAfH,E,gEAwBf,IAAI0G,EAAO,IAAIC,IAAIC,SAASD,KACxBE,EAAMH,EAAII,SAASC,MAAM,KACzBC,EAAON,EAAIM,KAAKD,MAAM,KACX,KAAXF,EAAI,GACJI,KAAKf,SAAS,CAACC,aAAa,CAAClB,KAAK,WAAYtB,GAAG,MAC5CkC,YAAW,YAChBoB,KAAKf,SAAS,CAACC,aAAa,CAAClB,KAAK+B,EAAK,GAAIrD,GAAGqD,EAAK,MAEnDC,KAAKf,SAAS,CAACC,aAAa,CAAClB,KAAK4B,EAAI,GAAIlD,GAAGkD,EAAI,MAErDI,KAAKC,Y,yCAGUC,EAAWC,EAAWC,GACjCD,EAAUnB,KAAOgB,KAAKb,MAAMH,SAAwBM,IAAlBU,KAAKb,MAAMH,IAC5CgB,KAAKf,SAAS,CAACoB,MAAM,CAACrB,QAAGM,EAAW5C,QAAG4C,O,kKAM5BU,KAAKjI,MAAM6F,OAAO0C,GAAGC,oBAAoBP,KAAKjI,MAAMwC,K,cAAhEiG,E,gBACYR,KAAKjI,MAAM6F,OAAO0C,GAAGG,gBAAgBT,KAAKjI,MAAMwC,K,OAA5DmG,E,OAEJV,KAAKf,SAAS,CAACG,SAAUoB,EAAI,GAAInB,aAAaqB,EAAI,K,qIAM5C,IAAD,OACCC,EAAS/B,YAAW,YAAcgC,IAAqBC,IAC7D,OACI,kBAAC,IAAD,KAEI,kBAACF,EAAD,CAAQrC,QAASA,GAC3B,kBAAC,IAAD,CACHD,SAAU2B,KAAK3B,SACfzB,IAAKoD,KAAKc,WACVzB,aAAcW,KAAKb,MAAME,aACzBD,SAAUY,KAAKb,MAAMC,SACrB2B,MAAOf,KAAKT,SACZ3B,OAAQoC,KAAKjI,MAAM6F,OACnBrD,IAAKyF,KAAKjI,MAAMwC,IAChBwB,SAAUiE,KAAKjI,MAAMgE,WAGJ,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAYiF,UAAQ,EAACC,iBAAiB,GAElC,kBAAC,IAAD,CAAcvE,GAAG,aAAawE,UAAU,OAAOC,KAAK,MAEhD,kBAAC,IAAD,CAASzE,GAAG,YAAYwE,UAAU,OAAOtE,IAAKoD,KAAKR,MAC/C,6BACA,kBAAC,IAAD,CAAY9C,GAAG,eAAeK,UACrB6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,UAUX,kBAAC,IAAD,CAAMtC,GAAG,YAAYZ,QAAS,kBAAI,EAAKa,SAAS,CAACC,aAAa,CAAClB,KAAK,WAAYtB,QAAG4C,OAAnF,IAEI,yBAAKvC,UAAW,cAA+C,aAAjCiD,KAAKb,MAAMD,aAAalB,KAAsB,qBAAuB,IAAKhB,MAAO,CAACwE,SAAU,KAAK,kBAAC,IAAD,CAASxE,MAAO,CAACwE,SAAU,IAAKC,KAAMC,MAAyB1B,KAAKjI,MAAM4J,cAAcC,WAI3N,kBAAC,IAAD,CAAM5C,GAAG,aAAaZ,QAAS,kBAAI,EAAKa,SAAS,CAACC,aAAa,CAAClB,KAAK,YAAatB,QAAG4C,OAArF,IAEI,yBAAKvC,UAAW,cAA+C,cAAjCiD,KAAKb,MAAMD,aAAalB,KAAuB,qBAAuB,IAAKhB,MAAO,CAACwE,SAAU,KAAK,kBAAC,IAAD,CAASxE,MAAO,CAACwE,SAAU,GAAIpE,UAAW,qBAAsBqE,KAAMI,MAAoB7B,KAAKjI,MAAM4J,cAAcG,YAIvP,kBAAC,IAAD,CAAM9C,GAAG,YAAYZ,QAAS,kBAAI,EAAKa,SAAS,CAACC,aAAa,CAAClB,KAAK,WAAYtB,QAAG4C,OAAnF,IAEI,yBAAKvC,UAAW,cAA+C,aAAjCiD,KAAKb,MAAMD,aAAalB,KAAsB,qBAAuB,IAAKhB,MAAO,CAACwE,SAAU,KAAK,kBAAC,IAAD,CAASxE,MAAO,CAACwE,SAAU,GAAIpE,UAAW,qBAAsBqE,KAAMM,MAAa/B,KAAKjI,MAAM4J,cAAcI,WAI/O,yBAAKhF,UAAU,iCAAiCiD,KAAKjI,MAAM4J,cAActC,aAAzE,IAAuF,uBAAGjB,QAAS,WAC3F,EAAKoB,KAAKtF,SACV,EAAKsF,KAAKtF,QAAQ8H,QACd,sBAAC,4BAAAtH,EAAA,sEACasF,KAAKjI,MAAMgE,SAASC,GAClC,qBAAsB,CAClBzB,IAAKyF,KAAKjI,MAAMwC,MAHnB,OACD0H,EADC,OAKFC,IACH5D,EAAQC,KAAR,wBAA8B0D,EAA9B,QACAjC,KAAK3B,SAAS,eAAgB4D,GAC9BjC,KAAKC,UARA,gDASNzF,KAAK,EACR2H,IAEDpF,UAAU,oBAGZiD,KAAKb,MAAME,aAAazG,KAAI,SAAC8H,GAC1B,OACI,kBAAC,IAAD,CAAMjD,IAAKiD,EAAIhE,GAAIsC,GAAE,wBAAmB0B,EAAIhE,IAAM0B,QAAS,kBAAI,EAAKa,SAAS,CAACC,aAAa,CAAClB,KAAK,eAAgBtB,GAAGgE,EAAIhE,QAAxH,IAEI,yBAAKK,UAAW,cAA+C,iBAAjC,EAAKoC,MAAMD,aAAalB,MAA2B,EAAKmB,MAAMD,aAAaxC,KAAOgE,EAAIhE,GAAK,qBAAuB,KAAK,uBAAGK,UAAU,qBAAqBC,MAAO,CAACoF,aAAc,KAA7M,IAAuN1B,EAAI2B,UAOvO,yBAAKtF,UAAU,iCAAiCiD,KAAKjI,MAAM4J,cAAcvC,SAAS,uBAAGhB,QAAS,WACtF,EAAKoB,KAAKtF,SACV,EAAKsF,KAAKtF,QAAQ8H,QACd,sBAAC,4BAAAtH,EAAA,sEACasF,KAAKjI,MAAMgE,SAASC,GAClC,iBAAkB,CACdzB,IAAKyF,KAAKjI,MAAMwC,MAHnB,OACD0H,EADC,OAKFC,IACH5D,EAAQC,KAAR,oBAA0B0D,EAA1B,QACAjC,KAAK3B,SAAS,WAAY4D,GAC1BjC,KAAKC,UARA,gDASNzF,KAAK,EACR2H,IAEDpF,UAAU,oBAEZiD,KAAKb,MAAMC,SAASxG,KAAI,SAAC0J,GACtB,OACI,kBAAC,IAAD,CAAM7E,IAAK6E,EAAK5F,GAAIsC,GAAE,oBAAesD,EAAK5F,IAAM0B,QAAS,kBAAI,EAAKa,SAAS,CAACC,aAAa,CAAClB,KAAK,WAAYtB,GAAG4F,EAAK5F,QAAnH,IAEI,yBAAKK,UAAW,cAA+C,aAAjC,EAAKoC,MAAMD,aAAalB,MAAuB,EAAKmB,MAAMD,aAAaxC,KAAO4F,EAAK5F,GAAK,qBAAuB,KAAK,kBAAC,IAAD,CAAS+E,KAAMc,MAAeD,EAAKD,WAOrM,yBAAKtF,UAAU,YAAYL,GAAG,SAAS0B,QAAS,WAAKE,EAAQC,KAAR,KAAkB,EAAKxG,MAAMyK,SAAS,CAACC,UAAW,aAAa,uBAAG1F,UAAU,sBAAsBC,MAAO,CAACoF,aAAc,KAAOpC,KAAKjI,MAAM4J,cAAce,SAEjN,kBAAC,IAAD,CAAShG,GAAG,QAER,kBAAC,IAAD,CAAOiG,UAAW3C,KAAKT,SAAUhF,IAAKyF,KAAKjI,MAAMwC,IAAKwB,SAAUiE,KAAKjI,MAAMgE,SAAU4F,cAAe3B,KAAKjI,MAAM4J,gBAE/G,yBAAKjF,GAAG,gBAER,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOkG,OAAQ,kBAAM,kBAAC,IAAD,CAAU5D,GAAG,iBAElC,kBAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,IAAIF,OAAQ,kBAAM,kBAAC,IAAD,CAAU5D,GAAG,iBAEjD,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAO8D,KAAK,YAAYD,OAAK,EAACD,OAAQ,kBAAI,kBAAC,IAAD,CAAUhF,OAAQ,EAAK7F,MAAM6F,OAAQrD,IAAK,EAAKxC,MAAMwC,IAAKwB,SAAU,EAAKhE,MAAMgE,SAAUgH,YAAa,EAAKhL,MAAMgL,YAAapB,cAAe,EAAK5J,MAAM4J,mBAElM,kBAAC,IAAD,CAAOmB,KAAK,YAAYD,OAAK,EAACD,OAAQ,kBAAI,kBAAC,IAAD,CAAUhF,OAAQ,EAAK7F,MAAM6F,OAAQrD,IAAK,EAAKxC,MAAMwC,IAAKwB,SAAU,EAAKhE,MAAMgE,YAAc4F,cAAe3B,KAAKjI,MAAM4J,gBAGjK,kBAAC,IAAD,CAAOmB,KAAK,aAAaD,OAAK,EAACD,OAAQ,kBAAI,kBAAC,IAAD,CAAWhF,OAAQ,EAAK7F,MAAM6F,OAAQrD,IAAK,EAAKxC,MAAMwC,IAAKwB,SAAU,EAAKhE,MAAMgE,SAAU4F,cAAe,EAAK5J,MAAM4J,mBAG/J,kBAAC,IAAD,CAAOmB,KAAK,6BAA6BF,OAAQ,gBAAEI,EAAF,EAAEA,MAAF,OAAW,kBAAC,IAAD,CAAcpF,OAAQ,EAAK7F,MAAM6F,OAAQS,SAAU,EAAKA,SAAU3B,GAAIsG,EAAMC,OAAOvG,GAAInC,IAAK,EAAKxC,MAAMwC,IAAMwB,SAAU,EAAKhE,MAAMgE,SAAWmH,YAAa,EAAKjD,QAAUkD,QAASH,EAAMC,OAAOG,OAAQzB,cAAe,EAAK5J,MAAM4J,mBAG7R,kBAAC,IAAD,CAAOmB,KAAK,yBAAyBF,OAAQ,gBAAEI,EAAF,EAAEA,MAAF,OAAW,kBAAC,IAAD,CAAUpF,OAAQ,EAAK7F,MAAM6F,OAAQlB,GAAIsG,EAAMC,OAAOvG,GAAInC,IAAK,EAAKxC,MAAMwC,IAAMwB,SAAU,EAAKhE,MAAMgE,SAAWmH,YAAa,EAAKjD,QAAS5B,SAAU,EAAKA,SAAU8E,QAASH,EAAMC,OAAOG,OAAQzB,cAAe,EAAK5J,MAAM4J,8B,GAlMzS0B,aA+MJtE,Q,gMCxPTL,EAAWC,EAAQ,IAoBnB2E,E,kDACF,WAAYvL,GAAQ,IAAD,sBACf,cAAMA,GAEN,IAAIwL,EAAW,IAAIC,KACnBD,EAASE,QAAQF,EAASG,UAAU,GAEpC,IAAIC,EAAY,EAAK5L,MAAM4J,cAAciC,eAN1B,OAQf,EAAKzE,MAAQ,CACT0E,MAAO,GACPC,QAAS,GACTrF,iBAAiB,GACjBsF,aAAa,GACbC,oBAAoB,GACpBC,gBAAgB,GAChBpG,aAAc,GACdqG,eAAe,GACfC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,eAAe,EACfC,SAAUZ,EAAUpI,KAAKC,MAAMD,KAAKiJ,SAAWb,EAAU1J,UAG7D,EAAKwK,aAAe,EAAKD,SAEzB,EAAKzM,MAAMgE,SAAS2I,kBAAmB,EAAKzE,QAASzF,KAAd,iBAEvCkE,EAAS,gBA5BM,E,oNAgCGsB,KAAKjI,MAAM6F,OAAO0C,GAAGqE,oBAAoB3E,KAAKjI,MAAMwC,K,cAAlEqK,E,gBACc5E,KAAKjI,MAAM6F,OAAO0C,GAAGuE,cAAc7E,KAAKjI,MAAMwC,IAAKqK,G,cAAjEE,E,gBACe9E,KAAKjI,MAAM6F,OAAO0C,GAAGyE,mBAAmB/E,KAAKjI,MAAMwC,K,OAMtE,IAAS2H,KANL8C,E,OAGAC,EAAc,GACdC,EAAW,GAECF,EAAO,GAAG,GACtBE,EAAS3G,KAAK,CAAC4G,MAAOjD,EAAKkD,MAAOJ,EAAO,GAAG,GAAG9C,K,OAC/CmD,EAAQrF,K,UACW,cAAAtF,EAAA,sCAAAA,EAAA,6DACf4K,EAAM,GADS,SAEID,EAAMtN,MAAM6F,OAAO0C,GAAGC,oBAAoB8E,EAAMtN,MAAMwC,KAF1D,OAEfgL,EAFe,OAEgE,GAFhE,OAAA7K,EAAA,KAGH6K,GAHG,qDAGV9H,EAHU,gBAIf6H,EAJe,UAIAD,EAAMtN,MAAM6F,OAAO0C,GAAGkF,oBAAoBH,EAAMtN,MAAMwC,IAAKkD,GAAK,GAJhE,yBAIXc,KAJW,gEAMZ+G,GANY,8C,eAAnBlB,E,OASAqB,EAAoB,SAApBA,EAA6BC,EAAGC,GAIhC,GAHKA,IACDA,EAAQ,IACZV,EAAY1G,KAAK,CAAC4G,MAAOO,EAAEhJ,GAAI0I,MAAOO,EAAMX,EAAO,GAAG,GAAGU,EAAEhJ,MACvDgJ,EAAEE,SAAN,qBACkBF,EAAEE,UADpB,IACI,gCAAS/I,EAAT,QACmB,YAAXA,EAAEX,MACFuJ,EAAkB5I,EAAEV,QAASwJ,EAAM,QAH/C,iCAKJvB,EAAUxL,KAAI,SAAA0J,GAAI,OAAEmD,EAAkBnD,MAEtCtC,KAAKyE,aAAezE,KAAKwE,S,UAEJxE,KAAKjI,MAAM6F,OAAO0C,GAAGuF,mBAAmB7F,KAAKjI,MAAMwC,IAAK,IAAIiJ,KAAQ,IAAIA,KAAK,KAAM,EAAG,IAAI,G,QAQ/Ga,GARIA,E,QAQgBxI,QAAO,SAACC,GAAD,OAAMgJ,EAAM,GAAG5J,SAASY,EAAE,OACrD0H,KAAKsC,UAAUC,aAAe,SAASC,GACrC,OACEhG,KAAKiG,gBAAkBD,EAAMC,eAC7BjG,KAAKkG,aAAeF,EAAME,YAC1BlG,KAAK0D,YAAcsC,EAAMtC,WAIzByC,EAAe,IAAI3C,KACnB4C,EAAW,G,cACE/B,G,IAAjB,2BAASgC,EAAkB,SACnBC,EAAM,IAAI9C,KAAyB,IAApB6C,EAAK,GAAGC,IAAIC,UACtBR,aAAaI,KAClBC,EAAS7H,KAAK,CAACrC,KAAK,QAASC,QAASmK,IACtCH,EAAeG,GAEnBF,EAAS7H,KAAK,CAACrC,KAAK,OAAQC,QAASkK,EAAK,K,8BAG9CrG,KAAKf,SAAS,CAAC4E,MAAOiB,EAAM,GAAIhB,QAASgB,EAAM,GAAIrG,iBAAkBuG,EAAO,GAAG,GAAIjB,aAAciB,EAAO,GAAG,GAAIhB,oBAAqBgB,EAAO,GAAG,GAAIf,gBAAiBe,EAAO,GAAG,GAAInH,aAAc+G,EAAOV,eAAgBe,EAAad,WAAYe,EAAUd,YAAWC,SAAU+B,I,iJAI9QpG,KAAKC,Y,6CAcLD,KAAKjI,MAAMgE,SAASyK,S,+BAGb,OAA2B,OAAjB,EAAEjL,KAAKiJ,UAAmB,GAAGiC,SAAS,IAAI,KAAwB,OAAjB,EAAElL,KAAKiJ,UAAmB,GAAGiC,SAAS,M,+BAGlG,IAAD,OAEL,OACI,kBAAC,IAAD,KACI,yBAAKzJ,MAAO,CAAC0J,SAAU,WAEnB,yBAAK3J,UAAW,oBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WAFf,QAUA,yBAAKvE,UAAW,iBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WAQX,yBAAKvE,UAAU,mBAAmB4J,YAAa,SAAC9J,GAAD,OAAKA,EAAE+J,mBAClD,yBAAK5J,MAAO,CAACwB,QAAS,iBAClB,kBAAC,IAAD,KAAe,uBAAGzB,UAAU,cAAcC,MAAO,CAAC6J,WAAY,GAAIC,MAAO,kCAD7E,IACgI,wBAAI/J,UAAU,cAAa,uBAAGC,MAAO,CAACoF,aAAc,IAAKrF,UAAU,gCAAmCiD,KAAKjI,MAAM4J,cAAcC,UAG/P,yBAAK7E,UAAU,uBACX,yBAAKC,MAAO,CAACwB,QAAS,gBAAiBzB,UAAU,kBAAkB,IAAIyG,MAAQE,WAC/E,yBAAK1G,MAAO,CAACwB,QAAS,gBAAiBzB,UAAU,sBAAqB,IAAIyG,MAAOuD,eAAe/G,KAAKjI,MAAM4J,cAAcqF,cAAe,CAAGC,QAAS,WAKpJ,yBAAKlK,UAAU,sBAAqB,0BAAML,GAAG,YAAYsD,KAAKb,MAAMoF,UAApE,IAAqF,0BAAM7H,GAAG,gBAAgBM,MAAO,CAACkK,WAAY,MAAOlH,KAAKjI,MAAMgL,gBAG5J,yBAAK/F,MAAO,CAAC6J,WAAY,GAAIM,YAAa,GAAIC,UAAW,SAAUC,SAAU,IACzE,6BACM,WACE,GAAI,EAAKlI,MAAM0E,MAAM5J,OAAS,EAC1B,OAAO,yBAAK8C,UAAU,cAAc,EAAKhF,MAAM4J,cAAc2F,SAAS,kBAAC,IAAD,CAAUvK,UAAU,eAAe,EAAKoC,MAAM0E,MAAM5J,SAFhI,GAIF,kBAAC,IAAD,CAAkBtB,KAAMqH,KAAKb,MAAM0E,MAAOnG,OAAQsC,KAAKyE,aAAclK,IAAKyF,KAAKjI,MAAMwC,IAAKqD,OAAQoC,KAAKjI,MAAM6F,OAAQ7B,SAAUiE,KAAKjI,MAAMgE,SAAU8B,aAAcmC,KAAKb,MAAMtB,aAAcF,SAAU,CAACqC,KAAKb,MAAMgF,WAAYnE,KAAKb,MAAM+E,eAAgBlE,KAAKb,MAAMV,iBAAkBuB,KAAKb,MAAM6E,oBAAqBhE,KAAKb,MAAM4E,aAAc/D,KAAKb,MAAM8E,oBAE7V,6BACM,WACE,GAAI,EAAK9E,MAAM2E,QAAQ7J,OAAS,EAC5B,OAAO,yBAAK8C,UAAU,cAAc,EAAKhF,MAAM4J,cAAc4F,GAAG,kBAAC,IAAD,CAAUxK,UAAU,eAAe,EAAKoC,MAAM2E,QAAQ7J,SAF5H,GAID+F,KAAKb,MAAM2E,QAAQlL,KAAI,SAAA8D,GAAE,OACtB,kBAAC,IAAD,CAAMc,IAAKd,EAAIe,IAAKf,EAAG,IAAI,EAAK+H,aAAclK,IAAK,EAAKxC,MAAMwC,IAAKqD,OAAQ,EAAK7F,MAAM6F,OAAQ7B,SAAU,EAAKhE,MAAMgE,SAAU8B,aAAc,EAAKsB,MAAMtB,aAAanB,GAAKiB,SAAU,CAAC,EAAKwB,MAAMgF,WAAY,EAAKhF,MAAM+E,eAAgB,EAAK/E,MAAMV,iBAAkB,EAAKU,MAAM6E,oBAAqB,EAAK7E,MAAM4E,aAAc,EAAK5E,MAAM8E,uBAG9U,6BACI,yBAAKlH,UAAU,mBACX,uBACIqB,QAAS,kBACD,EAAKa,SAAS,CAACqF,eAAgB,EAAKnF,MAAMmF,iBAGlDtH,MAAO,CACH6J,WAAY,GACZW,UAAW,GACXhJ,QAAS,eACT0I,WAAY,IACZ1F,SAAU,GAEVrE,OAAQ,YAEZ,uBACIJ,UAAU,uBACVC,MAAO,CAACoF,aAAc,KAhB9B,IAiBWpC,KAAKb,MAAMmF,cAAetE,KAAKjI,MAAM4J,cAAc8F,KAAOzH,KAAKjI,MAAM4J,cAAc+F,KAjB9F,IAiBqG1H,KAAKjI,MAAM4J,cAAc0C,WAG7H,WACG,GAAI,EAAKlF,MAAMmF,cACX,OAAO,EAAKnF,MAAMkF,SAASzL,KAAI,SAAA+O,GAC3B,MAA0B,SAAtBA,EAAazL,KACN,kBAAC,IAAD,CAAMsB,IAAKmK,EAAaxL,QAASsB,IAAKkK,EAAaxL,QAAQ,IAAI,EAAKsI,aAAclK,IAAK,EAAKxC,MAAMwC,IAAKqD,OAAQ,EAAK7F,MAAM6F,OAAQ7B,SAAU,EAAKhE,MAAMgE,SAAU8B,aAAc,EAAKsB,MAAMtB,aAAa8J,EAAaxL,SAAUwB,SAAU,CAAC,EAAKwB,MAAMgF,WAAY,EAAKhF,MAAM+E,eAAgB,EAAK/E,MAAMV,iBAAkB,EAAKU,MAAM6E,oBAAqB,EAAK7E,MAAM4E,aAAc,EAAK5E,MAAM8E,mBAChW,UAAtB0D,EAAazL,KACnB,yBAAKa,UAAU,gBAAe,yBAAKA,UAAU,2BAA0B,yBAAKA,UAAU,iBAAf,SAAiD,yBAAKA,UAAU,iBAAgB,0BAAMA,UAAU,qBAAqB4K,EAAaxL,QAAQyL,mBAAmB,EAAK7P,MAAM4J,cAAcqF,cAAe,CAAEC,QAAS,OAAQY,KAAM,UAAWC,MAAO,OAAQC,IAAK,oBADlU,KALxB,GAaA,WACO,GAAI,EAAK5I,MAAMmF,cACf,OAAO,0BAAMtH,MAAO,CAACwE,SAAU,EAAGsF,MAAM,kBAAmBkB,YAAY,GAAIC,WAAW,KAA/E,cAAgG1G,4CAF9G,IAMT,yBAAKxE,UAAU,iBAAf,gB,GAzNLsG,aAsORC,Q,iPCvPT5E,EAAWC,EAAQ,IA0BrBuJ,EAAY,EAEhB,SAASC,EAAmBpQ,GAExB,SAASqQ,EAA0BC,EAAMC,EAAOC,GAC5C,IAAIC,EAASH,EACTI,EAASH,EACTI,EAAQH,EACRI,EAAM,SAAS7M,GAEf,OAAoB,IADpBA,EAAIA,EAAE2K,SAAS,KACLxM,OAAe,IAAM6B,EAAIA,GAGnC8M,EAAIrN,KAAKsN,KAAKC,SAASN,EAAOO,UAAU,EAAE,GAAI,IAAML,EAAQI,SAASL,EAAOM,UAAU,EAAE,GAAI,KAAO,EAAEL,IACrGM,EAAIzN,KAAKsN,KAAKC,SAASN,EAAOO,UAAU,EAAE,GAAI,IAAML,EAAQI,SAASL,EAAOM,UAAU,EAAE,GAAI,KAAO,EAAEL,IACrGO,EAAI1N,KAAKsN,KAAKC,SAASN,EAAOO,UAAU,EAAE,GAAI,IAAML,EAAQI,SAASL,EAAOM,UAAU,EAAE,GAAI,KAAO,EAAEL,IAEzG,OAAOC,EAAIC,GAAKD,EAAIK,GAAKL,EAAIM,GAfF,MAkBOjR,mBAAS,IAAIwL,MAlBpB,mBAkB1B0F,EAlB0B,KAkBZC,EAlBY,KAoB3BC,EAAeF,EAAahD,WAC5BmD,EAAcH,EAAajD,cAE3BqD,EAAgB,IAAI9F,KAAK6F,EAAaD,EAAc,GACpDG,EAAe,IAAI/F,KAAK6F,EAAaD,EAAa,EAAG,GACrDI,EAAmB,IAAIhG,KAAK6F,EAAaD,EAAc,GAEvDK,EAAkBH,EAAcI,SAAS,EAEzCC,EAAa,YAAI,IAAIC,MAAMH,EAAgB,IAAI7Q,KAAI,SAACC,EAAGyB,GAAK,MAAO,CAAC4B,KAAM,MAAOC,QAAS7B,EAAEkP,EAAiB9F,WAAW+F,EAAgB,GAAG,MAE3II,EAAY,YAAI,IAAID,MAAO,EAAEL,EAAaG,YAAY,EAAG,EAAE,EAAEH,EAAaG,WAAW9Q,KAAI,SAACC,EAAGyB,GAAK,MAAO,CAAC4B,KAAK,OAAQC,QAAQ7B,EAAE,MAEjIwP,EAAc,YAAI,IAAIF,MAAML,EAAa7F,YAAY9K,KAAI,SAACC,EAAGyB,GAAK,MAAO,CAAC4B,KAAK,SAAUC,QAAQ7B,EAAE,MAjCxE,EAmCTtC,mBAAS,IAnCA,mBAmC1B+R,EAnC0B,KAmCpBC,EAnCoB,OAqCWhS,oBAAS,GArCpB,mBAqC1BiS,EArC0B,KAqCVC,EArCU,OAuCClS,mBAAS,IAvCV,mBAuC1BmS,EAvC0B,KAuCfC,EAvCe,KAyC/BR,MAAM9D,UAAUuE,IAAM,WAClB,OAAO9O,KAAK8O,IAAIC,MAAM,KAAMtK,OAGhC,IAAIC,EAAO,uCAAI,8CAAAvF,EAAA,6DACH9B,EAAM,IAAI2R,IACVC,EAAQ,IAAID,IACZE,EAAM,IAAIF,IACVG,EAAK,GAJF,SAKc3S,EAAM6F,OAAO0C,GAAGuF,mBAAmB9N,EAAMwC,IAAK+O,EAAeC,GAAc,GALzF,cAMEoB,SAAQ,YAAc,IAAD,mBAAXjO,EAAW,KAAPkO,EAAO,KACtBC,EAAO,IAAIrH,KAAqB,IAAhBoH,EAAItE,IAAIC,SAC5BsE,EAAKC,SAAS,EAAG,EAAG,EAAG,GACvB,IAAIC,EAAOF,EAAKnH,UACb9K,EAAIoS,IAAID,GACPnS,EAAIwB,IAAI2Q,EAAMnS,EAAIqS,IAAIF,GAAM,GAE5BnS,EAAIwB,IAAI2Q,EAAM,GACfP,EAAMQ,IAAID,GACTP,EAAMpQ,IAAI2Q,EAAV,sBAAoBP,EAAMS,IAAIF,IAA9B,CAAqCH,EAAIvI,QAEzCmI,EAAMpQ,IAAI2Q,EAAM,CAACH,EAAIvI,OACtBoI,EAAIO,IAAID,GACPN,EAAIrQ,IAAI2Q,EAAR,sBAAkBN,EAAIQ,IAAIF,IAA1B,CAAiCrO,KAEjC+N,EAAIrQ,IAAI2Q,EAAM,CAACrO,OAGnBwO,EAAStB,MAAMuB,KAAKvS,EAAIsS,UACxBE,EAAWxB,MAAMuB,KAAKX,EAAMU,UAC5BG,EAASzB,MAAMuB,KAAKV,EAAIS,UACxBA,EAAOjR,OAAS,IACZoQ,EAAMa,EAAOb,MACbrN,EAAQsO,iBAAiB3L,SAAS4L,MAClCC,EAAQN,EAAOtS,KAAI,SAAAiE,GAAC,OAAEuL,EAA0BpL,EAAMyO,iBAAiB,qBAAqBC,OAAOC,MAAM,GAAI3O,EAAMyO,iBAAiB,sBAAsBC,OAAOC,MAAM,GAAI9O,EAAEwN,MACjLT,MAAMuB,KAAKvS,EAAIgT,QAAQjB,SAAQ,SAAC9N,EAAGvC,GAAKoQ,EAAG7N,GAAG,CAACiK,MAAM0E,EAAMlR,GAAI6K,MAAM+F,EAAO5Q,GAAIkQ,MAAMY,EAAS9Q,GAAImQ,IAAKY,EAAO/Q,QAEnH0P,EAAQU,GAjCD,4CAAJ,qDAwCX,OAJArQ,qBAAU,WACN4F,MACF,CAACiJ,EAAchB,IAGb,yBAAKxL,GAAG,uCAAuCM,MAAK,aAAGwB,QAAS,eAAgBqN,OAAQ,MAAOC,MAAO,OAAU/T,EAAMiF,QAClH,kBAAC,IAAD,CAAyBzC,IAAKxC,EAAMwC,IAAKqD,OAAQ7F,EAAM6F,OAAQmO,QAAS9B,EAAgB+B,aAAc,kBAAI9B,GAAkB,IAAQvR,KAAMwR,EAAWtM,aAAc9F,EAAM8F,aAAcF,SAAU5F,EAAM4F,SAAU5B,SAAUhE,EAAMgE,SAAUkQ,YAAa/C,IACxP,yBAAKxM,GAAG,0BACJ,yBAAKA,GAAG,0BACJ,0BAAMK,UAAU,+BAAhB,OACA,0BAAMA,UAAU,+BAAhB,OACA,0BAAMA,UAAU,+BAAhB,QACA,0BAAMA,UAAU,+BAAhB,OACA,0BAAMA,UAAU,+BAAhB,OACA,0BAAMA,UAAU,+BAAhB,OACA,0BAAMA,UAAU,+BAAhB,QAEJ,yBAAKL,GAAG,4BACH,sBAAIiN,GAAJ,YAAkBG,GAAlB,YAAiCD,IAAWjR,KAAI,SAAA0B,GAAC,OAClD,0BAAMyC,UAAS,gEAA2DzC,EAAE4B,KAA7D,oCAA6F5B,EAAE6B,SAAWa,MAAO,CAC5HkP,gBAAmBnC,EAAKzP,EAAE6B,UAAqB,WAAX7B,EAAE4B,KAApB,WACV6N,EAAKzP,EAAE6B,SAAS2K,OACpB,WAEJ1I,QAAS,SAACvB,GACN,IAAIgO,EACW,QAAXvQ,EAAE4B,OACF2O,EAAO,IAAIrH,KAAKgG,EAAiBvD,cAAeuD,EAAiBtD,WAAY5L,EAAE6B,UACpE,WAAX7B,EAAE4B,OACF2O,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAY5L,EAAE6B,UAC9D,SAAX7B,EAAE4B,OACF2O,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAW,EAAG5L,EAAE6B,UAC/EgN,EAAgB0B,GACZd,EAAKzP,EAAE6B,SACPiO,EAAaL,EAAKzP,EAAE6B,SAASsO,KAE7BL,EAAa,IACjBF,GAAkB,GACdnS,EAAMoU,gBACNpU,EAAMoU,eAAetB,KAE7B,yBAAK9N,UAAU,sBACVzC,EAAE6B,QAAQ,0BAAMY,UAAU,uBAAwBgN,EAAKzP,EAAE6B,UAAmB,WAAT7B,EAAE4B,KAApB,UAAwC6N,EAAKzP,EAAE6B,SAASgJ,MAAxD,UAAsE,OAAkB,yBAAKnI,MAAO,CAAC6J,WAAY,EAAGM,YAAa,EAAGiF,aAAc,KAAOrC,EAAKzP,EAAE6B,UAAmB,WAAT7B,EAAE4B,KAAiB6N,EAAKzP,EAAE6B,SAASqO,MAAM,IAAI5R,KAAI,SAACyJ,GAAD,OAAQ,0BAAMtF,UAAU,0BAAyB,yBAAKA,UAAU,wBAAf,QAAmDsF,YAI7X,yBAAK3F,GAAG,wBACJ,uBAAGK,UAAU,oCAAoCqB,QAAS,WACtD,IAAIyM,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAW,EAAG,GAC7EiD,EAAgB0B,GACZ9S,EAAMoU,gBACNpU,EAAMoU,eAAetB,MAG7B,uBAAG9N,UAAU,qCAAqCqB,QAAS,WACvD,IAAIyM,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAW,EAAG,GAC7EiD,EAAgB0B,GACZ9S,EAAMoU,gBACNpU,EAAMoU,eAAetB,MAG7B,yBAAK9N,UAAU,iBAAiBqB,QAAS,WACrC+K,EAAgB,IAAI3F,MAChBzL,EAAMoU,gBACNpU,EAAMoU,eAAe,IAAI3I,QAE7BzL,EAAMgE,SAAS4F,cAAc0K,QAKrC,yBAAK3P,GAAG,4BACJ,yBAAKA,GAAG,4BACJ,yBAAKK,UAAU,yCAAyCmM,EAAaxF,WACrE,yBAAK3G,UAAU,qCAAqCmM,EAAanC,eAAehP,EAAMgE,SAAS4F,cAAcqF,cAAe,CAAGC,QAAS,UACxI,yBAAKlK,UAAU,kCAAkCmM,EAAanC,eAAehP,EAAMgE,SAAS4F,cAAcqF,cAAe,CAAEc,MAAO,UAClI,yBAAK/K,UAAU,iCAAiCmM,EAAajD,mB,IAU/EqG,E,kDAEF,WAAYvU,GAAQ,IAAD,sBACf,cAAMA,GAEN,IAAIwU,EAAQ,IAAI/I,KAHD,OAIf+I,EAAMzB,SAAS,EAAE,EAAE,EAAE,GAErB,EAAK3L,MAAQ,CACTV,iBAAiB,GACjBsF,aAAa,GACbC,oBAAoB,GACpBC,gBAAgB,GAChBpG,aAAc,GACdqG,eAAe,GACfC,WAAY,GACZC,UAAW,GACX6H,YAAcM,EACdC,SAAU,GACVC,kBAAkB,GAItB,EAAKhI,aAAe,EAAKD,SACzB,EAAKzM,MAAMgE,SAAS2I,kBAAmB,EAAKzE,QAASzF,KAAd,iBACvC,EAAKkS,SAAW5T,IAAMC,YAGtB2F,EAAS,gBA1BM,E,uDA6BfsB,KAAKf,SAAS,CAAC0N,UAAU,M,iCAGzB3M,KAAKf,SAAS,CAAC0N,UAAU,M,6CAIzB3M,KAAKjI,MAAMgE,SAASyK,S,kLAIFxG,KAAKjI,MAAM6F,OAAO0C,GAAGqE,oBAAoB3E,KAAKjI,MAAMwC,K,cAAlEqK,E,gBACe5E,KAAKjI,MAAM6F,OAAO0C,GAAGyE,mBAAmB/E,KAAKjI,MAAMwC,K,OAMtE,IAAS2H,KANL8C,E,OAGAC,EAAc,GACdC,EAAW,GAECF,EAAO,GAAG,GACtBE,EAAS3G,KAAK,CAAC4G,MAAOjD,EAAKkD,MAAOJ,EAAO,GAAG,GAAG9C,K,OAC/CmD,EAAQrF,K,UACW,cAAAtF,EAAA,sCAAAA,EAAA,6DACf4K,EAAM,GADS,SAEID,EAAMtN,MAAM6F,OAAO0C,GAAGC,oBAAoB8E,EAAMtN,MAAMwC,KAF1D,OAEfgL,EAFe,OAEgE,GAFhE,OAAA7K,EAAA,KAGH6K,GAHG,qDAGV9H,EAHU,gBAIf6H,EAJe,UAIAD,EAAMtN,MAAM6F,OAAO0C,GAAGkF,oBAAoBH,EAAMtN,MAAMwC,IAAKkD,GAAK,GAJhE,yBAIXc,KAJW,gEAMZ+G,GANY,8C,eAAnBlB,E,OASAqB,EAAoB,SAApBA,EAA6BC,EAAGC,GAIhC,GAHKA,IACDA,EAAQ,IACZV,EAAY1G,KAAK,CAAC4G,MAAOO,EAAEhJ,GAAI0I,MAAOO,EAAMX,EAAO,GAAG,GAAGU,EAAEhJ,MACvDgJ,EAAEE,SAAN,qBACkBF,EAAEE,UADpB,IACI,gCAAS/I,EAAT,QACmB,YAAXA,EAAEX,MACFuJ,EAAkB5I,EAAEV,QAASwJ,EAAM,QAH/C,iCAMJvB,EAAUxL,KAAI,SAAA0J,GAAI,OAAEmD,EAAkBnD,OAElCsK,EAAU,IAAIpJ,KAAKxD,KAAKb,MAAM8M,cAC1BnB,SAAS,GAAG,GAAG,GAAG,I,UACL9K,KAAKjI,MAAM6F,OAAO0C,GAAGuF,mBAAmB7F,KAAKjI,MAAMwC,IAAKyF,KAAKb,MAAM8M,YAAaW,G,QAAjGJ,E,OAEJtE,IAEAlI,KAAKf,SAAS,CACVR,iBAAkBuG,EAAO,GAAG,GAC5BjB,aAAciB,EAAO,GAAG,GACxBhB,oBAAqBgB,EAAO,GAAG,GAC/Bf,gBAAiBe,EAAO,GAAG,GAC3BnH,aAAc+G,EACdV,eAAgBe,EAChBd,WAAYe,EACZd,YACAoI,a,iJAKJxM,KAAKC,Y,+BAGE,OAA2B,OAAjB,EAAE1E,KAAKiJ,UAAmB,GAAGiC,SAAS,IAAI,KAAwB,OAAjB,EAAElL,KAAKiJ,UAAmB,GAAGiC,SAAS,M,+BAElG,IAAD,OACL,OACI,kBAAC,IAAD,KAEI,yBAAK1J,UAAW,oBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WAFf,QAUA,yBAAKvE,UAAW,iBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WASX,yBAAKvE,UAAU,oBACX,yBAAKC,MAAO,CAACwB,QAAS,iBAClB,6BACI,kBAAC,IAAD,KACI,uBAAGzB,UAAU,cACTC,MAAO,CAAC6J,WAAY,GAAIC,MAAO,kCAEvC,wBAAI/J,UAAU,cACV,uBAAGC,MAAO,CAACoF,aAAc,IACrBrF,UAAU,wBAFlB,qBAMA,kBAAC,IAAD,CAAc8P,OAAO,QAAQC,OAAQ,CAACC,IAAK,GAAIb,gBAAgB,QAAQnP,UAAU,gBAI7F,yBAAKC,MAAO,CAAC6J,WAAY,GAAIM,YAAa,GAAIC,UAAW,SAAUyE,OAAQ,SACvE,yBAAKnP,GAAG,yBAEI,EAAK3E,MAAMiV,WACJ,kBAAC,IAAD,CAAcjR,SAAU,EAAKhE,MAAMgE,SAAUxB,IAAK,EAAKxC,MAAMwC,IAAKqD,OAAQ,EAAK7F,MAAM6F,OAAQmO,QAAS,EAAK5M,MAAMsN,iBAAkBT,aAAc,kBAAI,EAAK/M,SAAS,CAACwN,kBAAkB,KAAUN,eAAgB,uCAAC,WAAec,GAAf,iBAAAvS,EAAA,6DAChNkS,EAAU,IAAIpJ,KAAKyJ,EAAEC,YACjBpC,SAAS,GAAG,GAAG,GAAG,IAF0L,SAG/L9K,KAAKjI,MAAM6F,OAAO0C,GAAGuF,mBAAmB7F,KAAKjI,MAAMwC,IAAK0S,EAAGL,GAHoI,OAGhNJ,EAHgN,OAIpNxM,KAAKf,SAAS,CAACgN,YAAagB,EAAGT,aAJqL,gDAAD,sDAKpNhS,KAAK,KAED,kBAAC2N,EAAD,CAAoBpM,SAAU,EAAKhE,MAAMgE,SAAWxB,IAAK,EAAKxC,MAAMwC,IAAKqD,OAAQ,EAAK7F,MAAM6F,OAAQC,aAAc,EAAKsB,MAAMtB,aAAcF,SAAU,CAAC,EAAKwB,MAAMgF,WAAY,EAAKhF,MAAM+E,eAAgB,EAAK/E,MAAMV,iBAAkB,EAAKU,MAAM6E,oBAAqB,EAAK7E,MAAM4E,aAAc,EAAK5E,MAAM8E,mBAEtT,WACE,GAAI,EAAKlM,MAAMiV,WACnB,OAAO,yBAAKtQ,GAAG,kCACX,0BAAMA,GAAG,wBACL,yBAAKyQ,MAAM,uBAAuB,EAAKhO,MAAMqN,SAASvS,QACtD,yBAAKkT,MAAM,uBAAX,gBACA,yBAAKA,MAAM,sBAAsB,EAAKhO,MAAM8M,YAAYlF,eAAe,QAAS,CAAGE,QAAS,OAAQY,KAAM,UAAWC,MAAO,OAAQC,IAAK,cAE5I,EAAK5I,MAAMqN,SAAS5T,KAAI,SAAA8D,GAAE,OACvB,kBAAC,IAAD,CAAMc,IAAKd,EAAIe,IAAKf,EAAG,IAAI,EAAK+H,aAAclK,IAAK,EAAKxC,MAAMwC,IAAKqD,OAAQ,EAAK7F,MAAM6F,OAAQ7B,SAAU,EAAKhE,MAAMgE,SAAU8B,aAAc,EAAKsB,MAAMtB,aAAanB,GAAKiB,SAAU,CAAC,EAAKwB,MAAMgF,WAAY,EAAKhF,MAAM+E,eAAgB,EAAK/E,MAAMV,iBAAkB,EAAKU,MAAM6E,oBAAqB,EAAK7E,MAAM4E,aAAc,EAAK5E,MAAM8E,uBAT5U,GAaN,yBAAKlH,UAAU,iBAAf,gB,GAtKDsG,aA8KR+J,4BAAcd,EAAU,CAACe,YAAa,IAAKC,YAAY,IAAKC,sBAAsB,M,mDC9XjG,wDAwDeC,IA7Bf,SAAiCzV,GAE7B,IAAI0V,EAAOrV,iBAAO,IAMlB,OAJAiC,qBAAU,WACNoT,EAAKvT,QAAQnC,EAAMY,KAAKC,KAAI,SAACC,GAAD,OAAKE,2BAClC,CAAChB,EAAMY,OAGN,kBAAC,IAAD,CAAUiE,IAAK7E,EAAM4K,UAAW+K,OAAQ3V,EAAMgU,QAASC,aAAc,WAAUjU,EAAMiU,cAAcjU,EAAMiU,gBAAiBhP,MAAO,CAACC,aAAc,GAAI0Q,SAAS,yBACrJ,yBAAKjR,GAAG,oBADhB,IAEI,yBAAKK,UAAU,gBACX,0BAAML,GAAG,wBACL,yBAAKyQ,MAAM,uBAAuBpV,EAAMY,KAAKsB,QAC7C,yBAAKkT,MAAM,uBAAX,gBACA,yBAAKA,MAAM,sBAAuBpV,EAAMkU,YAAYlF,eAAe,QAAS,CAAGE,QAAS,OAAQY,KAAM,UAAWC,MAAO,OAAQC,IAAK,cAGxIhQ,EAAMY,KAAKC,KAAI,SAAC8D,EAAIpC,GAAL,OACZ,yBAAKsC,IAAK6Q,EAAKvT,QAAQI,IACnB,kBAAC,IAAD,CAAMkD,IAAKd,EAAIe,IAAKf,EAAInC,IAAKxC,EAAMwC,IAAKqD,OAAQ7F,EAAM6F,OAAQ7B,SAAUhE,EAAMgE,SAAU8B,aAAc9F,EAAM8F,aAAanB,GAAKiB,SAAU5F,EAAM4F,SAAUG,SAAU2P,EAAKvT,QAAQI,GAAIsT,SAAS,QAGpM,yBAAK7Q,UAAU,gBAAgBC,MAAO,CAAC6O,OAAQ,MAA/C,Y,qKC5CVnN,EAAWC,EAAQ,IAezB,SAASkP,EAAW3R,EAAM4R,GACtB9N,KAAK9D,KAAOA,EACZ8D,KAAK8N,SAAWA,E,IAIdC,E,kDACF,WAAYhW,GAAQ,IAAD,8BACf,cAAMA,IAEDoH,MAAQ,CACTqN,SAAU,GACVwB,WAAY,EACZC,SAAU,CAAC,QAAS,YAAa,YAAa,aAAc,eAC5DC,WAAW,EACXzP,iBAAiB,GACjBsF,aAAa,GACbC,oBAAoB,GACpBC,gBAAgB,GAChBpG,aAAc,GACdqG,eAAe,GACfC,WAAY,GACZC,UAAW,IAGf,EAAKK,aAAe,EAAKD,SACzB,EAAKzM,MAAMgE,SAAS2I,kBAAmB,EAAKzE,QAASzF,KAAd,iBACvCkE,EAAS,gBApBM,E,mEAwBfsB,KAAKjI,MAAMgE,SAASyK,S,gLAIhB2H,EAAU,G,SACGnO,KAAKjI,MAAM6F,OAAO0C,GAAG8N,kBAAkBpO,KAAKjI,MAAMwC,K,cAA/D8T,E,gBAEcrO,KAAKjI,MAAM6F,OAAO0C,GAAGqE,oBAAoB3E,KAAKjI,MAAMwC,K,cAAlEqK,E,gBACe5E,KAAKjI,MAAM6F,OAAO0C,GAAGyE,mBAAmB/E,KAAKjI,MAAMwC,K,OAYtE,IAAS2H,KAZL8C,E,OAEJqJ,EAAK1D,SAAQ,SAAC2D,EAAKhU,GACf6T,EAAQ5P,KAAK,IAAIsP,EAAW,QAAS,EAAK1O,MAAM8O,SAAS3T,KACzDgU,EAAI3D,SAAQ,SAAAtE,GACR8H,EAAQ5P,KAAK,IAAIsP,EAAW,OAAQxH,UAIxCpB,EAAc,GACdC,EAAW,GAECF,EAAO,GAAG,GACtBE,EAAS3G,KAAK,CAAC4G,MAAOjD,EAAKkD,MAAOJ,EAAO,GAAG,GAAG9C,K,OAC/CmD,EAAQrF,K,UACW,cAAAtF,EAAA,sCAAAA,EAAA,6DACf4K,EAAM,GADS,SAEID,EAAMtN,MAAM6F,OAAO0C,GAAGC,oBAAoB8E,EAAMtN,MAAMwC,KAF1D,OAEfgL,EAFe,OAEgE,GAFhE,OAAA7K,EAAA,KAGH6K,GAHG,qDAGV9H,EAHU,gBAIf6H,EAJe,UAIAD,EAAMtN,MAAM6F,OAAO0C,GAAGkF,oBAAoBH,EAAMtN,MAAMwC,IAAKkD,GAAK,GAJhE,yBAIXc,KAJW,gEAMZ+G,GANY,8C,QAAnBlB,E,OASAqB,EAAoB,SAApBA,EAA6BC,EAAGC,GAIhC,GAHKA,IACDA,EAAQ,IACZV,EAAY1G,KAAK,CAAC4G,MAAOO,EAAEhJ,GAAI0I,MAAOO,EAAMX,EAAO,GAAG,GAAGU,EAAEhJ,MACvDgJ,EAAEE,SAAN,qBACkBF,EAAEE,UADpB,IACI,gCAAS/I,EAAT,QACmB,YAAXA,EAAEX,MACFuJ,EAAkB5I,EAAEV,QAASwJ,EAAM,QAH/C,iCAKJvB,EAAUxL,KAAI,SAAA0J,GAAI,OAAEmD,EAAkBnD,MACtCtC,KAAKf,SAAS,CAACuN,SAAU2B,EAASD,WAAW,EAAOzP,iBAAkBuG,EAAO,GAAG,GAAIjB,aAAciB,EAAO,GAAG,GAAIhB,oBAAqBgB,EAAO,GAAG,GAAIf,gBAAiBe,EAAO,GAAG,GAAInH,aAAc+G,EAAOV,eAAgBe,EAAad,WAAYe,EAAUd,c,2PAM1PpE,KAAKC,U,8IAGU,IAAD,OACdD,KAAKf,SAAS,CAACiP,WAAW,IACVtS,YAAW,WACvB,EAAKqD,SAAS,CAACiP,WAAW,MAE3B,GAEkBtS,YAAW,WAC5B,EAAKqD,SAAS,CAAC+O,WAAY,EAAK7O,MAAM6O,WAAW,IAGjD,EAAK/O,SAAS,CAACiP,WAAW,MAC3B,K,+BAMI,OAA2B,OAAjB,EAAE3S,KAAKiJ,UAAmB,GAAGiC,SAAS,IAAI,KAAwB,OAAjB,EAAElL,KAAKiJ,UAAmB,GAAGiC,SAAS,M,+BAElG,IAAD,OACL,OACI,kBAAC,IAAD,KACI,yBAAKzJ,MAAO,CAACoK,UAAW,WACpB,yBAAKrK,UAAW,oBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WAFf,QAUA,yBAAKvE,UAAW,iBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WASX,yBAAKvE,UAAU,oBACX,yBAAKC,MAAO,CAACwB,QAAS,iBAClB,kBAAC,IAAD,KACI,uBAAG2O,MAAM,cACLnQ,MAAO,CAAC6J,WAAY,GAAIC,MAAO,kCAEvC,wBAAI/J,UAAU,cACV,uBAAGC,MAAO,CAACoF,aAAc,IACrBrF,UAAU,wBAFlB,eAaR,yBAAKC,MAAO,CAACoK,UAAW,WACnBpH,KAAKb,MAAMqN,SAASb,MAAM,EAAG,GAAG3L,KAAKb,MAAM6O,YAAYpV,KAAI,SAACuD,EAAS7B,GAAV,OACxD,yBAAK0C,MAAO,CAAC6J,WAAY,GAAIM,YAAa,KACpB,SAAhBhL,EAAQD,KACD,EAAKiD,MAAMqN,SAASlS,EAAE,GACgB,SAAjC,EAAK6E,MAAMqN,SAASlS,EAAE,GAAG4B,MAAmB,EAAKiD,MAAMqN,SAASb,MAAM,EAAG,GAAG,EAAKxM,MAAM6O,YAAY/T,QAAUK,EAAE,EACjH,GAAK,uBAAGyC,UAAU,aAAaC,MAAO,CAACoP,aAAa,IAAKjQ,EAAQ2R,UAAiB,GAClF,kBAAC,IAAD,CACItQ,IAAKrB,EAAQ2R,SACbS,mBAAmB,EACnB9Q,IAAKtB,EAAQ2R,SAAS,IAAI,EAAKrJ,aAC/BlK,IAAK,EAAKxC,MAAMwC,IAChBqD,OAAQ,EAAK7F,MAAM6F,OACnB7B,SAAU,EAAKhE,MAAMgE,SACrB8B,aAAc,EAAKsB,MAAMtB,aAAa1B,EAAQ2R,UAC9CnQ,SAAU,CAAC,EAAKwB,MAAMgF,WAClB,EAAKhF,MAAM+E,eACX,EAAK/E,MAAMV,iBACX,EAAKU,MAAM6E,oBACX,EAAK7E,MAAM4E,aACX,EAAK5E,MAAM8E,uBAM3C,yBAAKlH,UAAU,cAEViD,KAAKb,MAAM+O,UAAW,uBAAGnR,UAAU,UAAb,cAAwC,uBAAGqB,QAAS4B,KAAKwO,iBAAjB,kBAEvE,yBAAKzR,UAAU,iBAAf,gB,GA1KIsG,aAmLT0K,Q,gNCnMTrP,EAAWC,EAAQ,IAqBnB8P,E,kDAEF,WAAY1W,GAAQ,IAAD,8BACf,cAAMA,IAEDoH,MAAQ,CACTqN,SAAU,GACVkC,gBAAiB,GACxBC,iBAAkB,GAClBC,iBAAkB,GAClBC,gBAAiB,GAEVlC,SAAiC,OAAvB,EAAK5U,MAAMoL,QACrB1E,iBAAiB,GACjBsF,aAAa,GACbC,oBAAoB,GACpBC,gBAAgB,GAChBpG,aAAc,GACdqG,eAAe,GACfC,WAAY,GACZC,UAAW,IAKf,EAAKK,aAAe,EAAKD,SACzB,EAAKzM,MAAMgE,SAAS2I,kBAAmB,EAAKzE,QAASzF,KAAd,iBACvC,EAAKkS,SAAW5T,IAAMC,YAItB2F,EAAS,gBA7BM,E,uDAgCfsB,KAAKf,SAAS,CAAC0N,UAAU,M,iCAGzB3M,KAAKf,SAAS,CAAC0N,UAAU,M,6CAIzB3M,KAAKjI,MAAMgE,SAASyK,S,oLAIaxG,KAAKjI,MAAM6F,OAAO0C,GAAGG,gBAAgBT,KAAKjI,MAAMwC,K,cAA7EuU,E,OACAC,EAAoBD,EAAqB,GAAG9O,KAAKjI,MAAM2E,I,SACtCsD,KAAKjI,MAAM6F,OAAOoR,YAAYC,KAAKjP,KAAKjI,MAAMwC,IAAKwU,EAAkBG,MAAOH,EAAkBnK,MAAOmK,EAAkBI,M,cAAxI3C,E,gBAGcxM,KAAKjI,MAAM6F,OAAO0C,GAAGqE,oBAAoB3E,KAAKjI,MAAMwC,K,cAAlEqK,E,iBACe5E,KAAKjI,MAAM6F,OAAO0C,GAAGyE,mBAAmB/E,KAAKjI,MAAMwC,K,QAMtE,IAAS2H,KANL8C,E,OAGAC,EAAc,GACdC,EAAW,GAECF,EAAO,GAAG,GACtBE,EAAS3G,KAAK,CAAC4G,MAAOjD,EAAKkD,MAAOJ,EAAO,GAAG,GAAG9C,K,OAC/CmD,EAAQrF,K,UACW,cAAAtF,EAAA,sCAAAA,EAAA,6DACf4K,EAAM,GADS,SAEID,EAAMtN,MAAM6F,OAAO0C,GAAGC,oBAAoB8E,EAAMtN,MAAMwC,KAF1D,OAEfgL,EAFe,OAEgE,GAFhE,OAAA7K,EAAA,KAGH6K,GAHG,qDAGV9H,EAHU,gBAIf6H,EAJe,UAIAD,EAAMtN,MAAM6F,OAAO0C,GAAGkF,oBAAoBH,EAAMtN,MAAMwC,IAAKkD,GAAK,GAJhE,yBAIXc,KAJW,gEAMZ+G,GANY,8C,QAAnBlB,E,OASAqB,EAAoB,SAApBA,EAA6BC,EAAGC,GAIhC,GAHKA,IACDA,EAAQ,IACZV,EAAY1G,KAAK,CAAC4G,MAAOO,EAAEhJ,GAAI0I,MAAOO,EAAMX,EAAO,GAAG,GAAGU,EAAEhJ,MACvDgJ,EAAEE,SAAN,qBACkBF,EAAEE,UADpB,IACI,gCAAS/I,EAAT,QACmB,YAAXA,EAAEX,MACFuJ,EAAkB5I,EAAEV,QAASwJ,EAAM,QAH/C,iCAMJvB,EAAUxL,KAAI,SAAA0J,GAAI,OAAEmD,EAAkBnD,MAEtCtC,KAAKf,SAAS,CACVuN,SAAUA,EACVkC,gBAAiBK,EAAkB1M,KAC1CsM,iBAAkBI,EAAkBG,MACpCN,iBAAkBG,EAAkBnK,MACpCiK,gBAAiBE,EAAkBI,KAC5B1Q,iBAAkBuG,EAAO,GAAG,GAC5BjB,aAAciB,EAAO,GAAG,GACxBhB,oBAAqBgB,EAAO,GAAG,GAC/Bf,gBAAiBe,EAAO,GAAG,GAC3BnH,aAAc+G,EACdV,eAAgBe,EAChBd,WAAYe,EACZd,c,wIAIGvH,GAAI,IAAD,OACNA,IACAmD,KAAKjI,MAAMgE,SAASqT,mBAAkB,WAGlC,EAAKrX,MAAMgE,SAASC,GAChB,kCAAmC,CAE/BzB,IAAK,EAAKxC,MAAMwC,IAChBmC,GAAI,EAAK3E,MAAM2E,GACf2S,QAAS,CAAChN,KAAMxF,EAAEyS,OAAOnK,SAE/BoK,KAAK,EAAKxX,MAAMmL,eAVtB,2BAWuBlD,KAAKjI,MAAM2E,GAXlC,YAYAsD,KAAKf,SAAS,CAACyP,gBAAiB7R,EAAEyS,OAAOnK,W,qCAKjC,IAAD,OACXnF,KAAKjI,MAAMuG,QAAQC,KAAK,aACxByB,KAAKjI,MAAMsG,SAAS,YACpB2B,KAAKjI,MAAMgE,SAASC,GAChB,kCAAmC,CAC/BzB,IAAKyF,KAAKjI,MAAMwC,IAChBmC,GAAIsD,KAAKjI,MAAM2E,KAErB6S,MAAK,WACH,EAAKxX,MAAMmL,mB,0CAMflD,KAAKC,Y,yCAGUC,EAAWC,EAAWC,GAEjCF,EAAUxD,KAAOsD,KAAKjI,MAAM2E,KAC5BsD,KAAKf,SAAS,CACVuN,SAAU,GACVkC,gBAAiB,GACjBC,iBAAkB,GAClBC,iBAAkB,GAClBC,gBAAiB,GAEjBlC,SAAiC,OAAvB3M,KAAKjI,MAAMoL,QACrB1E,iBAAiB,GACjBsF,aAAa,GACbC,oBAAoB,GACpBC,gBAAgB,GAChBpG,aAAc,GACdqG,eAAe,GACfC,WAAY,GACZC,UAAW,KAIfpE,KAAKC,WAGLC,EAAUxD,KAAOsD,KAAKjI,MAAM2E,IAA6B,OAAvBsD,KAAKjI,MAAMoL,SAC7CnD,KAAKf,SAAS,CAAC0N,UAAU,M,+BAItB,OAA2B,OAAjB,EAAEpR,KAAKiJ,UAAmB,GAAGiC,SAAS,IAAI,KAAwB,OAAjB,EAAElL,KAAKiJ,UAAmB,GAAGiC,SAAS,M,+BAElG,IAAD,OACL,OACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACI9D,UAAW3C,KAAK0M,SAChBX,QAAS/L,KAAKb,MAAMwN,SACpBX,aAAchM,KAAKwP,SACnBjV,IAAKyF,KAAKjI,MAAMwC,IAChBqD,OAAQoC,KAAKjI,MAAM6F,OACnB7B,SAAUiE,KAAKjI,MAAMgE,SACrBW,GAAIsD,KAAKjI,MAAM2E,GACfgS,gBAAiB1O,KAAKb,MAAMuP,gBAC5BQ,MAAOlP,KAAKb,MAAMwP,iBAClB/J,MAAO5E,KAAKb,MAAMyP,iBAClBO,KAAMnP,KAAKb,MAAM0P,gBACjB3L,YAAalD,KAAKjI,MAAMmL,YACxBuM,WAAYzP,KAAKyP,WACjBC,iBAAyC,OAAvB1P,KAAKjI,MAAMoL,UAEjC,yBAAKpG,UAAW,oBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WAFf,QAUA,yBAAKvE,UAAW,iBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WASzB,yBAAKvE,UAAU,oBACG,yBAAKC,MAAO,CAACwB,QAAS,iBAClB,6BACI,kBAAC,IAAD,KACI,uBAAGzB,UAAU,cACTC,MAAO,CAAC6J,WAAY,GAAIC,MAAO,kCAEvC,wBAAI/J,UAAU,cACV,uBAAGC,MAAO,CAACoF,aAAc,IACrBrF,UAAU,uBAEd,2BAAOA,UAAU,iBACb4S,SAAU,SAAC9S,GAAMA,EAAE+S,UAAW,EAAKH,WAAW5S,IAC9CsI,MAAOnF,KAAKb,MAAMuP,mBAG1B,kBAAC,IAAD,CAAc7B,OAAO,QAAQC,OAAQ,CAACC,IAAK,GAAIb,gBAAgB,QAAQnP,UAAU,aAEjF,yBAAKA,UAAU,qBAAqBC,MAAO,CAAC6J,WAAY,GAAIW,UAAW,IACnE,uBACIpJ,QAAS4B,KAAK2M,SACdkD,WAAS,iBACT9S,UAAU,mBACVC,MAAO,CAAC8S,YAAa,wBAAyB3S,OAAQ,YACtD,uBAAGJ,UAAU,cACTC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,wBACtBtF,SAAU,GACVpE,UAAW,2BAIvB,uBACIgB,QAAS4B,KAAKgQ,aACdH,WAAS,mBACT9S,UAAU,mBACVC,MAAO,CAAC8S,YAAa,wBACjB3S,OAAQ,UAAW0J,WAAY,IACnC,uBAAG9J,UAAU,eACTC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,wBACtBtF,SAAU,GAAIpE,UAAW,+BASrD,yBAAKJ,MAAO,CAAC6J,WAAY,GAAIM,YAAa,GAAIC,UAAW,WAEpDpH,KAAKb,MAAMqN,SAAS5T,KAAI,SAAA8D,GAAE,OACvB,kBAAC,IAAD,CACIc,IAAKd,EACLe,IAAKf,EAAG,IAAI,EAAK+H,aACjBlK,IAAK,EAAKxC,MAAMwC,IAChBqD,OAAQ,EAAK7F,MAAM6F,OACnB7B,SAAU,EAAKhE,MAAMgE,SACrB8B,aAAc,EAAKsB,MAAMtB,aAAanB,GACtCiB,SAAU,CACN,EAAKwB,MAAMgF,WACX,EAAKhF,MAAM+E,eACX,EAAK/E,MAAMV,iBACX,EAAKU,MAAM6E,oBACX,EAAK7E,MAAM4E,aACX,EAAK5E,MAAM8E,sBAIvB,yBAAKlH,UAAU,iBAAf,e,GApRGsG,aA4RZ4M,gBAAWxB,K,oHClTpB/P,G,0BAAWC,EAAQ,KAmBnBuR,E,kDACF,WAAYnY,GAAQ,IAAD,6BACf,cAAMA,GACN2G,EAAS,gBAET,EAAKS,MAAQ,CACTgR,WAAY,IAGhB,EAAK9N,KAAOvJ,IAAMC,YARH,E,gEAYXiH,KAAKjI,MAAM2X,kBACX1P,KAAKqC,KAAKnI,QAAQkW,U,wCAGRvT,GAAI,IAAD,OACbA,EACAmD,KAAKjI,MAAMgE,SAASqT,mBAAkB,WAGlC,EAAKrX,MAAMgE,SAASC,GAChB,kCAAmC,CAE/BzB,IAAK,EAAKxC,MAAMwC,IAChBmC,GAAI,EAAK3E,MAAM2E,GACf2S,QAAS,CAACH,MAAOrS,EAAEyS,OAAOnK,WARtC,2BAWuBnF,KAAKjI,MAAM2E,GAXlC,YAYI2T,QAAQC,IAAIzT,K,mCAIpB0T,MAAM,2GACNF,QAAQC,IAAI,sC,+BAGN,IAAD,OACL,OACI,kBAAC,IAAD,CACI1T,IAAKoD,KAAKjI,MAAM4K,UAChB+K,OAAQ1N,KAAKjI,MAAMgU,QACnByE,cAAe,WAAO,EAAKzY,MAAMgE,SAAS0U,eAC1CzE,aAAc,WACV,EAAKjU,MAAMgE,SAAS2U,gBACpB,EAAK3Y,MAAM0X,WAAW,EAAKtQ,MAAMgR,YAC7B,EAAKpY,MAAMiU,cAAc,EAAKjU,MAAMiU,gBAAiBhP,MAAO,CAACC,aAAc,GAEnF0Q,SAAU,qBAGV,6BAEI,yBAAK5Q,UAAU,sBAEX,0BAAMC,MAAO,CAACwB,QAAS,OAAQmS,WAAY,SAAU7E,MAAO,OAAQ8E,WAAY,WAC5E,uBAAG7T,UAAU,eAAgBiD,KAAKjI,MAAMgE,SAAS4F,cAAckP,2BAC/D,2BAAO9T,UAAU,gCACbH,IAAKoD,KAAKqC,KACVyO,aAAc9Q,KAAKjI,MAAM2W,gBACzBiB,SAAU,SAAC9S,GAAMA,EAAE+S,UAAW,EAAK7X,MAAM0X,WAAW5S,GAAI,EAAKoC,SAAS,CAACkR,WAAYtT,KACnFG,MAAO,CAAC+T,SAAU,GAClBC,YAAY,6BAGhB,yBAAKjU,UAAU,oBAAoBiD,KAAKb,MAAMkD,OAGlD,uBAAGtF,UAAU,eAAeqB,QAAS4B,KAAKjI,MAAMiU,aAAchP,MAAO,CAACI,UAAW,0BAA0B,uBAAGL,UAAU,kBAG5H,yBAAKA,UAAU,eACX,0BAAMA,UAAU,cAAcC,MAAO,CAAC+T,SAAU,OAAQvJ,UAAW,QAAnE,aADJ,IAEI,2BACIzK,UAAU,mBACV+T,aAAc9Q,KAAKjI,MAAMmX,MACzBS,SAAU,SAAC9S,GAAMA,EAAE+S,UAAW,EAAKqB,kBAAkBpU,IACrDmU,YAAY,iCAMpB,yBAAKjU,UAAU,yBACX,0BAAMA,UAAU,mBAAmBC,MAAO,CAACmK,YAAa,SACpD,8BACI,uBAAGpK,UAAU,qCACb,0BAAMA,UAAU,qBAAqBiD,KAAKjI,MAAMgE,SAAS4F,cAAcuP,sBAG3E,kBAAC,IAAD,CACInU,UAAU,qBACVoU,UAAU,UACVhM,MAAOnF,KAAKjI,MAAM6M,MAClBzD,KAAK,MACLiQ,YAAa,SAAAvU,GACT,EAAK9E,MAAMgE,SAASC,GAChB,kCAAmC,CAC/BzB,IAAK,EAAKxC,MAAMwC,IAChBmC,GAAI,EAAK3E,MAAM2E,GACf2S,QAAS,CAACzK,MAAO/H,EAAEwU,OAAOlM,WAMtC,kBAAC,IAAD,CAAiBpI,UAAU,wBAAwBoI,MAAM,UAAUnF,KAAKjI,MAAMgE,SAAS4F,cAAc2P,SACrG,kBAAC,IAAD,CAAiBvU,UAAU,wBAAwBoI,MAAM,SAASnF,KAAKjI,MAAMgE,SAAS4F,cAAc4P,UACpG,kBAAC,IAAD,CAAiBxU,UAAU,wBAAwBoI,MAAM,WAAWnF,KAAKjI,MAAMgE,SAAS4F,cAAc6P,WAI9G,0BAAMzU,UAAU,oBACZ,8BACI,uBAAGA,UAAU,6CACb,0BAAMA,UAAU,qBAAqBiD,KAAKjI,MAAMgE,SAAS4F,cAAc8P,oBAG3E,kBAAC,IAAD,CACI1U,UAAU,qBACVoU,UAAU,UACVhM,MAAOnF,KAAKjI,MAAMoX,KAClBhO,KAAK,MACLiQ,YAAa,SAAAvU,GACT,EAAK9E,MAAMgE,SAASC,GAChB,kCAAmC,CAC/BzB,IAAK,EAAKxC,MAAMwC,IAChBmC,GAAI,EAAK3E,MAAM2E,GACf2S,QAAS,CAACF,KAAMtS,EAAEwU,OAAOlM,WAMrC,kBAAC,IAAD,CAAiBpI,UAAU,wBAAwBoI,MAAM,QAAQnF,KAAKjI,MAAMgE,SAAS4F,cAAc+P,SACnG,kBAAC,IAAD,CAAiB3U,UAAU,wBAAwBoI,MAAM,QAAQnF,KAAKjI,MAAMgE,SAAS4F,cAAcgQ,SACnG,kBAAC,IAAD,CAAiB5U,UAAU,wBAAwBoI,MAAM,QAAQnF,KAAKjI,MAAMgE,SAAS4F,cAAciQ,SACnG,kBAAC,IAAD,CAAiB7U,UAAU,wBAAwBoI,MAAM,QAAQnF,KAAKjI,MAAMgE,SAAS4F,cAAckQ,SACnG,kBAAC,IAAD,CAAiB9U,UAAU,wBAAwBoI,MAAM,QAAQnF,KAAKjI,MAAMgE,SAAS4F,cAAcmQ,UAAnG,MAEJ,yBAAK/U,UAAU,YAAYqB,QAAS4B,KAAK+R,YACrC,uBACIhV,UAAU,oC,GAhJhBsG,aAgKf6M,O,8LC/KTxR,EAAWC,EAAQ,IAEnBqT,E,kDACF,WAAYja,GAAQ,IAAD,8BACf,cAAMA,IAEDoH,MAAQ,CACTkD,KAAM,GACN5D,iBAAiB,GACjBsF,aAAa,GACbC,oBAAoB,GACpBC,gBAAgB,GAChBpG,aAAc,GACdqG,eAAe,GACfC,WAAY,GACZC,UAAW,GACX6N,OAAQ,GACRC,eAAe,EACfC,eAAgB,CAACvM,SAAS,IAC1BwM,WAAY,IAGhB,EAAK3N,aAAe,EAAKD,SAEzB,EAAKzM,MAAMgE,SAAS2I,kBAAmB,EAAKzE,QAASzF,KAAd,iBAEvC,EAAK4X,WAAatZ,IAAMC,YAExB,EAAKsJ,KAAOvJ,IAAMC,YAElB2F,EAAS,gBA3BM,E,mEA+BfsB,KAAKjI,MAAMgE,SAASyK,S,yCAGLtG,EAAWC,EAAWC,GAEjCF,EAAUxD,KAAOsD,KAAKjI,MAAM2E,IAC5BsD,KAAKC,UAELC,EAAUxD,KAAOsD,KAAKjI,MAAM2E,IAA6B,OAAvBsD,KAAKjI,MAAMoL,SAC7CnD,KAAKqC,KAAKnI,QAAQkW,U,gLAIJpQ,KAAKjI,MAAM6F,OAAO0C,GAAGqE,oBAAoB3E,KAAKjI,MAAMwC,K,cAAlEqK,E,gBACe5E,KAAKjI,MAAM6F,OAAO0C,GAAGyE,mBAAmB/E,KAAKjI,MAAMwC,K,OAKtE,IAAS2H,KALL8C,E,OAEAC,EAAc,GACdC,EAAW,GAECF,EAAO,GAAG,GACtBE,EAAS3G,KAAK,CAAC4G,MAAOjD,EAAKkD,MAAOJ,EAAO,GAAG,GAAG9C,K,OAC/CmD,EAAQrF,K,UACW,cAAAtF,EAAA,sCAAAA,EAAA,6DACf4K,EAAM,GADS,SAEID,EAAMtN,MAAM6F,OAAO0C,GAAGC,oBAAoB8E,EAAMtN,MAAMwC,KAF1D,OAEfgL,EAFe,OAEgE,GAFhE,OAAA7K,EAAA,KAGH6K,GAHG,qDAGV9H,EAHU,gBAIf6H,EAJe,UAIAD,EAAMtN,MAAM6F,OAAO0C,GAAGkF,oBAAoBH,EAAMtN,MAAMwC,IAAKkD,GAAK,GAJhE,yBAIXc,KAJW,gEAMZ+G,GANY,8C,eAAnBlB,E,OASAqB,EAAoB,SAApBA,EAA6BC,EAAGC,GAIhC,GAHKA,IACDA,EAAQ,IACZV,EAAY1G,KAAK,CAAC4G,MAAOO,EAAEhJ,GAAI0I,MAAOO,EAAMX,EAAO,GAAG,GAAGU,EAAEhJ,MACvDgJ,EAAEE,SAAN,qBACkBF,EAAEE,UADpB,IACI,gCAAS/I,EAAT,QACmB,YAAXA,EAAEX,MACFuJ,EAAkB5I,EAAEV,QAASwJ,EAAM,QAH/C,iCAKJvB,EAAUxL,KAAI,SAAA0J,GAAI,OAAEmD,EAAkBnD,MACtCtC,KAAKyE,aAAezE,KAAKwE,S,UACHa,EAAMtN,MAAM6F,OAAO0C,GAAGkF,oBAAoBxF,KAAKjI,MAAMwC,IAAKyF,KAAKjI,MAAM2E,IAAI,G,QAA3F2V,E,OACJrS,KAAKf,SAAS,CAACoD,KAAK2C,EAAO,GAAG,GAAGhF,KAAKjI,MAAM2E,IAAK+B,iBAAkBuG,EAAO,GAAG,GAAIjB,aAAciB,EAAO,GAAG,GAAIhB,oBAAqBgB,EAAO,GAAG,GAAIf,gBAAiBe,EAAO,GAAG,GAAInH,aAAc+G,EAAOV,eAAgBe,EAAad,WAAYe,EAAUd,YAAW+N,eAAgBE,EAAUH,cAAeG,EAASH,cAAeD,OAAQI,EAASC,a,iJAIpVtS,KAAKC,UACsB,OAAvBD,KAAKjI,MAAMoL,SACXnD,KAAKqC,KAAKnI,QAAQkW,U,+BAGf,OAA2B,OAAjB,EAAE7U,KAAKiJ,UAAmB,GAAGiC,SAAS,IAAI,KAAwB,OAAjB,EAAElL,KAAKiJ,UAAmB,GAAGiC,SAAS,M,iCAEjG5J,GAAI,IAAD,OACNA,GACAmD,KAAKjI,MAAMgE,SAASqT,mBAAkB,WAGlC,EAAKrX,MAAMgE,SAASC,GAChB,uBAAwB,CACpBzB,IAAK,EAAKxC,MAAMwC,IAChBmC,GAAI,EAAK3E,MAAM2E,GACf2F,KAAMxF,EAAEyS,OAAOnK,QAErBoK,KAAK,EAAKxX,MAAMmL,eATtB,uBAUmBlD,KAAKjI,MAAM2E,GAV9B,YAWAsD,KAAKf,SAAS,CAACoD,KAAMxF,EAAEyS,OAAOnK,SACzBkL,QAAQC,IAAIzT,K,+BAGf,IAAD,OACL,OACI,kBAAC,IAAD,KACI,yBAAKE,UAAW,oBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WAFf,QAUA,yBAAKvE,UAAW,iBACP6B,YAAW,YAEPwC,OAAOC,UAAUC,SAASpG,SAAS,OACjC,SAEmB,UAArBqG,EAAQD,SACN,eADN,EAJM,WASX,yBAAKvE,UAAU,oBACX,yBAAKC,MAAO,CAACwB,QAAS,iBAClB,6BACI,kBAAC,IAAD,KACI,uBAAGzB,UAAU,cACTC,MAAO,CAAC6J,WAAY,GAAIC,MAAO,kCAEvC,wBAAI/J,UAAU,cACR,WACE,GAA0B,KAAtB,EAAKoC,MAAM8S,OACX,OAAO,uBAAGlV,UAAU,iCAAiCqB,QAAS,WAAK,EAAKrG,MAAMsG,SAAS,WAAY,EAAKc,MAAM8S,QAAQ,EAAKla,MAAMuG,QAAQC,KAAnB,oBAAqC,EAAKY,MAAM8S,YAF5K,GAIF,uBAAGjV,MAAO,CAACoF,aAAc,GACrBrF,UAAU,iBAEd,2BAAOA,UAAU,iBACb4S,SAAU,SAAC9S,GAAMA,EAAE+S,UAAW,EAAKH,WAAW5S,IAC9CsI,MAAOnF,KAAKb,MAAMkD,KAClBrF,MAAO,CAACI,UAAW,oBACnBR,IAAKoD,KAAKqC,QAGlB,kBAAC,IAAD,CAAcwK,OAAO,QAAQC,OAAQ,CAACC,IAAK,GAAIb,gBAAgB,QAAQnP,UAAU,aACjF,yBAAKA,UAAU,qBAAqBC,MAAO,CAAC6J,WAAY,EAAGW,UAAW,IAClE,uBACIpJ,QAAS,WACL,EAAKa,SAAS,CAACiT,eAAgB,EAAK/S,MAAMgT,eAAeD,gBAAgB,WACrE,EAAKna,MAAMgE,SAASC,GAChB,yBAA0B,CACtBzB,IAAK,EAAKxC,MAAMwC,IAChBmC,GAAI,EAAK3E,MAAM2E,GACfwV,cAAe,EAAK/S,MAAM+S,oBAK1CrC,WAAS,kCACT9S,UAAU,mBACVC,MAAO,CAAC8S,YAAa,wBACjB3S,OAAQ,UAAW0J,WAAY,IACnC,uBAAG9J,UAAWiD,KAAKb,MAAM+S,cAAgB,sBAAsB,sBAC3DlV,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,wBACtBtF,SAAU,GAAIpE,UAAW4C,KAAKb,MAAM+S,cAAgB,yBAA2B,8BAG3F,uBACIrC,WAAS,mBACT9S,UAAU,mBACVqB,QAAS,WACL,EAAKrG,MAAMgE,SAASC,GAChB,iBAAkB,CACdzB,IAAK,EAAKxC,MAAMwC,IAChB2H,IAAK,EAAKnK,MAAM2E,GAChBuV,OAA+B,KAAtB,EAAK9S,MAAM8S,aAAuC3S,IAAtB,EAAKH,MAAM8S,YAAwB3S,EAAY,EAAKH,MAAM8S,SAErG1C,MAAK,WACH,EAAKxX,MAAMmL,cACX,EAAKnL,MAAMuG,QAAQC,KAA4B,KAAtB,EAAKY,MAAM8S,aAAuC3S,IAAtB,EAAKH,MAAM8S,OAAwB,aAAhE,oBAA4F,EAAK9S,MAAM8S,SAC/H,EAAKla,MAAMsG,SAAgC,KAAtB,EAAKc,MAAM8S,aAAuC3S,IAAtB,EAAKH,MAAM8S,OAAwB,WAAhE,WAAgH,KAAtB,EAAK9S,MAAM8S,aAAuC3S,IAAtB,EAAKH,MAAM8S,YAAwB3S,EAAY,EAAKH,MAAM8S,YAG5MjV,MAAO,CAAC8S,YAAa,wBACjB3S,OAAQ,UAAW0J,WAAY,IACnC,uBAAG9J,UAAU,eACTC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,wBACtBtF,SAAU,GAAIpE,UAAW,+BAUrD,yBAAKJ,MAAO,CAAC6J,WAAY,GAAIM,YAAa,GAAIC,UAAW,SAAUmL,UAAW,WAE1E,kBAAC,IAAD,CAAqB5Z,KAAMqH,KAAKb,MAAMgT,eAAevM,SAAUlI,OAAQsC,KAAKyE,aAAclK,IAAKyF,KAAKjI,MAAMwC,IAAKqD,OAAQoC,KAAKjI,MAAM6F,OAAQ7B,SAAUiE,KAAKjI,MAAMgE,SAAU8B,aAAcmC,KAAKb,MAAMtB,aAAcF,SAAU,CAACqC,KAAKb,MAAMgF,WAAYnE,KAAKb,MAAM+E,eAAgBlE,KAAKb,MAAMV,iBAAkBuB,KAAKb,MAAM6E,oBAAqBhE,KAAKb,MAAM4E,aAAc/D,KAAKb,MAAM8E,iBAAkBxF,iBAAkBuB,KAAKb,MAAMV,iBAAkBH,QAAS0B,KAAKjI,MAAMuG,QAASD,SAAU2B,KAAKjI,MAAMsG,SAAUH,cAAe8B,KAAKoS,WAAYnU,aAAc+B,KAAKb,MAAMiT,aAEpiB,yBAAKpV,MAAO,CAACwK,UAAW,KACpB,uBAAGzK,UAAU,YAAYqB,QAAS,WAC9B,EAAKrG,MAAMgE,SAASC,GAChB,cAAe,CACXzB,IAAK,EAAKxC,MAAMwC,IAChB2H,IAAK,EAAKnK,MAAM2E,KAEpB,GACF6S,MAAK,SAACiD,GACJ,IAAIH,EAAW,EAAKlT,MAAMgT,eACtBvN,EAAQ,EAAKzF,MAAMtB,aACvB+G,EAAM4N,EAAOhV,MAAO,EACpB6U,EAASzM,SAASrH,KAAK,CAACrC,KAAM,OAAQC,QAAQqW,EAAOhV,MACrD,EAAKyB,SAAS,CAACmT,WAAWI,EAAOhV,IAAK2U,eAAgBE,EAAUxU,aAAc+G,IAAQ,kBAAO,EAAKwN,WAAWlY,QAAQuY,mBAE1H,6BAAK,uBAAG1V,UAAU,uCAAsC,yBAAKC,MAAO,CAACwB,QAAS,eAAgB0I,WAAY,MAAOlH,KAAKjI,MAAM4J,cAAc+Q,SAC7I,uBAAG3V,UAAU,YAAYqB,QAAS,cAAA1D,EAAA,kCAAAA,EAAA,sEACZsF,KAAKjI,MAAMgE,SAASC,GAClC,iBAAkB,CACdzB,IAAKyF,KAAKjI,MAAMwC,IAChB0X,OAAQjS,KAAKjI,MAAM2E,KAJG,OAC1BuF,EAD0B,OAM3BC,IACHlC,KAAKjI,MAAMuG,QAAQC,KAAnB,oBAAqC0D,EAArC,QAP8B,gDAQhCzH,KAAKwF,OAAO,6BAAK,uBAAGjD,UAAU,uCAAsC,yBAAKC,MAAO,CAACwB,QAAS,eAAgB0I,WAAY,MAAOlH,KAAKjI,MAAM4J,cAAcgR,SACxJ,yBAAK5V,UAAU,iBAAf,gB,GAvOLsG,aAiPR4M,gBAAW+B,K,wGCzIXY,IA5Ff,SAAe7a,GACX,IAAM+Y,EAAe/Y,EAAM4J,cAAckR,WADvB,EAEkB7a,oBAAS,GAF3B,mBAEX8a,EAFW,KAECC,EAFD,OAGc/a,oBAAS,GAHvB,mBAGXgb,EAHW,KAGDC,EAHC,KAKZtW,EAAOuW,YAAU,CAC1BlU,GACKgU,EACJ,CACIlH,MAAO,IACPhF,MAAM,8BACNoF,gBAAiB,2BAKrB,CACIJ,MAAOgH,EAAa,IAAI,IACxBhM,MAAM,uBAENoF,gBAAiB,qBAMnB,OAAO,kBAAC,IAASiH,MAAV,CACTzW,GAAG,QACH0W,UAAU,EACVlX,KAAK,OACL4U,aAAc,GACd9T,MAAOL,EACPI,UAAU,QACVH,IAAK7E,EAAM4K,UAEL0Q,QACI,SAACC,GACGA,EAAMhE,OAAOnK,MAAQ,GACrB4N,GAAc,IAGtBQ,OAAQ,SAAA1W,GACJkW,GAAc,GACdE,GAAY,GACZpW,EAAEyS,OAAOnK,MAAQ,IAErBqO,QACI,SAACF,GACG,GAAkB,UAAdA,EAAM7V,IAAiB,CACvB6V,EAAM1D,UACNqD,GAAY,GACZ,IAAIQ,EAAWH,EAAMhE,OAAOnK,MACxBuO,EAAWC,QAAaF,GACxBnN,OAAMhH,EACNsU,OAAQtU,EACRoU,EAASzZ,OAAS,IAEdyZ,EAAS,GAAGG,KAGZvN,EAAMoN,EAAS,GAAGG,IAAIhJ,OACtB+I,EAAQF,EAAS,GAAGI,MAAMjJ,OAE1B4I,EAAWA,EAASM,QAAQL,EAAS,GAAGM,KAAM,IAAItI,SAKlDpF,EAAMoN,EAAS,GAAGI,MAAMjJ,OAExB4I,EAAWA,EAASM,QAAQL,EAAS,GAAGM,KAAM,IAAItI,SAG1D,IAAIuI,EAAQ,CACJ1Z,IAAKxC,EAAMwC,IACX2H,IAAK,GACLoE,MACAsN,QACAvR,KAAMoR,GAEd1b,EAAMgE,SAASC,GACX,cAAeiY,GACjB1E,MAAK,WACH+D,EAAMhE,OAAO4E,YAK7BlD,YAAcF,GAA+B,IAAdvV,KAAKiJ,SAAe,EAAK,OAAS,Q,yLC1GnE9F,G,aAAWC,EAAQ,KAwBnBwV,E,kDACF,WAAYpc,GAAQ,IAAD,6BACf,cAAMA,GACN2G,EAAS,gBAET,EAAKS,MAAQ,CAChBlD,MAAO,GACPmY,aAAc,GACdlF,MAAO,GACPmF,WAAW,EACXC,SAAU,EACVC,WAAY,GACZC,MAAO,IAEX,EAAKC,SAAW3b,IAAMC,YACtB,EAAK2b,kBAAoB5b,IAAMC,YAdT,E,iEAkBlBiH,KAAKb,MAAMoV,YAAcvU,KAAKjI,OAC9BiI,KAAK2U,iB,0CAKT3U,KAAK2U,eACL3U,KAAKf,SAAS,CAACsV,WAAYvU,KAAKjI,QAChCiI,KAAK4U,a,mKAIe5U,KAAKjI,MAAM6F,OAAO0C,GAAGyE,mBAAmB/E,KAAKjI,MAAMwC,K,OAAjEsa,E,OAAuE,GAAG,GAC1EC,EAAMC,OAAOC,QAAQH,GAAMjc,KAAI,YAAmB,IAAD,mBAAhB6E,EAAgB,KACnD,MAAO,CAAC,IAD2C,KAC9B,WAAYA,EAAK,mBAE1CuC,KAAKf,SAAS,CAACuV,MAAOM,I,uIAIlB9U,KAAKyU,SAASva,SACP8F,KAAKyU,SAASva,QAAQ+a,WACjCjV,KAAKf,SAAS,CAACiQ,MAAO,GAAIoF,SAAU,IACpCtU,KAAK4U,a,kCAIUM,GAIf,OAHoBlV,KAAKb,MAAMlD,MAAMJ,QAAO,SAAAmC,GACxC,OAAOA,EAAK,GAAGmX,cAAc3b,QAAQ0b,EAAWC,gBAAkB,O,qCAOtEnV,KAAKf,SAAS,CAAChD,MAAM,CAEpB,CAAC,YAAa,WAAY,GAAI,+BAE9B,CAAC,aAAc,YAAa,GAAI,uBAChC,CAAC,YAAa,WAAY,GAAI,wBALX,mBAMhB+D,KAAKjI,MAAMkE,MAAM,GAAGrD,KAAI,SAAAwc,GAAC,MAAI,CAAC,IAAIA,EAAE/S,KAAM,eAAgB+S,EAAE1Y,GAAI,0BANhD,YAOhBsD,KAAKb,MAAMqV,QAEXD,WAAYvU,KAAKjI,U,oCAIJ8E,GACjB,IAAMwY,EAAUxY,EAAEY,IAClB,GAAe,SAAX4X,EAAoB,CACpB,IAAIC,EAAetV,KAAKuV,YAAYvV,KAAKb,MAAM+P,OAAOlP,KAAKb,MAAMmV,UAGjE,GAAMgB,GAAiBtV,KAAKb,MAAM+P,OAAiC,GAAvBlP,KAAKb,MAAMmV,SAOhD,CAAC,IAAD,EACJkB,EAAqBF,EAAa3J,MAAM,GAC9C3L,KAAKjI,MAAMuG,QAAQC,KAAnB,WAA4B+W,EAAa,GAAzC,YAA+CA,EAAa,MAC5D,EAAAtV,KAAKjI,OAAMsG,SAAX,oBAAuBmX,IACvBxV,KAAKjI,MAAM0d,UAAUD,QAVjBxV,KAAKb,MAAMkV,WAAarU,KAAKjI,MAAMuG,QAAQrE,OAAS,EACpD+F,KAAKjI,MAAMuG,QAAQoX,SAEd1V,KAAKjI,MAAMuG,QAAQrE,OAAS,GAAK+F,KAAKjI,MAAMuG,QAAQqX,YAC7D3V,KAAKf,SAAS,CAACoV,WAAYrU,KAAKb,MAAMkV,YAQnCrU,KAAKjI,MAAM6d,cACR,CACH,IAAMC,EAAM7V,KAAKb,MAAMmV,SACjBwB,EAAM9V,KAAKuV,YAAYvV,KAAKb,MAAM+P,OAAOjV,OAAO,EACvC,WAAXob,GAAyBxY,EAAEkZ,SAAsB,KAAXV,GACzCQ,EAAM,EACN7V,KAAKf,SAAS,CAACqV,SAAUuB,EAAI,IACxB7V,KAAKf,SAAS,CAACqV,SAAUwB,IAC9B9V,KAAK0U,mBAAoB1U,KAAK0U,kBAAkBxa,QAAQ8b,eAAe,CACvEC,SAAU,SACVC,MAAO,UAEc,aAAXb,GAA2BxY,EAAEkZ,SAAsB,KAAXV,KAClDQ,GAAOC,EACP9V,KAAKf,SAAS,CAACqV,SAAU,IACpBtU,KAAKf,SAAS,CAACqV,SAAUuB,EAAI,IAClC7V,KAAK0U,mBAAoB1U,KAAK0U,kBAAkBxa,QAAQ8b,eAAe,CACvEC,SAAU,SACVC,MAAO,c,+BAOC,IAAD,OACZ,OACI,kBAAC,IAAD,CACHxI,OAAQ1N,KAAKjI,MAAMoe,QACnBC,UAAU,EACVzI,SAAS,WACT0I,WAAW,EACXC,aAActW,KAAKuW,SACnBvK,aAAchM,KAAKjI,MAAM6d,SAEzB,yBAAK7Y,UAAU,yBACX,kBAAC,IAAD,CACHsZ,WAAW,EACXzZ,IAAKoD,KAAKyU,SACV2B,UAAU,EACVI,YAAY,EACZzZ,UAAU,aAEViU,YAAW,uBAA0C,GAAvBhR,KAAKb,MAAMmV,UAAqC,IAApBtU,KAAKb,MAAM+P,MAAa,kBAAoB,IAEtGkC,YAAa,SAAAvU,GAAC,OAAI,EAAKoC,SAAS,CAACiQ,MAAOrS,EAAEwU,OAAOlM,MAAOmP,SAAU,KAClEmC,SAAU,EACVC,UAAW1W,KAAK2W,gBAQb,yBAAK5Z,UAAU,kBACjBiD,KAAKuV,YAAYvV,KAAKb,MAAM+P,OAAOtW,KAAI,SAACoF,EAAM1D,GAAO,IAAD,EACjD,OACH,4BACIyC,UAAU,eADd,gDAEgC,EAAKoC,MAAMmV,UAAYha,EAAI,oBAAsB,KAFjF,oBAGU,EAAK6E,MAAMmV,UAAYha,EAAI,EAAKoa,kBAAoB,MAH9D,8BAIkB,WACjB,EAAKzV,SAAS,CAACqV,SAAUha,OAL1B,yBAOa,WAAK,IAAD,EAChB,EAAKvC,MAAMuG,QAAQC,KAAnB,WAA4BP,EAAK,GAAjC,YAAuCA,EAAK,MAC5C,IAAKjG,OAAMsG,SAAX,oBAAuBL,EAAK2N,MAAM,KAClC,EAAK5T,MAAM6d,aAVZ,GAcI,uBAAG7Y,UAAS,UAAKiB,EAAK,GAAV,gBAA4BhB,MAAO,KAE/C,uBACHD,UAAS,eACJiB,EAAK,e,GAnKaqF,aAmLb4M,cAAWkE,GC5MpBzV,EAAWC,EAAQ,IAGnBiY,E,kDACF,WAAY7e,GAAQ,IAAD,8BACf,cAAMA,IAcV8e,SAAW,CACd,CAAC,QAAS,WAAK,EAAKC,iBAAL,eAA4B,KAC3C,CAAC,QAAS,WAAK,EAAKA,iBAAL,eAA4B,KAC3C,CAAC,QAAS,WAAK,EAAKA,iBAAL,eAA4B,KAC3C,CAAC,QAAS,WAAK,EAAKA,iBAAL,eAA4B,KAC3C,CAAC,QAAS,WAAK,EAAKA,iBAAL,eAA4B,KAC3C,CAAC,QAAS,WAAK,EAAKA,iBAAL,eAA4B,KAC3C,CAAC,QAAS,WAAK,EAAKA,iBAAL,eAA4B,KAC3C,CAAC,QAAS,WAAK,EAAKA,iBAAL,eAA4B,KAC3C,CAAC,QAAS,WAAK,EAAKA,iBAAL,eAA4B,KAC3C,CAAC,QAAS,WAAK,EAAKA,iBAAL,eAA4B,EAAK3X,MAAM4X,aAAa9c,OAAO,KAC1E,CAAC,QAAS,WAAK,EAAK+c,oBAAL,eAA+B,KAC9C,CAAC,QAAS,WAAK,EAAKA,oBAAL,gBAAgC,KAC5C,CAAC,gBAAiB,WAAK,EAAKC,aAAa,EAAKlf,MAAMgJ,UA5BjC,EA+BnBmW,eAAiB,CACpB,CAAC,YAAa,WAAK,EAAKC,SAAL,mBA9BZzY,EAAS,gBAET,EAAKS,MAAQ,CAChB4X,aAAc,GACdK,cAAe,EACf7C,WAAY,GACZ4B,SAAS,GARS,E,6DAqCFkB,EAAMC,GAAK,IAAD,EACxBC,EAAOvX,KAAKb,MAAM4X,aAAaO,GACrCD,EAAKtf,MAAMuG,QAAQC,KAAnB,WAA4BgZ,EAAK,GAAjC,YAAuCA,EAAK,MAC5C,EAAAF,EAAKtf,OAAMsG,SAAX,oBAAuBkZ,IACvBvX,KAAKf,SAAS,CAACmY,cAAeE,M,0CAGPD,EAAMC,GACXtX,KAAKb,MAAM4X,aAAa/W,KAAKb,MAAMiY,cAAcE,GAE/DtX,KAAK8W,iBAAiBO,EAAMrX,KAAKb,MAAMiY,cAAcE,GAE9CtX,KAAKb,MAAMiY,eAAiBpX,KAAKb,MAAM4X,aAAa9c,OAAO,EAClE+F,KAAK8W,iBAAiBO,EAAM,GAE5BrX,KAAK8W,iBAAiBO,EAAMrX,KAAKb,MAAM4X,aAAa9c,OAAO,K,sCAI5C+D,GAAO,IACtB6X,EADqB,OAEzB7V,KAAKb,MAAM4X,aAAapM,SAAQ,SAAC6M,EAAald,GACtC,EAAKmd,mBAAmBD,EAAaxZ,KAC5C6X,EAAMvb,MAGP0F,KAAKf,SAAS,CAACmY,cAAevB,M,yCAGR6B,EAAMC,GAC5B,IAAK,IAAIrd,EAAI,EAAGwb,EAAM4B,EAAKzd,OAAQK,EAAIwb,EAAKxb,IACxC,GAAIod,EAAKpd,KAAOqd,EAAKrd,GACxB,OAAO,EAGR,OAAO,I,+BAIK+c,GACZrX,KAAKf,SAAS,CAACkX,SAAUnW,KAAKb,MAAMgX,Y,mCAGpBvZ,GACZA,GACAA,EAAI1C,QAAQkW,U,2CAOZpQ,KAAKb,MAAMoV,YAAcvU,KAAKjI,OAC9BiI,KAAKf,SAAS,CACjB8X,aAAa,CACT,CAAC,WAAY,IAEb,CAAC,YAAa,IACd,CAAC,WAAY,KAJL,mBAKL/W,KAAKjI,MAAMsH,aAAazG,KAAI,SAAAwc,GAAC,MAAI,CAAC,eAAgBA,EAAE1Y,QAL/C,YAMLsD,KAAKjI,MAAMqH,SAASxG,KAAI,SAAAwc,GAAC,MAAI,CAAC,WAAYA,EAAE1Y,SAEnD6X,WAAYvU,KAAKjI,U,0CAalBiI,KAAKf,SAAS,CAACsV,WAAYvU,KAAKjI,QAEzBiI,KAAK6W,SAASje,KAAI,SAAAgf,GACxBC,IAAUrd,KAAV,MAAAqd,IAAS,YAASD,OAGnB5X,KAAKkX,eAAete,KAAI,SAAAgf,GACvBC,IAAUC,WAAV,MAAAD,IAAS,YAAeD,S,6CAMlB5X,KAAK6W,SAASje,KAAI,SAAAgf,GACdC,IAAUE,OAAV,MAAAF,IAAS,YAAWD,S,+BAIlB,IAAD,OACZ,OACI,kBAAC,EAAD,CACHzB,QAASnW,KAAKb,MAAMgX,QACpBP,QAAS,kBAAK,EAAK3W,SAAS,CAACkX,SAAS,KACtCla,MAAO,CAAC+D,KAAKjI,MAAMsH,cACnBhB,SAAU2B,KAAKjI,MAAMsG,SACrBoX,UAAWzV,KAAKgY,gBAChBpa,OAAQoC,KAAKjI,MAAM6F,OACnBrD,IAAKyF,KAAKjI,MAAMwC,IAChBwB,SAAUiE,KAAKjI,MAAMgE,e,GA7IAsH,aAsJR4M,gBAAW2G,I,0DClK1B,IAAIhe,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASqf,EAAoBC,GAC5B,IAAIC,EAAoB/C,EAAExc,EAAKsf,GAC9B,OAAOE,QAAQC,UAAU9I,MAAK,WAC7B,IAAI1S,EAAI,IAAIyb,MAAM,uBAAyBJ,EAAM,KAEjD,MADArb,EAAE0b,KAAO,mBACH1b,KAIR,IAAI4N,EAAM7R,EAAIsf,GAAMxb,EAAK+N,EAAI,GAC7B,OAAO0N,EAAoBtb,EAAE4N,EAAI,IAAI8E,MAAK,WACzC,OAAO4I,EAAoBzb,MAG7Bub,EAAoBrM,KAAO,WAC1B,OAAOmJ,OAAOnJ,KAAKhT,IAEpBqf,EAAoBvb,GAAK,IACzB8b,EAAOC,QAAUR,G,oBChMjB,IAAIrf,EAAM,CACT,sBAAuB,CACtB,IACA,KAGF,SAASqf,EAAoBC,GAC5B,IAAIC,EAAoB/C,EAAExc,EAAKsf,GAC9B,OAAOE,QAAQC,UAAU9I,MAAK,WAC7B,IAAI1S,EAAI,IAAIyb,MAAM,uBAAyBJ,EAAM,KAEjD,MADArb,EAAE0b,KAAO,mBACH1b,KAIR,IAAI4N,EAAM7R,EAAIsf,GAAMxb,EAAK+N,EAAI,GAC7B,OAAO0N,EAAoBtb,EAAE4N,EAAI,IAAI8E,MAAK,WACzC,OAAO4I,EAAoBzb,MAG7Bub,EAAoBrM,KAAO,WAC1B,OAAOmJ,OAAOnJ,KAAKhT,IAEpBqf,EAAoBvb,GAAK,IACzB8b,EAAOC,QAAUR,G,0tvBCvBbS,EAAOC,IAAUD,KAEfE,EAAO,CACTC,OAAQ,CACJC,QAAS,SAACC,EAAKC,EAAKC,GAChB,OAAQD,GACJ,IAAK,IACD,OAAOD,EAAME,EACjB,IAAK,IACD,OAAOF,EAAME,EACjB,IAAK,KACD,OAAOF,GAAOE,EAClB,IAAK,KACD,OAAOF,GAAOE,EAClB,IAAK,KACD,OAAOF,GAAOE,EAClB,IAAK,KACD,OAAOF,GAAOE,EAClB,IAAK,MACD,OAAOF,EAAI7d,SAAS+d,GACxB,IAAK,OACD,OAAQF,EAAI7d,SAAS+d,GACzB,QACI,MAAM,IAAIC,UAAU,qBAAuBF,KAGvDG,IAAK,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAqB,SAACC,GACvB,IAAIC,EAAMD,EAAIE,OACVD,EAAI1F,QAAO0F,EAAI1F,MAAQ0F,EAAI1F,MAAMrN,SACjC+S,EAAIhT,MAAKgT,EAAIhT,IAAMgT,EAAIhT,IAAIC,SAHA,oBAIH6S,GAJG,IAI/B,yDAAUL,EAAV,KAAeC,EAAf,KAAoBC,EAApB,KACI,IAAKL,EAAKC,OAAOC,QAAQQ,EAAIP,GAAMC,EAAKC,GACpC,OAAO,GANgB,8BAO/B,OAAO,IAEXO,IAAK,sCAAIJ,EAAJ,yBAAIA,EAAJ,uBAAqB,SAACC,GACvB,IAAIC,EAAMD,EAAIE,OACVD,EAAI1F,QAAO0F,EAAI1F,MAAQ0F,EAAI1F,MAAMrN,SACjC+S,EAAIhT,MAAKgT,EAAIhT,IAAMgT,EAAIhT,IAAIC,SAHA,oBAKH6S,GALG,IAK/B,yDAAUL,EAAV,KAAeC,EAAf,KAAoBC,EAApB,KACI,GAAIL,EAAKC,OAAOC,QAAQQ,EAAIP,GAAMC,EAAKC,GACnC,OAAO,GAPgB,8BAQ/B,OAAO,IAEXQ,QAAS,SAACC,GAAD,2BAAeN,EAAf,iCAAeA,EAAf,yBAAgC,SAACC,GACtC,IAAIC,EAAMD,EAAIE,OACVD,EAAI1F,QAAO0F,EAAI1F,MAAQ0F,EAAI1F,MAAMrN,SACjC+S,EAAIhT,MAAKgT,EAAIhT,IAAMgT,EAAIhT,IAAIC,SAC/B,IAJ8C,EAI1CoT,EAAU,EAJgC,cAKlBP,GALkB,IAK9C,yDAAUL,EAAV,KAAeC,EAAf,KAAoBC,EAApB,KACI,GAAIL,EAAKC,OAAOC,QAAQQ,EAAIP,GAAMC,EAAKC,MACjCU,GACaD,EACX,OAAO,GAT2B,8BAW9C,OAAO,IAEXE,OAAQ,SAACF,GAAD,2BAAeN,EAAf,iCAAeA,EAAf,yBAAgC,SAACC,GACrC,IAAIC,EAAMD,EAAIE,OACVD,EAAI1F,QAAO0F,EAAI1F,MAAQ0F,EAAI1F,MAAMrN,SACjC+S,EAAIhT,MAAKgT,EAAIhT,IAAMgT,EAAIhT,IAAIC,SAC/B,IAJ6C,EAIzCoT,EAAU,EAJ+B,cAKjBP,GALiB,IAK7C,yDAAUL,EAAV,KAAeC,EAAf,KAAoBC,EAApB,KACI,GAAIL,EAAKC,OAAOC,QAAQQ,EAAIP,GAAMC,EAAKC,MACjCU,EACYD,EACV,OAAO,GAT0B,8BAW7C,OAAO,KAGfG,MAAO,CACHvJ,IAAK,SAACwJ,GAEF,OADAzJ,QAAQC,IAAIwJ,GACLA,GAEXC,MAAO,SAACD,GAEJ,OADAzJ,QAAQ0J,MAAMD,GACPA,K,4CAKnB,WAAwBE,GAAxB,SAAAtf,EAAA,+EACWge,EAAK,QAASsB,EAAQ,SAAS/O,MACrCsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KACdthB,KAAI,SAAAygB,GAAG,OAAIA,EAAI3c,SAClByd,OAAM,SAAAC,GACJ/J,QAAQgK,MAAM,0BAA2BD,OALjD,4C,+BASeE,E,gFAAf,WAAiCN,EAAQ9K,GAAzC,eAAAxU,EAAA,sEACyBge,EAAK,QAASsB,EAAQ,SACtC/O,MACAsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KACdre,OAAOqT,MACViL,OAAM,SAAAC,GACJ/J,QAAQgK,MAAM,0BAA2BD,MANrD,cACQG,EADR,yBAQWA,EAAS3hB,KAAI,SAAAygB,GAAG,OAAIA,EAAI3c,OARnC,4C,+BAWe8d,E,8EAAf,WAA6BR,GAA7B,eAAAtf,EAAA,sEAC0Bge,EAClB,QAASsB,EACT,SAGC/O,MACAsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KACdre,OAAO+c,EAAKC,OAAOM,IAAI,CAAC,UAAW,KAAM,IAAK,CAAC,aAAc,MAAM,KACnEsB,MAAK,SAAC/f,EAAEuO,GAAH,OAASvO,EAAE6e,OAAOphB,MAAQ8Q,EAAEsQ,OAAOphB,YAC3CgiB,OAAM,SAAAC,GACJ/J,QAAQgK,MAAM,0BAA2BD,MAXrD,cACQM,EADR,yBAaWA,EAAU9hB,KAAI,SAAAygB,GAAG,OAAIA,EAAI3c,OAbpC,4C,+BAgBeie,E,kFAAf,WAA0BX,EAAQY,EAAWC,GAA7C,iBAAAngB,EAAA,6DACQogB,EAASD,GAAY,IAAIrX,MACtBsH,SAASgQ,EAAOC,WAAa,IAFxC,SAIuBrC,EAAK,QAASsB,EAC7B,SAGC/O,MACAsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KACdre,QAAO,SAAAwd,GAAG,QACNA,EAAIE,OAAOjT,KAAO+S,EAAIE,OAAOjT,IAAIC,SAAYuU,EAAO5N,UAAU,OAC9DmM,EAAIE,OAAO3F,OAASyF,EAAIE,OAAO3F,MAAMrN,SAAY,IAAI/C,MAAQ0J,UAAW,OAC9C,IAA1BmM,EAAIE,OAAOyB,YACXJ,EAAUvB,EAAI3c,OAElB+d,MAAK,SAAC/f,EAAEuO,GAAH,OAASvO,EAAE6e,OAAOjT,IAAIC,QAAU0C,EAAEsQ,OAAOjT,IAAIC,cACzD4T,MAAM9J,QAAQgK,OAjBpB,cAIQY,EAJR,yBAkBWA,EAAOriB,KAAI,SAAAygB,GAAG,OAAIA,EAAI3c,OAlBjC,4C,+BAqBewe,E,kFAAf,WAAwBlB,EAAQY,EAAWC,GAA3C,iBAAAngB,EAAA,6DACQogB,EAASD,GAAY,IAAIrX,MACtBsH,SAAS,GAAG,GAAG,GAAG,KAF7B,SAIuB4N,EAAK,QAASsB,EAC7B,SAGC/O,MACAsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KACdre,QAAO,SAAAwd,GAAG,QACNA,EAAIE,OAAOjT,KAAO+S,EAAIE,OAAOjT,IAAIC,SAAYuU,EAAO5N,UAAU,OAC9DmM,EAAIE,OAAO3F,OAASyF,EAAIE,OAAO3F,MAAMrN,SAAY,IAAI/C,MAAQ0J,UAAW,OAC9C,IAA1BmM,EAAIE,OAAOyB,YACXJ,EAAUvB,EAAI3c,OAElB+d,MAAK,SAAC/f,EAAEuO,GAAH,OAASvO,EAAE6e,OAAOjT,IAAIC,QAAU0C,EAAEsQ,OAAOjT,IAAIC,cACzD4T,MAAM9J,QAAQgK,OAjBpB,cAIQY,EAJR,yBAkBWA,EAAOriB,KAAI,SAAAygB,GAAG,OAAIA,EAAI3c,OAlBjC,4C,kEAqBA,WAAkCsd,GAAlC,iCAAAtf,EAAA,6DAA0CygB,EAA1C,+BAA+C,IAAI3X,KAAK,KAAM,EAAG,GAAK6G,EAAtE,+BAA2E,IAAI7G,KAAK,KAAM,EAAG,GAAK4X,EAAlG,yCAKsB1C,EAAK,QAASsB,EAAQ,SACvB/O,MACAsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KACdre,QAAO,SAAAwd,GAAG,QACNA,EAAIE,OAAOjT,QACP+S,EAAIE,OAAO3F,QACP,IAAIpQ,KAA4B,IAAvB6V,EAAIE,OAAOjT,IAAIC,UAAkB8D,GAAQ,IAAI7G,KAA4B,IAAvB6V,EAAIE,OAAOjT,IAAIC,UAAkB4U,GAAQ,IAAI3X,MAAW,IAAIA,KAA8B,IAAzB6V,EAAIE,OAAO3F,MAAMrN,cAIzJ1K,QAAO,SAAAwd,GAAG,OAAKA,EAAIE,OAAOyB,cAC1BP,MAAK,SAAC/f,EAAEuO,GAAH,OAASvO,EAAE6e,OAAOjT,IAAIC,QAAU0C,EAAEsQ,OAAOjT,IAAIC,cACrD4T,MAAM9J,QAAQgK,OAjBpC,cAKQgB,EALR,yBAkBWD,EAAaC,EAAMziB,KAAI,SAAAygB,GAAG,MAAI,CAACA,EAAI3c,GAAI2c,EAAIE,WAAS8B,EAAMziB,KAAI,SAAAygB,GAAG,OAAIA,EAAI3c,OAlBpF,4C,kEAqBA,WAAwBsd,EAAQsB,GAAhC,2BAAA5gB,EAAA,6DACI2V,QAAQkL,KAAK,8CADjB,SAEoBf,EAAcR,GAFlC,OAEQwB,EAFR,OAGQvO,EAAI,IAAIzJ,KACRiY,EAAU,GACVC,EAAO,GACFphB,EAAE,EANf,YAMkBA,GAAG,GANrB,kCAO6B4gB,EAASlB,EAAQsB,EAAWrO,GAPzD,QAOY9Q,EAPZ,OAQYwf,EAAQxf,EACZsf,EAAQld,KAAKpC,EAAQN,QAAO,SAAAC,GAAC,OAAK4f,EAAKxgB,SAASY,OAChD4f,EAAOC,EACP1O,EAAExJ,QAAQwJ,EAAEvJ,UAAY,GAXhC,QAMwBpJ,IANxB,gDAaWmhB,EAAQ7iB,KAAI,SAAAgjB,GAAG,OAAIA,EAAI/f,QAAO,SAAAC,GAAC,OAAI0f,EAAIhiB,QAAQsC,GAAK,SAb/D,6C,kEAgBA,WAA6Bke,EAAQ6B,GAArC,mBAAAnhB,EAAA,sEACoB8f,EAAcR,GADlC,cACQwB,EADR,gBAEoBb,EAAWX,EAAQ6B,GAFvC,cAEQD,EAFR,OAGQE,EAAgBF,EAAI/f,QAAO,SAAAC,GAAC,OAAI0f,EAAIhiB,QAAQsC,GAAK,KAHzD,kBAIW,CAAC0f,EAAKM,IAJjB,4C,+BAOeC,E,gFAAf,WAAkC/B,EAAQgC,GAA1C,eAAAthB,EAAA,sEACqBge,EAAK,QAASsB,EAAQ,SAAS/O,MAC3CsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KACdre,QAAO,SAAAwd,GAAG,OAAIA,EAAI3c,KAAOsf,QAHtC,YACQ1C,EADR,OAIM,IAJN,yCAKoBA,EAAIC,QALxB,4C,kEAQA,WAAmCS,EAAQgC,EAAQC,GAAnD,eAAAvhB,EAAA,sEACmBqhB,EAAmB/B,EAAQgC,GAD9C,qBACQE,EADR,QAEcD,GAFd,SAGUvD,EAAK,QAASsB,EAAQ,QAASgC,GAChC5hB,IAAI8hB,GACJ/B,MAAM9J,QAAQgK,OALvB,4C,+BAQe9Z,E,8EAAf,WAAmCyZ,GAAnC,qBAAAtf,EAAA,6DACQyhB,EAAkB,GAClBC,EAAkB,GAClBC,EAAiB,GAHzB,SAKsB3D,EAAK,QAASsB,EAAQ,YACnC/O,MANT,qBAQSiP,KAAKvP,SAAQ,SAAArI,GACd,GAAIA,EAAKga,SAAoC,IAA1Bha,EAAKiX,OAAOgD,UAAoB,CAC/CH,EAAgB9Z,EAAK5F,IAAM4F,EAAKiX,OAAOlX,KACvC8Z,EAAgB7Z,EAAKiX,OAAOlX,MAAQC,EAAK5F,GACzC,IAAI8f,EAAW,GACfA,EAAS9f,GAAK4F,EAAK5F,GACnB8f,EAASna,KAAOC,EAAKiX,OAAOlX,KAC5Bma,EAASC,UAAYna,EAAKiX,OAAOphB,MACjCkkB,EAAe9d,KAAKie,OAI5BH,EAAe5B,MAAK,SAAC/f,EAAEuO,GAAH,OAASvO,EAAE+hB,UAAUxT,EAAEwT,aACvCC,EAAM,CAACN,EAAiBD,EAAiBE,GArBjD,kBAsBWK,GAtBX,6C,kEAyBA,WAAuB1C,GAAvB,eAAAtf,EAAA,6DACQiiB,EAAO,GADf,SAGUjE,EAAK,QAASsB,EAAQ,QAAQ/O,MAC/BsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KAAKvP,SAAS,SAAAiS,GACzBA,EAAIN,QACJK,EAAKpe,KAAKqe,EAAIrD,cAGvBY,MAAM9J,QAAQgK,OATrB,gCAUWsC,GAVX,4C,kEAaA,WAAkC3C,GAAlC,qBAAAtf,EAAA,6DAEQyhB,EAAkB,GAClBC,EAAkB,GAH1B,SAIU1D,EAAK,QAASsB,EAAQ,YAAY/O,MACnCsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KAAKvP,SAAQ,SAAArI,GACxBA,EAAKga,SACLF,EAAgB9Z,EAAK5F,IAAM4F,EAAKiX,OAAOlX,KACvC8Z,EAAgB7Z,EAAKiX,OAAOlX,MAAQC,EAAK5F,UAGhDyd,MAAM9J,QAAQgK,OAXvB,cAaQwC,EAAc,GACdC,EAAc,GAdtB,SAeUpE,EAAK,QAASsB,EAAQ,QAAQ/O,MAC/BsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KAAKvP,SAAQ,SAAAiS,GACxBA,EAAIN,SACJQ,EAAYF,EAAIlgB,IAAMkgB,EAAIrD,OAAOlX,KACjCwa,EAAYD,EAAIrD,OAAOlX,MAAQua,EAAIlgB,UAG1Cyd,MAAM9J,QAAQgK,OAtBvB,gCAwBW,CAAC,CAAC+B,EAAiBD,GAAkB,CAACW,EAAaD,KAxB9D,4C,+BA2Bepc,E,8EAAf,WAA+BuZ,GAA/B,mBAAAtf,EAAA,6DACQqiB,EAAc,GACdC,EAAY,GACZC,EAAK,GAHb,SAIUvE,EAAK,QAASsB,EAAQ,gBAAgB/O,MACvCsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KAAKvP,SAAQ,SAAAuS,GACxBA,EAAKZ,SACLU,EAAUE,EAAKxgB,IAAM,CAAC2F,KAAM6a,EAAK3D,OAAOlX,KAAM6M,MAAOgO,EAAK3D,OAAOrK,MAAOtK,MAAOsY,EAAK3D,OAAO3U,MAAOuK,KAAM+N,EAAK3D,OAAOpK,MACpH4N,EAAYG,EAAK3D,OAAOlX,MAAQ,CAAC3F,GAAIwgB,EAAKxgB,GAAIwS,MAAOgO,EAAK3D,OAAOrK,MAAOtK,MAAOsY,EAAK3D,OAAO3U,MAAOuK,KAAM+N,EAAK3D,OAAOpK,MACpH8N,EAAG1e,KAAH,aAAS7B,GAAIwgB,EAAKxgB,IAAOwgB,EAAK3D,gBAGrCY,MAAM9J,QAAQgK,OAZvB,cAcI4C,EAAGxC,MAAK,SAAC/f,EAAEuO,GAAH,OAASvO,EAAEvC,MAAM8Q,EAAE9Q,SAd/B,kBAgBW,CAAC6kB,EAAWD,EAAaE,IAhBpC,4C,kEAmBA,WAA6BjD,EAAQmD,EAAWC,GAAhD,SAAA1iB,EAAA,sEACUge,EAAK,QAASsB,EAAQ,WAAYmD,GACnCE,OAAOD,GACPjD,MAAM9J,QAAQgK,OAHvB,4C,+BAMeiD,E,kFAAf,WAA0BtD,EAAQgC,EAAQoB,GAA1C,SAAA1iB,EAAA,sEACUge,EAAK,QAASsB,EAAQ,QAASgC,GAChCqB,OAAOD,GACPjD,MAAM9J,QAAQgK,OAHvB,4C,kEAMA,WAAiCL,EAAQgC,EAAQoB,GAAjD,SAAA1iB,EAAA,sEACUge,EAAK,QAASsB,EAAQ,eAAgBgC,GACvCqB,OAAOD,GACPjD,MAAM9J,QAAQgK,OAHvB,4C,+BAMekD,E,gFAAf,WAAuBvD,EAAQwD,GAA/B,mBAAA9iB,EAAA,yDAG4B,KAApB8iB,EAAQC,QAHhB,gCAI0BjD,EAAcR,GAJxC,OAIY0D,EAJZ,OAIiDzjB,OACzCujB,EAAQrlB,MAAQulB,EALxB,uCAO2BlY,GAAoBwU,EAAQwD,EAAQC,SAP/D,OAOYE,EAPZ,OAOyE/X,SAAS3L,OAC1EujB,EAAQrlB,MAAQwlB,EARxB,eAaSH,EAAQ5J,QACT4J,EAAQ5J,MAAQ,IAAIpQ,MAd5B,UAgBwBkV,EAAK,QAASsB,EAAQ,SAAS4D,IAAIJ,GAhB3D,eAgBQxB,EAhBR,OAgBqEtf,GAhBrE,kBAkBWsf,GAlBX,6C,+BAqBe6B,E,qFAAf,WAA0B7D,EAAQ8D,EAASxL,GAA3C,iBAAA5X,EAAA,yDAKIqa,OAAOgJ,KAAO,SAASC,GACnB,IAAcvgB,EAAVsgB,EAAO,EACX,IAAKtgB,KAAOugB,EACJA,EAAIC,eAAexgB,IAAMsgB,IAEjC,OAAOA,IAGPzL,EAbR,gCAcuB9M,GAAoBwU,EAAQ1H,GAdnD,OAcQqL,EAdR,OAcgE/X,SAAS3L,OACjE6jB,EAAQ7L,OAASK,EAfzB,mCAiBgByC,OAjBhB,UAiBmCxU,EAAoByZ,GAjBvD,oBAiBgE,GAAxD2D,EAjBR,KAiBuBI,KAjBvB,gBAkBQD,EAAQ7L,OAAS,GAlBzB,eAoBI6L,EAAQ3lB,MAAQwlB,EAChBG,EAAQlY,SAAW,GArBvB,UAuBqB8S,EAAK,QAASsB,EAAQ,YAAY4D,IAAIE,GAvB3D,eAuBQ5b,EAvBR,OAuBqExF,GAvBrE,kBAwBWwF,GAxBX,6C,+BA2Begc,G,mFAAf,WAA8BlE,EAAQmE,GAAtC,SAAAzjB,EAAA,kEACkBge,EAAK,QAASsB,EAAQ,gBADxC,kBAC2EvZ,EAAgBuZ,GAD3F,0BACoG,GAAG/f,OADvG,MAC6D9B,MAD7D,WACkHgmB,EADlH,wCACwDP,IADxD,wDAC4HlhB,IAD5H,6C,+BAIe0hB,G,mFAAf,WAAsBpE,EAAQqE,GAA9B,SAAA3jB,EAAA,sEACkBge,EAAK,QAASsB,EAAQ,QAAQ4D,IAAI,CAACvb,KAAMgc,IAD3D,uCACsE3hB,IADtE,4C,oEAIA,WAA4Bsd,EAAQgC,GAApC,SAAAthB,EAAA,sEACUge,EAAK,QAASsB,EAAQ,QAASgC,GAAQqB,OAAO,CAChDrC,YAAY,IAFpB,4C,+BAMesD,G,qFAAf,WAA8BtE,EAAQgC,EAAQmB,GAA9C,eAAAziB,EAAA,sEACiCge,EAAK,QAASsB,EAAQ,YAAY/O,MAAMsE,KAAKqJ,EAAK2F,MAC1EhP,MAAK,SAAAnP,GAAQ,OAAIA,EAAS8Z,KAAKre,QAAO,SAAAC,GAAC,OAAIA,EAAEY,KAAOygB,QAAY5N,KAAKqJ,EAAK2F,MAAMhP,MAAK,SAAAiP,GAAC,OAAIA,EAAE,GAAGjF,OAAO3T,YAF/G,qBACQ6Y,EADR,QAI4BzC,GAJ5B,SAKUtD,EAAK,QAASsB,EAAQ,WAAYmD,GACnCE,OAAO,CAACzX,SAAU6Y,IAN3B,4C,+BASeC,G,qFAAf,WAA6B1E,EAAQgC,EAAQmB,GAA7C,eAAAziB,EAAA,sEACiCge,EAAK,QAASsB,EAAQ,YAAY/O,MAC1DsE,MAAK,SAAAnP,GAAQ,OAAIA,EAAS8Z,KAAKre,QAAO,SAAAC,GAAC,OAAIA,EAAEY,KAAOygB,KAAW,GAC/D5D,OAAO3T,YAHhB,cACQ6Y,EADR,QAKqBzC,GAAU,OAL/B,SAMUtD,EAAK,QAASsB,EAAQ,WAAYmD,GACnCE,OAAO,CAACzX,SAAU6Y,IAP3B,4C,oEAUA,WAAgCzE,EAAQ2E,EAAaxB,GAArD,eAAAziB,EAAA,sEACiCge,EAAK,QAASsB,EAAQ,YAAY/O,MAC1DsE,MAAK,SAAAnP,GAAQ,OAAIA,EAAS8Z,KAAKre,QAAO,SAAAC,GAAC,OAAIA,EAAEY,KAAOygB,KAAW,GAC/D5D,OAAO3T,YAHhB,cACQ6Y,EADR,QAKqBE,GAAe,UALpC,SAMUjG,EAAK,QAASsB,EAAQ,WAAYmD,GACnCE,OAAO,CAACzX,SAAU6Y,IAP3B,4C,oEAUA,WAAiCzE,EAAQ2E,EAAaxB,GAAtD,eAAAziB,EAAA,sEACiCge,EAAK,QAASsB,EAAQ,YAAY/O,MAAMsE,KAAKqJ,EAAK2F,MAC1EhP,MAAK,SAAAnP,GAAQ,OAAIA,EAAS8Z,KAAKre,QAAO,SAAAC,GAAC,OAAIA,EAAEY,KAAOygB,QAAY5N,KAAKqJ,EAAK2F,MAAMhP,MAAK,SAAAiP,GAAC,OAAIA,EAAE,GAAGjF,OAAO3T,YAF/G,qBACQ6Y,EADR,QAI4BE,GAJ5B,SAKUjG,EAAK,QAASsB,EAAQ,WAAYmD,GACnCE,OAAO,CAACzX,SAAU6Y,IAN3B,4C,oEASA,WAA0BzE,EAAQgC,GAAlC,6BAAAthB,EAAA,6DAA0CkkB,IAA1C,0CACyBlG,EAAK,QAASsB,EAAQ,SAAS/O,MAC/CsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,KAAKre,QAAO,SAAAwd,GAAG,OAAIA,EAAI3c,KAAOsf,KAAQ,GAAGzC,UAFpE,UAI4B,MAHpBsF,EADR,QAIiBpB,UAAiBmB,EAJlC,gCAKcN,GAAetE,EAAQgC,EAAQ6C,EAASpB,SALtD,uBAOU/E,EAAK,QAASsB,EAAQ,QAASgC,GAAQ8C,SACxC3E,MAAM9J,QAAQgK,OARvB,4C,oEAWA,WAAiCL,EAAQ+E,GAAzC,SAAArkB,EAAA,sEACUge,EAAK,QAASsB,EAAQ,eAAgB+E,GAAeD,SAD/D,4C,+BAIeE,G,mFAAf,WAA6BhF,EAAQmD,GAArC,iCAAAziB,EAAA,sEACuB8K,GAAoBwU,EAAQmD,GADnD,OACQ8B,EADR,qBAEkBA,EAAOrZ,UAFzB,IAEI,2BACmB,aADVtL,EAAsB,SACrB4B,KAAoB8iB,GAAchF,EAAQ1f,EAAE6B,QAAQO,IACrD4gB,EAAWtD,EAAQ1f,EAAE6B,QAAS,CAACshB,QAAQ,KAJpD,8CAO0BrP,GAAkB4L,GAP5C,OAOQkF,EAPR,OAQUC,GAAO,MAAGC,OAAH,oBAAaF,IAR9B,cASkBC,GATlB,kEASaX,EATb,kBAUmBzC,EAAmB/B,EAAQwE,GAV9C,uBAUkDf,QAVlD,KAU8DN,EAV9D,6BAWYG,EAAWtD,EAAQwE,EAAG,CAACf,QAAQ,KAX3C,kKAaU/E,EAAK,QAASsB,EAAQ,WAAYmD,GAAW2B,SAC9C3E,MAAM9J,QAAQgK,OAdvB,kE,oEAiBA,WAAyBL,EAAQqF,GAAjC,SAAA3kB,EAAA,sEACUge,EAAK,QAASsB,EAAQ,OAAQqF,GAAOP,SACtC3E,MAAM9J,QAAQgK,OAFvB,4C,+BAKe7U,G,mFAAf,WAAmCwU,EAAQmD,GAA3C,qCAAAziB,EAAA,6DAAsD4kB,EAAtD,gCACQ1Z,EAAW,GADnB,SAM0B8S,EAAK,QAASsB,EAAQ,YAAY/O,MAAMsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,QANpF,UAMQuD,EANR,OAM2F5hB,QAAO,SAAAwd,GAAG,OAAEA,EAAI3c,KAAOygB,KAAW,GAN7H,yCAQe,CAAEzgB,GAAIygB,EAAWvX,SAAU,GAAIsM,eAAe,EAAOuK,UAAW,EAAGnK,WAAY,IAR9F,WAAA5X,EAAA,4CAAAA,EAAA,+EAUc6kB,EAVd,KAWqB,UADCrjB,EAVtB,sCAY6B6f,EAAmB/B,EAAQuF,GAZxD,QAYgBlZ,EAZhB,UAcqBA,EAAK2U,YACNpV,EAASrH,KAAK,CAACrC,KAAM,OAAQC,QAASojB,EAAQ9C,UAAWpW,EAAKlO,SAflF,0BAmB4B,YAAT+D,EAnBnB,qBAoBgBojB,EApBhB,kCAqBoC9Z,GAAoBwU,EAAQuF,GArBhE,SAqBoB9B,EArBpB,SAsB4B7X,EAASrH,KAAK,CAACrC,KAAM,UAAWC,QAASshB,EAASvL,cAAeuL,EAAQvL,cAAeuK,UAAWgB,EAAQhB,YAtBvI,yCAwBsC/D,EAAK,QAASsB,EAAQ,YAAY/O,MAAMsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,QAxBhG,SAwBoBuD,EAxBpB,OAwBuG5hB,QAAO,SAAAwd,GAAG,OAAEA,EAAI3c,KAAO6iB,KAAQ,KAC1G3Z,EAASrH,KAAK,CAACrC,KAAM,UAAWC,QAAS,CAACO,GAAI6iB,GAASrN,cAAeuL,EAAQlE,OAAOrH,cAAeuK,UAAWgB,EAAQlE,OAAOphB,QAzB1J,iDAU+B4c,OAAOC,QAAQyI,EAAQlE,OAAO3T,UAV7D,uHA6BIA,EAAS6U,MAAK,SAAC/f,EAAEuO,GAAH,OAASvO,EAAE+hB,UAAUxT,EAAEwT,aA7BzC,kBA8BW,CAAE/f,GAAIygB,EAAWvX,SAAUA,EAAUsM,cAAeuL,EAAQlE,OAAOrH,cAAeuK,UAAWgB,EAAQlE,OAAOphB,MAAOma,WAAYmL,EAAQlE,OAAOtH,SA9BzJ,6C,oEAiCA,WAAmC+H,GAAnC,QAKmBwF,EALnB,WAAA9kB,EAAA,iGAAAA,EAAA,MAKI,WAAoCsf,EAAQmD,GAA5C,uBAAAziB,EAAA,6DACQ+kB,EAAQ,GADhB,SAEyB/G,EAAK,QAASsB,EAAQ,YAAY/O,MAAMsE,MAAK,SAAA0K,GAAI,OAAIA,EAAKC,QAFnF,cAEQuD,EAFR,OAE0F5hB,QAAO,SAAAwd,GAAG,OAAEA,EAAI3c,KAAOygB,KAAW,GAF5H,SAG4B3X,GAAoBwU,EAAQmD,GAHxD,UAGQuC,EAHR,QAIQjC,EAAQlE,OAAOrH,cAJvB,sBAKYyN,EAAQD,EAAW9Z,SAAS,IALxC,oBAO+B,YAAf+Z,EAAMzjB,KAPtB,6BAQgB6Y,OARhB,KAQ8B0K,EAR9B,UAQ4CD,EAAqBxF,EAAQ2F,EAAMxjB,QAAQO,IARvF,yBAQuBkjB,OARvB,qBASgBH,EAAME,EAAMxjB,QAAQO,KAAM,EAT1C,wBAUsC,SAAfijB,EAAMzjB,OACbujB,EAAME,EAAMxjB,UAAW,GAXvC,uCAeYyJ,EAAW8Z,EAAW9Z,SAflC,UAgBcwS,QAAQe,IAAIvT,EAAShN,IAAT,uCAAa,WAAe+mB,GAAf,SAAAjlB,EAAA,yDACR,YAAfilB,EAAMzjB,KADiB,6BAEvB6Y,OAFuB,KAET0K,EAFS,SAEKD,EAAqBxF,EAAQ2F,EAAMxjB,QAAQO,IAFhD,wBAEhBkjB,OAFgB,qBAGvBH,EAAME,EAAMxjB,QAAQO,KAAM,EAHH,wBAID,SAAfijB,EAAMzjB,OACbujB,EAAME,EAAMxjB,UAAW,GALA,4CAAb,wDAhB1B,iCAyBWsjB,GAzBX,6CALJ,uBAKmBD,EALnB,8CACY,IAAIhc,KADhB,SAEsBjD,EAAoByZ,GAF1C,cAEQ6F,EAFR,OAEmD,GAC3CC,EAAc,GACN,IAAItc,KAJpB,UAgCU4U,QAAQe,IAAI0G,EAAKjnB,IAAL,uCAAS,WAAe8M,GAAf,eAAAhL,EAAA,6DACvBolB,EAAYpa,EAAEhJ,KAAM,EADG,SAEJ8iB,EAAqBxF,EAAQtU,EAAEhJ,IAF3B,OAEnBqjB,EAFmB,OAGvBhL,OAAO6K,OAAOE,EAAaC,GAHJ,2CAAT,wDAhCtB,yBAqCiBvF,EAAcR,GArC/B,gCAqCwCrP,SAAQ,SAACjO,GAAD,OAAQojB,EAAYpjB,IAAM,KArC1E,iCAsCWojB,GAtCX,6C,+BAyCe1R,G,iFAAf,WAAiC4L,GAAjC,qCAAAtf,EAAA,sEAC+B4f,EAAkBN,EAAQpB,EAAKC,OAAOM,IAAI,CAAC,aAAc,MAAM,KAD9F,cACQ6G,EADR,OAEQC,EAAY,GAFpB,SAGU7H,QAAQe,IAAI6G,EAAepnB,IAAf,uCAAmB,WAAesnB,GAAf,SAAAxlB,EAAA,sEACVqhB,EAAmB/B,EAAQkG,GADjB,OACjCD,EAAUC,GADuB,kDAAnB,wDAHtB,cAMUC,EAAWH,EAAevF,MAAK,SAASxR,EAAEvO,GAC5C,IAAI0lB,EAAQH,EAAUvlB,GAClB2lB,EAAQJ,EAAUhX,GACtB,OAAKmX,GAAUC,GAIVD,EAAME,aACFF,EAAME,aAAa/Z,QACpB,IAEH8Z,EAAMC,aACFD,EAAOC,aAAa/Z,QACrB,GATG,KAYXgG,EAAQ,IAAI/I,KACZ+c,EAAY,IAAI/c,KAChBgd,EAAW,IAAIhd,KACfid,EAAY,IAAIjd,KACpB+I,EAAMzB,SAAS,EAAE,EAAE,EAAE,GACrByV,EAAU9c,QAAQ8c,EAAU7c,UAAU,GACtC6c,EAAUzV,SAAS,EAAE,EAAE,EAAE,GACzB0V,EAAS/c,QAAQ+c,EAAS9c,UAAU,GACpC8c,EAAS1V,SAAS,EAAE,EAAE,EAAE,GACxB2V,EAAUC,SAASD,EAAUva,WAAW,GACxCua,EAAU3V,SAAS,EAAE,EAAE,EAAE,GACrB6V,EAAaR,EAAStkB,QAAO,SAAUnB,GACvC,IAAIkmB,EAAOX,EAAUvlB,GACrB,QAAOkmB,EAAKN,cAAe,IAAI9c,KAAiC,IAA5Bod,EAAKN,aAAa/Z,UAAmBgG,KAEzEsU,EAAiBV,EAAStkB,QAAO,SAAUnB,GAC3C,IAAIkmB,EAAOX,EAAUvlB,GACrB,QAAOkmB,EAAKN,eAAe,IAAI9c,KAAiC,IAA5Bod,EAAKN,aAAa/Z,UAAmBga,GAAa,IAAI/c,KAAiC,IAA5Bod,EAAKN,aAAa/Z,SAAkBgG,MAEnIuU,EAAYX,EAAStkB,QAAO,SAAUnB,GACtC,IAAIkmB,EAAOX,EAAUvlB,GACrB,QAAOkmB,EAAKN,eAAe,IAAI9c,KAAiC,IAA5Bod,EAAKN,aAAa/Z,UAAmBia,GAAY,IAAIhd,KAAiC,IAA5Bod,EAAKN,aAAa/Z,SAAkBga,MAElIQ,EAAaZ,EAAStkB,QAAO,SAAUnB,GACvC,IAAIkmB,EAAOX,EAAUvlB,GACrB,QAAOkmB,EAAKN,eAAe,IAAI9c,KAAiC,IAA5Bod,EAAKN,aAAa/Z,UAAmBka,GAAa,IAAIjd,KAAiC,IAA5Bod,EAAKN,aAAa/Z,SAAkBia,MAEnIQ,EAAab,EAAStkB,QAAO,SAAUnB,GACvC,IAAIkmB,EAAOX,EAAUvlB,GACrB,OAAOkmB,EAAKN,cAAe,IAAI9c,KAAiC,IAA5Bod,EAAKN,aAAa/Z,SAAkBka,KAnDhF,kBAyDW,CAACE,EAAYE,EAAgBC,EAAWC,EAAYC,IAzD/D,6C,oEA4DA,WAAuBhH,EAAQiH,EAAIC,EAAU7R,GAA7C,qDAAA3U,EAAA,sEAEU6iB,EAAQvD,EAAQ,CACd3X,KAAMgN,EAAQ,GAAR,WAAiB6R,EAAjB,MAAgC7R,EAAQ,GAC9C8R,KAAM9R,EAAQ,GACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS,GACTd,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UAX3B,uBAcUjE,EAAQvD,EAAQ,CACd3X,KAAMgN,EAAQ,GACd8R,KAAM9R,EAAQ,GACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS,GACTd,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UAvB3B,uBA0BUjE,EAAQvD,EAAQ,CACd3X,KAAMgN,EAAQ,GACd8R,KAAM9R,EAAQ,GACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS,GACTd,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UAnC3B,uBAuCwB3D,EAAW7D,EAAQ,CAAC3X,KAAMgN,EAAQ,GAAIkN,WAAW,EAAMrK,eAAe,IAvC9F,cAuCQuP,EAvCR,iBAwCoB5D,EAAW7D,EAAQ,CAAC3X,KAAMgN,EAAQ,GAAIkN,WAAW,EAAMrK,eAAe,IAxC1F,eAwCQwP,EAxCR,OAyCQC,EAAK,IAAIne,KACT+D,EAAK,IAAI/D,KACbme,EAAG7W,SAAS6W,EAAG5G,WAAa,IAC5BxT,EAAGuD,SAASvD,EAAGwT,WAAa,IA5ChC,UA6CqBwC,EAAQvD,EAAQ,CACzB3X,KAAMgN,EAAQ,GACd8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAASiE,EACT/E,KAAM,GACN2E,SAAUL,EACV3a,IAAKqb,EACLJ,OAAQ,CAACC,KAAM,UAvD3B,eA6CQI,EA7CR,iBA0DqBrE,EAAQvD,EAAQ,CACzB3X,KAAMgN,EAAQ,IACd8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAASiE,EACT/E,KAAM,GACN2E,SAAUL,EACV3a,IAAKiB,EACLga,OAAQ,CAACC,KAAM,UApE3B,eA0DQK,EA1DR,iBAuEUnD,GAAc1E,EAAQ4H,EAAMF,GAvEtC,yBAwEUhD,GAAc1E,EAAQ6H,EAAMH,GAxEtC,eAyEIna,EAAGuD,SAASvD,EAAGwT,WAAa,GAzEhC,UA0E2BwC,EAAQvD,EAAQ,CAC/B3X,KAAMgN,EAAQ,IACd8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS,GACTd,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UAnF3B,gCAsFqBjE,EAAQvD,EAAQ,CACzB3X,KAAMgN,EAAQ,IACd8R,KAAM,GACNC,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAASgE,EACT9E,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UA/F3B,eAsFQM,EAtFR,iBAkGUpD,GAAc1E,EAAQ8H,EAAML,GAlGtC,yBAmG2BlE,EAAQvD,EAAQ,CAC/B3X,KAAMgN,EAAQ,IACd8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAASgE,EACT9E,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UA5G3B,eAmGQO,EAnGR,iBA+GUrD,GAAc1E,EAAQ+H,EAAYN,GA/G5C,yBAgHwBlE,EAAQvD,EAAQ,CAC5B3X,KAAMgN,EAAQ,IACd8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAASgE,EACT9E,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UAzH3B,eAgHQQ,EAhHR,iBA4HUtD,GAAc1E,EAAQgI,EAASP,GA5HzC,yBA6HsBlE,EAAQvD,EAAQ,CAC1B3X,KAAMgN,EAAQ,IACd8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAASgE,EACT9E,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UAtI3B,eA6HQS,EA7HR,iBAyIUvD,GAAc1E,EAAQiI,EAAOR,GAzIvC,yBA0IuBlE,EAAQvD,EAAQ,CAC3B3X,KAAMgN,EAAQ,IACd8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAASgE,EACT9E,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UAnJ3B,eA0IQU,EA1IR,iBAsJUxD,GAAc1E,EAAQkI,EAAQT,GAtJxC,yBAuJsB5D,EAAW7D,EAAQ,CAAC3X,KAAMgN,EAAQ,IAAKkN,WAAW,EAAMrK,eAAe,IAvJ7F,eAuJQiQ,EAvJR,iBAwJqB/J,QAAQe,IAAI,CAACiF,GAAOpE,EAAQ3K,EAAQ,KAAM+O,GAAOpE,EAAQ3K,EAAQ,KAAM+O,GAAOpE,EAAQ3K,EAAQ,KAAM+O,GAAOpE,EAAQ3K,EAAQ,OAxJhJ,eAwJQsN,EAxJR,iBAyJyBY,EAAQvD,EAAQ,CAC7B3X,KAAMgN,EAAQ,IACd8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS0E,EACTxF,KAAM,CAACA,EAAK,GAAIA,EAAK,IACrB2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UAlK3B,eAyJQY,EAzJR,iBAqKU1D,GAAc1E,EAAQoI,EAAUD,GArK1C,yBAsKmB5E,EAAQvD,EAAQ,CACvB3X,KAAMgN,EAAQ,IACd8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS0E,EACTxF,KAAM,CAACA,EAAK,IACZ2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UA/K3B,eAsKQa,EAtKR,iBAkLU3D,GAAc1E,EAAQqI,EAAIF,GAlLpC,yBAmLUjE,GAAelE,EAAQ,CAAC3X,KAAMgN,EAAQ,IAAKH,MAAOG,EAAQ,MAnLpE,yBAoL0BwO,EAAW7D,EAAQ,CAAC3X,KAAMgN,EAAQ,IAAKkN,WAAW,EAAMrK,eAAe,IApLjG,eAoLQoQ,EApLR,iBAqLuB/E,EAAQvD,EAAQ,CAC3B3X,KAAMgN,EAAQ,IACd8R,KAAM,GACNC,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS6E,EACT3F,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UA9L3B,eAqLQe,EArLR,iBAiMU7D,GAAc1E,EAAQuI,EAAQD,GAjMxC,yBAkMoB/E,EAAQvD,EAAQ,CACxB3X,KAAMgN,EAAQ,IACd8R,KAAM,GACNC,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS6E,EACT3F,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UA3M3B,eAkMQgB,EAlMR,iBA8MU9D,GAAc1E,EAAQwI,EAAKF,GA9MrC,yBA+MwB/E,EAAQvD,EAAQ,CAChC3X,KAAMgN,EAAQ,IACV8R,KAAM,GACNC,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS6E,EACT3F,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UAxN3B,eA+MQiB,EA/MR,iBA2NU/D,GAAc1E,EAAQyI,EAASH,GA3NzC,yBA4NuB/E,EAAQvD,EAAQ,CAC/B3X,KAAMgN,EAAQ,IACV8R,KAAM9R,EAAQ,IACd+R,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAAS6E,EACT3F,KAAM,GACN2E,SAAUL,EACVM,OAAQ,CAACC,KAAM,UArO3B,eA4NQkB,EA5NR,iBAwOUhE,GAAc1E,EAAQ0I,EAAQJ,GAxOxC,6C,sBA2Oe,QAAC1J,OAAM+J,S,4CAAUrI,oBAAmBE,gBAAeG,aAAY9V,c,8CAAe+d,oB,gDAAqBriB,sBAAqBwE,mB,4CAAoBtE,kBAAiBoiB,c,gDAAevF,aAAYwF,kB,gDAAmBjF,aAAYK,kBAAgBE,UAAQb,UAASwF,a,+CAAczE,kBAAgBI,iBAAesE,iB,iDAAkBC,kB,iDAAmBC,W,+CAAYC,kB,+CAAmBnE,iBAAenZ,mB,4CAAoBL,uBAAqBb,oB,6CAAqBoX,qBAAoBqH,S,8CAAUC,U,+CAAWjV,qBAAmBkV,Q,mDAASC,Q,6CCppB3fC,GAzKY,WACvB,IAAIC,EAAM,CACNC,WAAY,8BACZC,iBAAkB,sCAClBC,kBAAmB,wBACnBC,mBAAoB,kEACpBC,MAAO,WACH9jB,KAAK0jB,WAAWK,UAAY,EAC5B/jB,KAAK2jB,iBAAiBI,UAAY,EAClC/jB,KAAK4jB,kBAAkBG,UAAY,EACnC/jB,KAAK6jB,mBAAmBE,UAAY,IAMxCC,EAAwB,SAACC,GAAD,OAAUA,EAAInkB,MAAM,KAAKlH,KAAI,SAAA0B,GAAC,OAAEA,EAAEoR,WAE1DwY,EAAwB,WACxB,IAAIC,EACJ,OAAO,UAAP,+BACG,IAAK,QACDA,EAAK,IAAI3gB,KAGhB,OAAO2gB,GAGPC,EAAW,uCAAG,WAAe7pB,EAAK0pB,EAAKI,EAAMC,GAA/B,qBAAA5pB,EAAA,6DACV6pB,EAAUD,EAAmB,CAACA,GAAoB,GAClDE,EAAY,GACZC,EAAY,GAHF,SAIRrM,QAAQe,IAAI8K,EAAIjhB,MAAMygB,EAAIC,YAAY9qB,IAA1B,uCAA8B,WAAeiE,GAAf,iCAAAnC,EAAA,yDAE/B,OADbmC,EAAIA,EAAE6O,QACA,GAFsC,sBAGhC7O,EAAE,GAH8B,OAI/B,MAJ+B,OAY/B,MAZ+B,+BAK5BqF,EAAMmiB,EAAK,GAAG,GAAGxnB,EAAE8O,MAAM,EAAG9O,EAAE5C,SAClCsqB,EAAQhmB,KAAK,CAAC,UAAW,KAAM2D,IANC,SAOjBwiB,GAAMlf,oBAAoBjL,EAAK2H,GAPd,OAO5ByiB,EAP4B,qBAQlBA,EAAG/e,UARe,8DASb,aADVtL,EARuB,SAStB4B,KATsB,iDAURsoB,GAVQ,mBAUaJ,EAAY7pB,EAAK0pB,EAAIlQ,QAAQlX,EAAE8O,MAAM,EAAG9O,EAAE5C,QAASoqB,EAAK,GAAG,GAAG/pB,EAAE6B,QAAQO,KAAM2nB,EAAMC,GAVjG,wCAUxBE,EAVwB,sNAahCD,EAAQhmB,KAAK,CAAC,OAAQ,MAAQ8lB,EAAK,GAAG,GAAGxnB,EAAE8O,MAAM,EAAG9O,EAAE5C,WAbtB,qCAgBhC4C,EAAE,GAhB8B,OAiB/B,MAjB+B,QA0B/B,MA1B+B,gCAkB5BqF,EAAMmiB,EAAK,GAAG,GAAGxnB,EAAE8O,MAAM,EAAG9O,EAAE5C,SAClCsqB,EAAQhmB,KAAK,CAAC,UAAW,KAAM2D,IAnBC,UAqBjBwiB,GAAMlf,oBAAoBjL,EAAK2H,GArBd,QAqB5ByiB,EArB4B,qBAsBlBA,EAAG/e,UAtBe,8DAuBb,aADVtL,EAtBuB,SAuBtB4B,KAvBsB,iDAwBRuoB,GAxBQ,oBAwBaL,EAAY7pB,EAAK0pB,EAAIlQ,QAAQlX,EAAG,IAAIwnB,EAAK,GAAG,GAAG/pB,EAAE6B,QAAQO,KAAM2nB,EAAMC,GAxBlF,4CAwBxBG,EAxBwB,yNA2BhCF,EAAQhmB,KAAK,CAAC,OAAQ,OAAS8lB,EAAK,GAAG,GAAGxnB,EAAE8O,MAAM,EAAG9O,EAAE5C,WA3BvB,QA8B5CsqB,EAAQhmB,KAAK,CAAC,aAAc,MAAM,IA9BU,+EAA9B,wDAJJ,uCAoCHimB,GApCG,mBAoCkBE,GAAMpK,kBAAkB/f,GAAK,EAAAmqB,GAAM9L,KAAKC,QAAOM,IAAlB,QAAyBoL,IApCxE,kGAoCoF1oB,QAAO,SAAAvB,GAAC,OAAImqB,EAAUvpB,SAASZ,OApCnH,4CAAH,4DAuCXsqB,EAAwB,uCAAG,WAAerqB,EAAK8gB,EAAOrC,EAAK7T,EAAO0f,GAAvC,mBAAAnqB,EAAA,sEACN0d,QAAQe,IAAIkC,EAAM,GAAGziB,IAAT,uCAAa,WAAe4lB,GAAf,SAAA9jB,EAAA,sEAC5BgqB,GAAM3I,mBAAmBxhB,EAAKikB,GADF,+BACMA,EADN,0EAAb,wDADN,OACvBsG,EADuB,OAMvBzJ,EAAM,GAAGngB,SAAS,OAClB6pB,EAAiBD,EAASlsB,KAAI,SAAA4lB,GAAC,MAAI,CAACA,EAAE,GAAKA,EAAE,GAAGlY,IAAM,IAAI9C,KAAwB,IAAlBgb,EAAE,GAAGlY,IAAIC,cAAiBjH,MACnF+b,EAAM,GAAGngB,SAAS,WACzB6pB,EAAiBD,EAASlsB,KAAI,SAAA4lB,GAAC,MAAI,CAACA,EAAE,GAAKA,EAAE,GAAG5K,MAAQ,IAAIpQ,KAA0B,IAApBgb,EAAE,GAAG5K,MAAMrN,cAAiBjH,OAG9F0lB,EAAkB,SAASC,EAAOC,GAClC,OAAOD,EAAMhf,gBAAkBif,EAAMjf,eAAiBgf,EAAM/e,aAAegf,EAAMhf,YAAc+e,EAAMvhB,YAAcwhB,EAAMxhB,WAblG,KAenBsV,EAfmB,OAgBlB,MAhBkB,OAmBlB,MAnBkB,QAsBlB,MAtBkB,QAyBlB,OAzBkB,QA4BlB,OA5BkB,+BAiBnB+L,EAAiBA,EAAelpB,QAAO,SAAA2iB,GAAC,OAAEwG,EAAgBxG,EAAE,GAAIrZ,MAjB7C,oCAoBb4f,EAANF,EAAuBE,EAAelpB,QAAO,SAAA2iB,GAAC,OAAIA,EAAE,GAAKrZ,KAA0B4f,EAAelpB,QAAO,SAAA2iB,GAAC,OAAIA,EAAE,GAAKrZ,KApBlG,oCAuBb4f,EAANF,EAAuBE,EAAelpB,QAAO,SAAA2iB,GAAC,OAAIA,EAAE,GAAKrZ,KAA0B4f,EAAelpB,QAAO,SAAA2iB,GAAC,OAAIA,EAAE,GAAKrZ,KAvBlG,oCA0Bb4f,EAANF,EAAuBE,EAAelpB,QAAO,SAAA2iB,GAAC,OAAIA,EAAE,IAAMrZ,KAA0B4f,EAAelpB,QAAO,SAAA2iB,GAAC,OAAIA,EAAE,IAAMrZ,KA1BpG,oCA6Bb4f,EAANF,EAAuBE,EAAelpB,QAAO,SAAA2iB,GAAC,OAAIA,EAAE,IAAMrZ,KAA0B4f,EAAelpB,QAAO,SAAA2iB,GAAC,OAAIA,EAAE,IAAMrZ,KA7BpG,sDAiCnB4f,EAAensB,KAAI,SAAA4lB,GAAC,OAAIA,EAAE,OAjCP,4CAAH,8DAmG5B,MAAO,CAACvP,KA/DoB,uCAAG,WAAe1U,EAAK4qB,EAAMtpB,EAAQ1D,GAAlC,yBAAAuC,EAAA,sEACVgqB,GAAM3f,mBAAmBxK,GADf,cACvB8pB,EADuB,gBAEOc,EA3FFniB,MAAMygB,EAAII,oBAyFf,UAEvBuB,EAFuB,gDAIhB,IAJgB,YAOnBvpB,EAPmB,OAQlB,UARkB,QAWlB,YAXkB,gCASnBwpB,EAAS,CAAC,QAAS,KAAO,IAAI7hB,MAAQ0J,UAAW,KAT9B,oCAYnBmY,EAAS,CAAC,YAAa,MAAM,GAZV,8CAeTjN,QAAQe,IAAIiM,EAAKxsB,IAAL,uCAAS,WAAe0B,GAAf,2BAAAI,EAAA,yDACnC+oB,EAAIK,UACAwB,EAAY7B,EAAIG,kBAAkB2B,KAAKjrB,IAFR,kCAMPgrB,EANO,GAMxBvM,EANwB,KAMnBC,EANmB,KAMdC,EANc,OAOlB,CAAC+K,EAAsBjL,GAAMiL,EAAsB/K,IAA/DF,EAP8B,KAOzBE,EAPyB,MAQ3BwK,EAAIE,iBAAiB6B,KAAKzM,GARC,kCASdqL,EAAY7pB,EAAKwe,EAAI,GAAIsL,EAAMgB,GATjB,gCAS0BtM,EAAI,GAAzDA,EAT2B,YAU3BE,EAAMiL,EAAsBjL,EAAI,IAVL,UAWhB2L,EAAyBrqB,EAAKwe,EAAKC,EAAKC,GAAK,GAX7B,QAW3BuF,EAX2B,gDAad4F,EAAY7pB,EAAK0e,EAAI,GAAIoL,EAAMgB,GAbjB,gCAa0BpM,EAAI,GAAzDA,EAb2B,YAc3BF,EAAMmL,EAAsBnL,EAAI,IAdL,UAehB6L,EAAyBrqB,EAAK0e,EAAKD,EAAKD,GAAK,GAf7B,QAe3ByF,EAf2B,wDAmBpB4F,EAAY7pB,EAAKD,EAAG+pB,EAAMgB,GAnBN,QAmB/B7G,EAnB+B,wCAqB5BA,GArB4B,4CAAT,wDAfH,eAevBnD,EAfuB,OAsC3BA,EAAK,YAAO,IAAIoK,IAAIpK,EAAMqK,KAAK,KAtCJ,UAuCNtN,QAAQe,IAAIkC,EAAMziB,IAAN,uCAAU,WAAe4lB,GAAf,SAAA9jB,EAAA,4EAC/BgC,GAAI8hB,GAD2B,SACdkG,GAAM3I,mBAAmBxhB,EAAKikB,GADhB,4GAAV,wDAE7BjP,MAAK,SAAArE,GAAM,OAAEA,KAzCU,QAuCvBya,EAvCuB,YA0CnBxtB,EA1CmB,OA2ClB,SA3CkB,QA8ClB,SA9CkB,QAiDlB,SAjDkB,QAoDlB,SApDkB,gCA4CnBwtB,EAASlL,MAAK,SAAC/f,EAAEuO,GAAH,OAAQvO,EAAE4L,IAAI5L,EAAE4L,IAAIC,QAAQ,OAAc0C,EAAE3C,IAAI2C,EAAE3C,IAAIC,QAAQ,SA5CzD,oCA+CnBof,EAASlL,MAAK,SAAC/f,EAAEuO,GAAH,OAAQA,EAAE3C,IAAI2C,EAAE3C,IAAIC,QAAQ,IAAI7L,EAAE4L,IAAI5L,EAAE4L,IAAIC,QAAQ,MA/C/C,oCAkDnBof,EAASlL,MAAK,SAAC/f,EAAEuO,GAAH,OAAQvO,EAAEkZ,MAAMlZ,EAAEkZ,MAAMrN,QAAQ,OAAc0C,EAAE2K,MAAM3K,EAAE2K,MAAMrN,QAAQ,SAlDjE,oCAqDnBof,EAASlL,MAAK,SAAC/f,EAAEuO,GAAH,OAAQA,EAAE2K,MAAM3K,EAAE2K,MAAMrN,QAAQ,IAAI7L,EAAEkZ,MAAMlZ,EAAEkZ,MAAMrN,QAAQ,MArDvD,8CA0DVme,GAAM/f,oBAAoBpK,GA1DhB,eA0DvBqrB,EA1DuB,OA2DZ,UAAX/pB,IAAoB8pB,EAAWA,EAAS9pB,QAAO,SAAAgqB,GAAE,YAAqBvmB,IAAhBsmB,EAAKC,EAAGnpB,QA3DvC,kBA4DpBipB,EAAS/sB,KAAI,SAAA4lB,GAAC,OAAEA,EAAE9hB,OA5DE,4CAAH,6DAvGL,GCGZ,IAACoX,MAAMgS,IAASC,SAAUC,IAAIF,IAASG,MAAO3lB,GAAI4lB,GAASlX,YAAamX,GAAQC,MAAON,IAASM,OCFvGC,GAAsB1nB,EAAQ,KAA9B0nB,kBAEAC,GAAoCC,UAApCD,mBAAoBE,GAAgBD,UAAhBC,YAGtB9nB,GAAWC,EAAQ,IA2gBV8nB,G,WApfX,WAAY7oB,GAAS,oBACjBoC,KAAK0mB,wBAAyB,EAC9BF,GAAYtX,MAAM,CAAC7M,KAAM,kBAAkBkN,KAAK,uCAAC,WAAgB1S,GAAhB,eAAAnC,EAAA,yDAC7B,WAAZmC,EAAEsC,MADuC,gCAEJmnB,GAAmBK,oBAFf,OAEzC3mB,KAAK0mB,uBAFoC,OAEoCE,QAFpC,sBAGxB,YAAZ/pB,EAAEsC,QACPa,KAAK0mB,wBAAyB,GAJW,OAMzCG,EAAYC,cACZ9mB,KAAK0mB,yBAA2BG,EAAU3rB,SAAS,cAAiB2rB,EAAU3rB,SAAS,WAQ3ForB,GAAmBS,YAAY,mCAAoC/mB,KAAKgnB,0BAf3B,iDAAD,sDAgB7CxsB,KAAKwF,OAERA,KAAKinB,SAAW,SAAAC,GAAC,OAAI3rB,KAAKE,IAAIyrB,EAAEpnB,MAAM,IAAIqnB,QAAO,SAACzsB,EAAEuO,GAAkC,OAA7BvO,GAAIA,GAAG,GAAGA,EAAGuO,EAAEme,WAAW,IAAY1sB,IAAG,KAElGsF,KAAKnD,EAAIe,EACToC,KAAKqnB,UAAY,aACjBrnB,KAAKsnB,2BAA4B,EACjCtnB,KAAKunB,mBAAqB,IAC1BvnB,KAAKwnB,oBAAiBloB,EAEtBU,KAAKynB,MAAQ,CACTC,MAAO,CACHC,WAAW,WAAD,4BAAE,WAAgBxkB,GAAhB,SAAAzI,EAAA,6DAEJyI,EAAQlH,MAAMhC,SAAWkJ,EAAQhL,MAAM8B,QACvCoW,QAAQgK,MAAM,sDAHV,SAIFjC,QAAQe,IAAIhW,EAAQhL,MAAMS,KAAI,SAACiE,EAAEvC,GACnC,IAAI0D,EAAOmF,EAAQlH,MAAMY,GACzB,MAAkB,SAAdmB,EAAK9B,KACE0B,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAKyD,EAAK7B,QAAS,CAAChE,MAAOmC,IAC5C,YAAd0D,EAAK9B,KACH0B,EAAO0C,GAAGuiB,cAAc1f,EAAQ5I,IAAKyD,EAAK7B,QAAS,CAAChE,MAAOmC,SADjE,MARD,gCAYD,CAACC,IAAI4I,EAAQ5I,MAZZ,2CAAF,mDAAC,IAefqiB,IAAK,CACDxZ,OAAO,WAAD,4BAAE,WAAgBD,GAAhB,eAAAzI,EAAA,sEACekD,EAAO0C,GAAG8d,OAAOjb,EAAQ5I,IAAK4I,EAAQd,MADrD,cACA+b,EADA,yBAEG,CAAC7jB,IAAK4I,EAAQ5I,IAAKmC,GAAI0hB,IAF1B,2CAAF,mDAAC,IAKX/X,KAAM,CACFjD,OAAO,WAAD,4BAAE,WAAgBD,GAAhB,iBAAAzI,EAAA,6DACAktB,EAAW,CACXzG,KAAM,GACNC,WAAW,EACXC,YAAY,EACZrG,YAAY,EACZyC,QAASta,EAAQjB,IAAIiB,EAAQjB,IAAI,GACjCya,KAAM,GACN2E,SAAUuG,KAAKC,iBAAiBC,kBAAkBC,SAClDzG,OAAQ,CAACC,KAAM,QACfnf,KAAMc,EAAQd,KAAKc,EAAQd,KAAK,IAGhCc,EAAQmD,MACRshB,EAASthB,IAAMnD,EAAQmD,KACvBnD,EAAQyQ,QACRgU,EAAShU,MAAQzQ,EAAQyQ,OAhBzB,SAkBahW,EAAO0C,GAAGid,QAAQpa,EAAQ5I,IAAKqtB,GAlB5C,cAkBAK,EAlBA,OAoBA9kB,EAAQjB,KAAsB,IAAfiB,EAAQjB,KACvBtE,EAAO0C,GAAGoe,cAAcvb,EAAQ5I,IAAK0tB,EAAM9kB,EAAQjB,KArBnD,kBAuBG,CAAC3H,IAAK4I,EAAQ5I,IAAKiD,IAAKyqB,IAvB3B,2CAAF,mDAAC,GAyBP5K,OAAO,WAAD,4BAAE,WAAgBla,GAAhB,eAAAzI,EAAA,sEACckD,EAAO0C,GAAGyb,mBAAmB5Y,EAAQ5I,IAAK4I,EAAQ3F,KADhE,cACA0qB,EADA,gBAEEtqB,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK2F,EAAQ+L,OAFzD,gCAIG,CAAC3U,IAAK4I,EAAQ5I,IAAKiD,IAAK2F,EAAQ3F,IAAK0qB,UAJxC,2CAAF,mDAAC,GAMPC,gBAAgB,WAAD,4BAAG,WAAgBhlB,GAAhB,eAAAzI,EAAA,sEACIkD,EAAO0C,GAAGyb,mBAAmB5Y,EAAQ5I,IAAK4I,EAAQ3F,KADtD,cACV0qB,EADU,gBAERtqB,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACigB,QAASta,EAAQsa,UAFzD,WAIVta,EAAQilB,WAJE,gCAKJxqB,EAAO0C,GAAGge,eAAenb,EAAQ5I,IAAK4I,EAAQ3F,IAAK2F,EAAQilB,YALvD,UAOU,KAApBjlB,EAAQsa,QAPE,kCAQJ7f,EAAO0C,GAAGoe,cAAcvb,EAAQ5I,IAAK4I,EAAQ3F,IAAK2F,EAAQsa,SARtD,iCAUP,CAACljB,IAAK4I,EAAQ5I,IAAKiD,IAAK2F,EAAQ3F,IAAK0qB,UAV9B,4CAAH,mDAAC,GAYhBG,mBAAmB,WAAD,4BAAE,WAAgBllB,GAAhB,eAAAzI,EAAA,sEACKkD,EAAO0C,GAAGyb,mBAAmB5Y,EAAQ5I,IAAK4I,EAAQ3F,KADvD,cACZsnB,EADY,gBAEVlnB,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAOsF,aAAc,IAAI9c,OAF3E,gCAGT,CAACjJ,IAAK4I,EAAQ5I,IAAKiD,IAAK2F,EAAQ3F,IAAKsnB,aAH5B,2CAAF,mDAAC,GAKnBwD,iBAAiB,WAAD,4BAAE,WAAgBnlB,GAAhB,uDAAAzI,EAAA,sEACRkD,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAMsF,aAAc,IAAI9c,OAD5E,uBAEO5F,EAAO0C,GAAGyb,mBAAmB5Y,EAAQ5I,IAAK4I,EAAQ3F,KAFzD,UAEVsnB,EAFU,OAGVxe,EACAwe,EAASxe,IACRwe,EAASzD,WACN,IAAI7d,KAA0B,IAArBshB,EAASxe,IAAIC,SACtB8f,GACK,IAAI7iB,KAA0B,IAArBshB,EAASxe,IAAIC,SAAegiB,cACtC,CAACP,SAAUlD,EAASxD,gBAG5BhiB,EAEAsU,EACAkR,EAASlR,MACRkR,EAASzD,WACN,IAAI7d,KAA4B,IAAvBshB,EAASlR,MAAMrN,SACxB8f,GACK,IAAI7iB,KAA4B,IAAvBshB,EAASlR,MAAMrN,SAAegiB,cACxC,CAACP,SAAUlD,EAASxD,gBAEzBhiB,EAGa,UADhBiiB,EAASuD,EAASvD,QACXC,OAAmBlb,EAzBhB,oBA2BI,WADVkiB,EAAQjH,EAAOC,MA1BT,iBA4BF5N,GACI6U,EAAcniB,EAAIsN,EACtBtN,EAAI7C,QAAQ6C,EAAI5C,UAAY,GAC5B9F,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAO1U,IAAIA,EAAKsN,MAAO,IAAIpQ,KAAK8C,EAAImiB,OAEhGniB,EAAI7C,QAAQ6C,EAAI5C,UAAY,GAC5B9F,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAO1U,IAAIA,KAlCrE,2BAqCW,WAAVkiB,EArCD,qBAsCF5U,EAtCE,oBAuCE8U,EAAMnH,EAAOoH,GACbzuB,EAAU,GACVuuB,EAAcniB,EAAIsN,GAClB8U,EA1CF,4BA2CUA,EAAIxtB,SAAShB,GA3CvB,iBA4CMoM,EAAI7C,QAAQ6C,EAAI5C,UAAY,GACxBklB,EAAMtiB,EAAIoD,SA7CpB,KA8Cckf,EA9Cd,OA+Ce,IA/Cf,QAkDe,IAlDf,QAqDe,IArDf,QAwDe,IAxDf,QA2De,IA3Df,QA8De,IA9Df,QAiEe,IAjEf,gCAgDc1uB,EAAU,IAhDxB,oCAmDcA,EAAU,IAnDxB,oCAsDcA,EAAU,IAtDxB,oCAyDcA,EAAU,KAzDxB,oCA4DcA,EAAU,IA5DxB,oCA+DcA,EAAU,IA/DxB,oCAkEcA,EAAU,KAlExB,6EAuEEoM,EAAI7C,QAAQ6C,EAAI5C,UAAU,GAC1BkQ,EAAMnQ,QAAQmQ,EAAMlQ,UAAU,GAxEhC,QA0EF9F,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAO1U,IAAIA,EAAKsN,MAAO,IAAIpQ,KAAK8C,EAAImiB,KA1E9F,6BA4EEC,EAAMnH,EAAOoH,IA5Ef,iBA8EMzuB,EAAU,GA9EhB,WA+EUwuB,EAAIxtB,SAAShB,GA/EvB,iBAgFMoM,EAAI7C,QAAQ6C,EAAI5C,UAAY,GACxBklB,EAAMtiB,EAAIoD,SAjFpB,KAkFckf,EAlFd,OAmFe,IAnFf,QAsFe,IAtFf,QAyFe,IAzFf,QA4Fe,IA5Ff,QA+Fe,IA/Ff,QAkGe,IAlGf,QAqGe,IArGf,gCAoFc1uB,EAAU,IApFxB,oCAuFcA,EAAU,IAvFxB,oCA0FcA,EAAU,IA1FxB,oCA6FcA,EAAU,KA7FxB,oCAgGcA,EAAU,IAhGxB,oCAmGcA,EAAU,IAnGxB,oCAsGcA,EAAU,KAtGxB,6EA2GEoM,EAAI7C,QAAQ6C,EAAI5C,UAAU,GA3G5B,QA6GF9F,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAO1U,IAAIA,IA7GrE,gCA+GH,GAAc,YAAVkiB,EACP,GAAI5U,EAAO,CAKP,GAJI8U,EAAMnH,EAAOoH,GACbC,EAAMtiB,EAAI5C,UACVmlB,EAAOviB,EAAI5C,UACX+kB,EAAcniB,EAAIsN,EAClB8U,EACA,MAASA,EAAIxtB,SAAS0tB,EAAIniB,eAAiBiiB,EAAIxtB,SAAS,SAAY,IAAIsI,KAAK8C,EAAIL,cAAeK,EAAIJ,WAAYI,EAAI5C,WAAWA,YAAc,IAAIF,KAAK8C,EAAIL,cAAeK,EAAIJ,WAAW,EAAG,GAAGxC,YAAiBmlB,IAASD,GACpNtiB,EAAI7C,QAAQ6C,EAAI5C,UAAY,GAC5BklB,EAAMtiB,EAAI5C,eAGd4C,EAAIoa,SAASpa,EAAIJ,WAAW,GAEhCtI,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAO1U,IAAIA,EAAKsN,MAAO,IAAIpQ,KAAK8C,EAAImiB,SAC7F,CAEH,GADIC,EAAMnH,EAAOoH,GAIb,IAFIC,EAAMtiB,EAAI5C,UACVmlB,EAAOviB,EAAI5C,WACNglB,EAAIxtB,SAAS0tB,EAAIniB,eAAiBiiB,EAAIxtB,SAAS,SAAY,IAAIsI,KAAK8C,EAAIL,cAAeK,EAAIJ,WAAYI,EAAI5C,WAAWA,YAAc,IAAIF,KAAK8C,EAAIL,cAAeK,EAAIJ,WAAW,EAAG,GAAGxC,YAAiBmlB,IAASD,GACpNtiB,EAAI7C,QAAQ6C,EAAI5C,UAAY,GAC5BklB,EAAMtiB,EAAI5C,eAGd4C,EAAIoa,SAASpa,EAAIJ,WAAW,GAEhCtI,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAO1U,IAAIA,QAE1D,WAAVkiB,IACH5U,GACI6U,EAAcniB,EAAIsN,EACtBtN,EAAIwiB,YAAYxiB,EAAIL,cAAgB,GACpCrI,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAO1U,IAAIA,EAAKsN,MAAO,IAAIpQ,KAAK8C,EAAImiB,OAEhGniB,EAAIwiB,YAAYxiB,EAAIL,cAAgB,GACpCrI,EAAO0C,GAAGgd,WAAWna,EAAQ5I,IAAK4I,EAAQ3F,IAAK,CAACwd,YAAY,EAAO1U,IAAIA,MAnJrE,iCAwJP,CAACyiB,QAAS,oCAxJH,4CAAF,mDAAC,IA2JrBtL,QAAS,CACLra,OAAO,WAAD,4BAAE,WAAgBD,GAAhB,iBAAAzI,EAAA,yDACAojB,EAAU,CACVzb,KAAM,GACNka,eAA8Bjd,IAAnB6D,EAAQ8O,OACnBC,eAAe,IAER/O,EAAQ8O,OANf,gCAM8BrU,EAAO0C,GAAGud,WAAW1a,EAAQ5I,IAAKujB,EAAS3a,EAAQ8O,QANjF,0DAMiGrU,EAAO0C,GAAGud,WAAW1a,EAAQ5I,IAAKujB,GANnI,kCAMA7b,EANA,KAOAkB,EAAQ8O,QACRrU,EAAO0C,GAAG0iB,iBAAiB7f,EAAQ5I,IAAK0H,EAAMkB,EAAQ8O,QARtD,kBAUG,CAAC1X,IAAK4I,EAAQ5I,IAAK2H,IAAKD,IAV3B,4CAAF,mDAAC,GAYP6c,OAAO,WAAD,4BAAE,WAAgB3b,GAAhB,SAAAzI,EAAA,sEACEkD,EAAO0C,GAAG0e,cAAc7b,EAAQ5I,IAAK4I,EAAQjB,KAD/C,cAEAiB,EAAQ8O,QACRrU,EAAO0C,GAAG2iB,kBAAkB9f,EAAQ5I,IAAK4I,EAAQjB,IAAKiB,EAAQ8O,QAH9D,kBAKG,CAAC1X,IAAK4I,EAAQ5I,IAAKyuB,KAAM,SAL5B,2CAAF,mDAAC,GAOPC,aAAa,WAAD,4BAAE,WAAgB9lB,GAAhB,iBAAAzI,EAAA,sEACmBkD,EAAO0C,GAAGyE,mBAAmB5B,EAAQ5I,KADxD,cACNkE,EADM,OAGNyqB,EAAczqB,EAAiB,GAAG,GAAG0E,EAAQzG,IAHvC,SAOJkB,EAAO0C,GAAGuiB,cAAc1f,EAAQ5I,IAAK4I,EAAQzG,GAAI,CAAC2F,KAAMc,EAAQd,OAP5D,gCASH,CAAC6mB,cAAa3uB,IAAK4I,EAAQ5I,MATxB,2CAAF,mDAAC,GAWb4uB,eAAe,WAAD,4BAAE,WAAgBhmB,GAAhB,iBAAAzI,EAAA,sEACekD,EAAO0C,GAAGkF,oBAAoBrC,EAAQ5I,IAAK4I,EAAQzG,IAAI,GADtE,cACRyV,EADQ,OAGRD,EAAgBC,EAHR,SAONvU,EAAO0C,GAAGuiB,cAAc1f,EAAQ5I,IAAK4I,EAAQzG,GAAI,CAACwV,cAAe/O,EAAQ+O,gBAPnE,gCASL,CAACA,gBAAe3X,IAAK4I,EAAQ5I,MATxB,2CAAF,mDAAC,GAWf6uB,UAAU,WAAD,4BAAG,WAAgBjmB,GAAhB,SAAAzI,EAAA,sEAEFkD,EAAO0C,GAAGoe,cAAcvb,EAAQ5I,IAAK4I,EAAQ3F,IAAK2F,EAAQjB,KAFxD,gCAGD,CAAC3H,IAAK4I,EAAQ5I,IAAKiD,IAAK2F,EAAQ3F,MAH/B,2CAAH,mDAAC,GAKV6rB,WAAW,WAAD,4BAAG,WAAgBlmB,GAAhB,SAAAzI,EAAA,sEAEHkD,EAAO0C,GAAGge,eAAenb,EAAQ5I,IAAK4I,EAAQ3F,IAAK2F,EAAQjB,KAFxD,gCAGF,CAAC3H,IAAK4I,EAAQ5I,IAAKiD,IAAK2F,EAAQ3F,MAH9B,2CAAH,mDAAC,IAMfwR,YAAa,CACT5L,OAAO,WAAD,4BAAE,WAAeD,GAAf,iBAAAzI,EAAA,6DACA4uB,EAAO,CACPjnB,KAAM,GACNuC,MAAO,SACPuK,KAAM,OACND,MAAO,IALP,SAOetR,EAAO0C,GAAG4d,eAAe/a,EAAQ5I,IAAK+uB,GAPrD,cAOAC,EAPA,yBAQG,CAAChvB,IAAK4I,EAAQ5I,IAAK2H,IAAKqnB,IAR3B,2CAAF,mDAAC,GAUPC,oBAAoB,WAAD,4BAAE,WAAgBrmB,GAAhB,iBAAAzI,EAAA,sEACgBkD,EAAO0C,GAAGG,gBAAgB0C,EAAQ5I,KADlD,cACbuU,EADa,OAGbC,EAAoBD,EAAqB,GAAG3L,EAAQzG,IAHvC,SAOXkB,EAAO0C,GAAGwiB,kBAAkB3f,EAAQ5I,IAAK4I,EAAQzG,GAAIyG,EAAQkM,SAPlD,gCAUV,CAACN,oBAAmBxU,IAAK4I,EAAQ5I,MAVvB,2CAAF,mDAAC,GAapBkvB,oBAAoB,WAAD,4BAAE,WAAgBtmB,GAAhB,SAAAzI,EAAA,6DACjB2V,QAAQC,IAAI,oCADK,SAGX1S,EAAO0C,GAAG6iB,kBAAkBhgB,EAAQ5I,IAAK4I,EAAQzG,IAHtC,2CAAF,mDAAC,KAO5BsD,KAAK0pB,QAAU,CACXrjB,KAAM,CACFgX,OAAQ,aAGhBrd,KAAK2pB,QAAU,GACf3pB,KAAK4pB,QAAU,GACf5pB,KAAK6pB,QAAU,GAEf7pB,KAAK8pB,QAAU,CACXzjB,KAAM,CACFgX,QAAQ,IAGhBrd,KAAK+pB,WAAa,GAElB/pB,KAAKgqB,YAAa,EAClBhqB,KAAKiqB,oBAAiB3qB,EAItBU,KAAKkqB,uBAAyB,GAG9BxrB,GAASsB,M,mDAYT,IAAK,IAAIvC,KAAOuC,KAAK+pB,WACjBI,aAAanqB,KAAK+pB,WAAWtsB,IAE7BuC,KAAKiqB,gBACLE,aAAanqB,KAAKiqB,gBACtBjqB,KAAKiqB,oBAAiB3qB,I,oCAItBU,KAAKgqB,YAAa,EACdhqB,KAAKiqB,gBACLE,aAAanqB,KAAKiqB,gBACtBjqB,KAAKiqB,oBAAiB3qB,I,sCAGG,IAAf8qB,EAAc,uDAAL,IACnBpqB,KAAKgqB,YAAa,EAClBhqB,KAAKiqB,eAAiBruB,WAAWoE,KAAKqnB,UAAW+C,K,wCAI5CpqB,KAAKgqB,YAAchqB,KAAKsnB,2BACzBtnB,KAAKqnB,c,oFAGc3qB,EAAInC,EAAK8vB,EAAOlJ,EAAMpW,G,iFAChCub,GAAmBgE,SAAS,CACrCC,cAAe,CACX,CACIF,MAAOA,EACP9e,KAAM4V,EACNmJ,SAAU,CAAEE,GAAIzf,GAChB0f,MAAO,KACP/tB,GAAIsD,KAAKinB,SAASvqB,GAClBguB,YAAa,CAAC,GAAD,OAAIhuB,GAAJ,UAAanC,IAC1BowB,MAAOpwB,M,+OAMQqwB,G,yFACJA,EAAOC,aAAaH,Y,GAAtC1O,E,KAAQhC,E,UACL4Q,EAAOE,S,OACN,a,OAIA,W,6BAFD9qB,KAAKhE,GAAG,wBAAyB,CAAEzB,IAAKyf,EAAQxc,IAAKwe,IAAS,G,kCAI9DA,EAAS4O,EAAOC,aAAaH,YAC7B1Q,EAAS4Q,EAAOC,aAAaF,M,6MAKhBjuB,G,iFACR4pB,GAAmByE,OAAO,CAACR,cAAe,CAAC,CAAC7tB,GAAG,GAAD,OAAIsD,KAAKinB,SAASvqB,Q,gOAGzDA,G,kFAChBsuB,EAAahrB,KAAKinB,SAASvqB,G,SACX4pB,GAAmB2E,a,cAAnCC,E,OACAC,EAASD,EAAQX,cAAc3xB,KAAI,SAAAiE,GAAC,OAAEA,EAAEH,MAAIb,QAAO,SAAAgB,GAAC,OAAEA,GAAGmuB,K,kBACtDG,EAAOlxB,OAAS,G,+IAOT2O,GAAI,IAAD,OACjB5I,KAAKqnB,UAAYze,EAEd5I,KAAKwnB,gBAAgB2C,aAAanqB,KAAKwnB,gBAC1CxnB,KAAKsnB,2BAA2B,EAChCtnB,KAAKwnB,eAAiB5rB,YAAW,WAAK,EAAK0rB,2BAA0B,EAAM,EAAKE,oBAAeloB,IAAYU,KAAKunB,sB,wCAGlG6D,EAAUC,GAAuB,IAAXC,EAAU,uDAAL,IACrCtrB,KAAK+pB,WAAWsB,IAChBlB,aAAanqB,KAAK+pB,WAAWsB,IACjCrrB,KAAK+pB,WAAWsB,GAAczvB,WAAWwvB,EAAUE,K,kEAG9CC,EAAYpoB,EAASqoB,EAAeC,EAAQC,G,oFAiBjD,IATG1rB,KAAKwnB,gBAAgB2C,aAAanqB,KAAKwnB,gBAC1CxnB,KAAKsnB,2BAA2B,EAChCtnB,KAAKwnB,eAAiB5rB,YAAW,WAAK,EAAK0rB,2BAA0B,EAAM,EAAKE,oBAAeloB,IAAYU,KAAKunB,oBAE5GoE,EAAW3rB,KAAKwE,SAEhBonB,EAAQL,EAAWzrB,MAAM,KAEzB8qB,EAAS5qB,KAAKynB,MACXmE,EAAM3xB,OAAS,GAClB2wB,EAASA,EAAOgB,EAAMC,S,OAGtBJ,EAAQzrB,KAAK4pB,QAAQrrB,KAAKotB,GACzB3rB,KAAK2pB,QAAQprB,KAAKotB,G,UAEDf,EAAOznB,G,eAAzB2oB,E,OAEJ9rB,KAAK6pB,QAAQ8B,GAAY,CAACJ,EAAYO,GAEjC9rB,KAAKgqB,YAAewB,GACrBxrB,KAAKqnB,YAELqE,GACA1rB,KAAKqnB,Y,UAEIyE,E,wLAGN,OAA2B,OAAjB,EAAEvwB,KAAKiJ,UAAmB,GAAGiC,SAAS,IAAI,KAAwB,OAAjB,EAAElL,KAAKiJ,UAAmB,GAAGiC,SAAS,M,oCAlIxG,OAAOzG,KAAKkqB,wB,aAGE/kB,GACdnF,KAAKkqB,uBAAyB/kB,M,cC7XhCzG,I,qBAAWC,EAAQ,KAmOVotB,IAhOKxF,UAAZyF,Q,kDAGJ,WAAYj0B,GAAQ,IAAD,sBAGf,IAAI4L,GAFJ,cAAM5L,IAEeA,MAAM4J,cAAcsqB,eAH1B,OAef,EAAK9sB,MAAQ,CACT+sB,SAAU,EACVC,WAAW,EACX5nB,SAAUZ,EAAUpI,KAAKC,MAAMD,KAAKiJ,SAAWb,EAAU1J,UAG7DyE,GAAS,gBArBM,E,sDAyBf,IAAI0tB,EAAOpsB,KACXqsB,UAAgBC,eAAeD,QAAcN,KAAKQ,YAAYC,OAAOjd,MAAK,WACtE8c,UAAgBI,2BAA2BC,IAAE,UAAU9hB,MAAO8hB,IAAE,aAAa9hB,OAAO2E,MAAK,WACjF8c,UAAgBM,YAAYC,cAC3BR,EAAKr0B,MAAMyK,SAAS,CAACqqB,QAAS,WAAYpqB,UAAW,UAEtD2pB,EAAKntB,SAAS,CAACitB,SAAU,OAC9B/R,OAAM,SAASE,GAEQA,EAAM9B,KACH8B,EAAM0O,QAC3B1Y,QAAQC,IAAI+J,GACZqS,IAAE,aAAaI,SAAS,iB,iCAOpC,IAAIV,EAAOpsB,KACP+sB,GAAU,EACdV,UAAgBW,+BAA+BN,IAAE,UAAU9hB,MAAO8hB,IAAE,aAAa9hB,OAAOuP,OAAM,SAASE,GACnG+R,EAAKntB,SAAS,CAACktB,WAAW,IAAO,kBAAIO,IAAE,gBAAgBO,KAAK5S,EAAM0O,YAClEgE,GAAQ,KACTxd,MAAK,WACCwd,IACDV,UAAgBM,YAAYO,wBAC5Bb,UAAgBM,YAAYQ,cAAc,CAACpqB,YAAa2pB,IAAE,SAAS9hB,QACnEwhB,EAAKntB,SAAS,CAACitB,SAAU,EAAGC,WAAW,U,uCAKjC,IAAD,OACbE,UAAgBM,YAAYS,SAAS7d,MAAK,WAClC8c,UAAgBM,YAAYC,cAC5B,EAAK70B,MAAMyK,SAAS,CAACqqB,QAAS,WAAYpqB,UAAW,WAErDiqB,IAAE,gBAAgBO,KAAK,iF,kCAK/B,IAAIF,GAAU,EACVX,EAAOpsB,KACXqsB,UAAgBgB,uBAAuBX,IAAE,UAAU9hB,OAAOuP,OAAM,SAASE,GACrE+R,EAAKntB,SAAS,CAACktB,WAAW,IAC1BO,IAAE,gBAAgBO,KAAK5S,EAAM0O,SAC7BgE,GAAQ,KACTxd,MAAK,WACCwd,GACDX,EAAKntB,SAAS,CAACitB,SAAU,S,gCAOjClsB,KAAKjI,MAAMyK,SAAS,CAACqqB,QAAS,OAAQpqB,UAAW,Y,+BAG3C,IAAD,OACL,OACI,yBAAK/F,GAAG,wBACJ,yBAAKA,GAAG,kBACJ,yBAAKK,UAAU,YAAYC,MAAO,CAAC6O,OAAO,SACtC,yBAAK9O,UAAU,mBACf,yBAAKA,UAAU,mBACf,0BAAML,GAAG,qBAAT,YAAsC,0BAAMM,MAAO,CAACkK,WAAY,MAA1B,+CAG9C,yBAAKxK,GAAG,YACJ,wBAAIA,GAAG,iBAAiBsD,KAAKb,MAAMoF,UAAc,0BAAM7H,GAAG,oBAAoBsD,KAAKjI,MAAM4J,cAAc2rB,kBACvG,wBAAIvwB,UAAU,yBAAyBL,GAAG,wBAAyB,WAC/D,OAAQ,EAAKyC,MAAM+sB,UACf,KAAK,EACD,OAAO,EAAKn0B,MAAM4J,cAAc4rB,SACpC,QACI,OAAO,EAAKx1B,MAAM4J,cAAc6rB,sBALuB,IASnE,2BAAOzwB,UAAU,WAAWL,GAAG,OAAOR,KAAK,OAAOuxB,aAAa,MAAM3c,aAAa,GAAGE,YAAahR,KAAKjI,MAAM4J,cAAc+rB,eAAgB1wB,MAAO,CAACwB,QAAiC,IAAxBwB,KAAKb,MAAM+sB,SAAiB,QAAU,UAClM,2BAAOnvB,UAAU,WAAWL,GAAG,QAAQR,KAAK,QAAQuxB,aAAa,MAAM3c,aAAa,GAAGE,YAAahR,KAAKjI,MAAM4J,cAAcgsB,QAC7H,2BAAO5wB,UAAU,WAAWL,GAAG,WAAWR,KAAK,WAAWuxB,aAAa,MAAM3c,aAAa,GAAGE,YAAahR,KAAKjI,MAAM4J,cAAcisB,SAAU5wB,MAAO,CAACwB,QAAiC,IAAxBwB,KAAKb,MAAM+sB,SAAiB,QAAU,QAAS2B,WAAY,SAACva,GACtN,GAAkB,UAAdA,EAAM7V,IACN,OAAQ,EAAK0B,MAAM+sB,UACf,KAAK,EACD,EAAK4B,UACL,MACJ,KAAK,EACD,EAAKC,WACL,MACJ,KAAK,EACD,EAAKC,YACL,MACJ,KAAK,EACD,EAAKC,iBACL,MACJ,KAAK,EACD,EAAKH,cAKnB,WACE,GAA4B,IAAxB,EAAK3uB,MAAM+sB,UAA2C,IAAzB,EAAK/sB,MAAM+sB,UAA2C,IAAxB,EAAK/sB,MAAM+sB,UAAkB,EAAK/sB,MAAMgtB,UAAW,OAAO,0BAAMzvB,GAAG,eAC5H,WACE,OAAO,EAAKyC,MAAM+sB,UACd,KAAK,EACD,OAAO,EAAKn0B,MAAM4J,cAAcusB,YACpC,KAAK,EACD,OAAO,EAAKn2B,MAAM4J,cAAcwsB,YACpC,KAAK,EACD,OAAO,EAAKp2B,MAAM4J,cAAcysB,gBAP1C,IAFR,GAcF,0BAAM1xB,GAAG,mBAAmBM,MAAO,CAACwB,QAAiC,IAAxBwB,KAAKb,MAAM+sB,SAAiB,OAAS,SAAU9tB,QAAS,WAC7F,OAAQ,EAAKe,MAAM+sB,UACf,KAAK,EACD,OAAO,EAAKjtB,SAAS,CAACitB,SAAU,IACpC,QACI,OAAO,EAAKjtB,SAAS,CAACitB,SAAU,OAGvC,WACD,OAAQ,EAAK/sB,MAAM+sB,UACf,KAAK,EACD,OAAO,EAAKn0B,MAAM4J,cAAc0sB,WACpC,QACI,OAAO,EAAKt2B,MAAM4J,cAAc2sB,UALvC,IAST,yBAAK5xB,GAAG,oBACJ,yBAAKA,GAAG,UAAU0B,QAAS,WACvB,OAAQ,EAAKe,MAAM+sB,UACf,KAAK,EACD,OAAO,EAAKjtB,SAAS,CAACitB,SAAU,IACpC,QACI,OAAO,EAAKjtB,SAAS,CAACitB,SAAU,OAGvC,WACD,OAAQ,EAAK/sB,MAAM+sB,UACf,KAAK,EACD,OAAO,EAAKn0B,MAAM4J,cAAc4sB,MACpC,QACI,OAAO,EAAKx2B,MAAM4J,cAAc6sB,SALvC,IASL,yBAAK9xB,GAAG,QAAQ0B,QAAS,WACrB,OAAQ,EAAKe,MAAM+sB,UACf,KAAK,EACD,EAAK4B,UACL,MACJ,KAAK,EACD,EAAKC,WACL,MACJ,KAAK,EACD,EAAKC,YACL,MACJ,KAAK,EACD,EAAKC,oBAIb,uBAAGlxB,UAAU,sBAAsBC,MAAO,CAACoF,aAAc,SAAY,0BAAM1F,GAAG,cAAe,WACzF,OAAO,EAAKyC,MAAM+sB,UACd,KAAK,EACL,KAAK,EACD,OAAO,EAAKn0B,MAAM4J,cAAc8sB,IACpC,KAAK,EACD,OAAO,EAAK12B,MAAM4J,cAAc+sB,QACpC,KAAK,EACD,OAAO,EAAK32B,MAAM4J,cAAcgtB,MACpC,KAAK,EAEL,KAAK,EACD,OAAO,EAAK52B,MAAM4J,cAAcitB,SAZiD,KAgB/F,WACE,GAA4B,IAAxB,EAAKzvB,MAAM+sB,SAAgB,OAAO,yBAAKnvB,UAAU,cAAcL,GAAG,OAAO0B,QAAS,EAAKywB,SAAU,EAAK92B,MAAM4J,cAAcmtB,MADhI,U,GApNPzrB,c,MCrBF1E,EAAQ,IAyCVowB,OAvCf,SAAgBh3B,GACZ,OACI,yBAAKiF,MAAO,CAAC8O,MAAO,OAAQD,OAAQ,OAAQ3O,SAAU,WAAYsB,QAAS,OAAQwwB,eAAgB,SAAUre,WAAY,WACrH,yBAAK3T,MAAO,CAACmK,YAAa,GAAI8nB,SAAU,MACpC,uDADJ,IACoC,6BAE5B,8DAHR,IAG+C,6BAH/C,+BAKqCl3B,EAAMsiB,MAL3C,MAKoD,6BALpD,8CAM+C,6BAN/C,yCASA,yBAAKrd,MAAO,CAAC6J,WAAY,GAAIooB,SAAU,MACnC,6BAEA,yBAAKjyB,MAAO,CAACwE,SAAU,KAAvB,yuBCjBC7C,EAAQ,IAsCVuwB,OApCf,SAAoBn3B,GAChB,OACI,yBAAKiF,MAAO,CAAC8O,MAAO,OAAQD,OAAQ,OAAQ3O,SAAU,WAAYsB,QAAS,OAAQwwB,eAAgB,SAAUre,WAAY,SAAU7J,MAAM,iCACrI,yBAAK9J,MAAO,CAACmK,YAAa,GAAI8nB,SAAU,MACpC,uDADJ,IACoC,6BAChC,yDAFJ,IAEsC,6BAClC,qEAHJ,IAGqD,6BACjD,4DAJJ,IAI4C,8BAE5C,yBAAKjyB,MAAO,CAAC6J,WAAY,GAAIooB,SAAU,MACnC,6BAEA,yBAAKjyB,MAAO,CAACwE,SAAU,GAAIsF,MAAM,8BAAjC,yuB,+BC0CVpI,GAAWC,EAAQ,IAIjBqtB,GAAYzF,UAAZyF,QAwBRmD,YAAY,CAAEC,kBAAkB,I,IA2KjBC,G,kDAvKX,WAAYt3B,GAAQ,IAAD,sBACf,cAAMA,GAEN,IAAI4J,EAAgB,IAAI2tB,KAAiB,CACrCC,GAAI5wB,EAAQ,KACZ6wB,GAAI7wB,EAAQ,KACZ8wB,GAAI9wB,EAAQ,OAND,OAaf,EAAKQ,MAAQ,CAAC+sB,SAAU,SAAU3xB,IAAK,GAAIwI,YAAa,GAAIpB,iBAGxDP,OAAOsuB,WAAW,+BAA+BC,SACjDjD,IAAE,QAAQkD,cACVlD,IAAE,QAAQI,SAAS,iCAGnBJ,IAAE,QAAQkD,cACVlD,IAAE,QAAQI,SAAS,iCAIvB,EAAK/wB,SAAW,IAAI0qB,GAASoJ,IAC7B,EAAK9zB,SAAS4F,cAAgBA,EAE9BjD,GAAS,gBA7BM,E,8LAkCX0tB,EAAOpsB,K,SAKL6vB,GAAO/b,MAAM,CAACuY,aAAW,WAAY,Q,OAK3CL,GAAQ/gB,IAAI,CAACxN,IAAK,sBAAsB8R,MAAK,SAACugB,GAC1C,OAAQA,EAAO3qB,OAEX,IAAK,WAEDknB,UAAgB0D,oBAAmB,SAASC,GACnCA,GAIDH,GAAO7J,IAAI,WAAYoG,EAAKrwB,SAASk0B,gBAErC7D,EAAKntB,SAAS,CAACitB,SAAU,WAAY3xB,IAAKy1B,EAAKz1B,IAAKwI,YAAaitB,EAAKjtB,eALtEqpB,EAAK8D,aAAa,CAACztB,UAAU,cAQrC,MAEJ,IAAK,OAEDotB,GAAO7J,IAAI,OAAQoG,EAAKrwB,SAASk0B,gBAEjC,EAAKhxB,SAAS,CAACitB,SAAU,OAAQ3xB,IAAI,sBACrC,MAEJ,QACI,EAAK0E,SAAS,CAACitB,SAAU,OAAQ3xB,SAAI+E,Q,yIAOxC6B,GAAO,IAEZ5G,EACA8H,EAHW,OAIf,OAAQlB,EAAKsB,WAET,IAAK,QAOD,OALAotB,GAAO7J,IAAI7kB,EAAK0rB,QAAS7sB,KAAKjE,SAASk0B,gBAEvCjE,GAAQ5xB,IAAI,CAACqD,IAAK,oBAAqB0H,MAAOhE,EAAK0rB,UAG3C1rB,EAAK0rB,SAET,IAAK,WAEDtyB,EAAM8xB,UAAgBM,YAAYpyB,IAClC8H,EAAOgqB,UAAgBM,YAAY5pB,YACnC,MACJ,QAEIxI,EAAM,oBACN8H,EAAO,GAIfrC,KAAKf,SAAS,CAACitB,SAAU/qB,EAAK0rB,QAAStyB,MAAKwI,YAAaV,IACzD,MAEJ,IAAK,SAID,OAFAwtB,GAAO7J,IAAI7kB,EAAK0rB,QAAS7sB,KAAKjE,SAASk0B,gBACvCjE,GAAQ5xB,IAAI,CAACqD,IAAK,oBAAqB0H,MAAOhE,EAAK0rB,UAC3C1rB,EAAK0rB,SAET,IAAK,WAEDtyB,EAAM8xB,UAAgBM,YAAYpyB,IAClC8H,EAAOgqB,UAAgBM,YAAY5pB,YACnC,MACJ,QAEIxI,EAAM,oBACN8H,EAAO,GAKfrC,KAAKf,SAAS,CAACitB,SAAU,aAAc3xB,MAAKwI,YAAaV,IACzDwtB,GAAOvvB,GAAGgjB,QAAQ/oB,EAAKstB,KAAKC,iBAAiBC,kBAAkBC,SAAsD,OAA5ChoB,KAAKjE,SAAS4F,cAAcqF,cAAuB,QAAS,GAAIhH,KAAKjE,SAAS4F,cAAcwuB,oBAAoB5gB,MAAK,SAAA1S,GAAC,OAAE,EAAKoC,SAAS,CAACitB,SAAU/qB,EAAK0rB,QAAStyB,MAAKwI,YAAaV,OAI1P,MACJ,IAAK,SAED2pB,GAAQ5xB,IAAI,CAACqD,IAAK,oBAAqB0H,MAAO,SAE9CknB,UAAgB+D,UAEhBpwB,KAAKf,SAAS,CAACitB,SAAU,OAAQ7pB,KAAM,Q,+BAS/C,OAAQrC,KAAKb,MAAM+sB,UAEf,IAAK,SACD,OAAO,kBAAC,GAAD,MAEX,IAAK,OACD,OAAO,kBAAC,GAAD,CAAM1pB,SAAUxC,KAAKkwB,aAAcvuB,cAAe3B,KAAKb,MAAMwC,gBAExE,IAAK,WACL,IAAK,OACD,OAAO,kBAAC5C,GAAA,EAAD,CAAMnB,OAAQiyB,GAAQt1B,IAAKyF,KAAKb,MAAM5E,IAAKiI,SAAUxC,KAAKkwB,aAAcn0B,SAAUiE,KAAKjE,SAAUgH,YAAa/C,KAAKb,MAAM4D,YAAapB,cAAe3B,KAAKb,MAAMwC,gBAE3K,IAAK,aACD,OAAO,kBAAC,GAAD,MACX,QAEI,OADA0O,QAAQgK,MAAR,yCAAgDra,KAAKb,MAAM+sB,WACpD,kBAAC,GAAD,CAAQmE,SAAS,EAAMhW,MAAOra,KAAKb,MAAM+sB,gB,GAnK9C7oB,aChFEitB,QACW,cAA7BlvB,OAAOmvB,SAASC,UAEe,UAA7BpvB,OAAOmvB,SAASC,UAEhBpvB,OAAOmvB,SAASC,SAASxtB,MACvB,2DCbNytB,IAAS7tB,OAAO,kBAAC,GAAD,MAASjD,SAAS+wB,eAAe,SDsI3C,kBAAmBrvB,WACrBA,UAAUsvB,cAAcC,MAAMrhB,MAAK,SAAAshB,GACjCA,EAAaC,iB,mMEpHbpyB,G,OAAWC,EAAQ,KA+KVoyB,E,kDA5KX,WAAYh5B,GAAQ,IAAD,6BACf,cAAMA,GACN2G,EAAS,gBAET,EAAKS,MAAQ,CACTkD,KAAM,GACNmf,KAAM,OACNwP,UAAU,EACVrI,QAAIrpB,GARO,E,uLAaMU,KAAKjI,MAAM6F,OAAO0C,GAAGyb,mBAAmB/b,KAAKjI,MAAMwC,IAAKyF,KAAKjI,MAAMyF,K,OAApFsnB,E,OACJ9kB,KAAKf,SAAS,CACVoD,KAAMyiB,EAASziB,KACfmf,KAAMsD,EAASvD,OAASuD,EAASvD,OAAOC,KAAO,OAC/CwP,WAAUlM,EAASvD,aAAiCjiB,IAAvBwlB,EAASvD,OAAOoH,GAC7CA,GAAI7D,EAASvD,OAASuD,EAASvD,OAAOoH,QAAKrpB,I,gJAK/CU,KAAKixB,a,+BAGC,IAAD,OACL,OACI,kBAAC,IAAD,CAAUr0B,IAAKoD,KAAKjI,MAAM4K,UAAW+K,OAAQ1N,KAAKjI,MAAMgU,QAASC,aAAc,WAAU,EAAKjU,MAAMiU,cAAc,EAAKjU,MAAMiU,gBAAiBhP,MAAO,CAACC,aAAc,GAAI0Q,SAAU,eAAgB,WAE7L,OAAQ,EAAKxO,MAAMqiB,MACd,IAAK,OAEL,IAAK,QACD,MAAO,uBACX,IAAK,SACD,OAAQ,EAAKriB,MAAM6xB,SAAW,+BAAiC,uBACnE,IAAK,UACD,OAAQ,EAAK7xB,MAAM6xB,SAAW,gCAAkC,uBACpE,IAAK,SACD,MAAO,wBAZ6K,IAe9L,6BAEI,yBAAKj0B,UAAU,iBAEX,0BAAMC,MAAO,CAACwB,QAAS,OAAQmS,WAAY,SAAU7E,MAAO,SACjE,uBAAG/O,UAAU,eAAgBiD,KAAKjI,MAAMgE,SAAS4F,cAAcuvB,aAC/D,yBAAKn0B,UAAU,oBAAoBiD,KAAKb,MAAMkD,OAGzC,uBAAGtF,UAAU,eAAeqB,QAAS4B,KAAKjI,MAAMiU,cAAc,uBAAGjP,UAAU,kBAE/E,6BACI,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,wBACf,8BACI,uBAAGA,UAAU,4BACb,0BAAMA,UAAU,gBAAgBiD,KAAKjI,MAAMgE,SAAS4F,cAAcuvB,cAGtE,kBAAC,IAAD,CAAWn0B,UAAU,gBAAgBoU,UAAU,UAAUhM,MAAOnF,KAAKb,MAAMqiB,KAAMrgB,KAAK,MAAMiQ,YAAa,SAAAvU,GAEjG,EAAK9E,MAAMgE,SAASC,GAChB,cACA,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAACqS,OAAQ,CAACC,KAAM3kB,EAAEwU,OAAOlM,UAI/E,EAAKlG,SAAS,CAACuiB,KAAM3kB,EAAEwU,OAAOlM,MAAO6rB,UAAU,EAAOrI,QAAIrpB,MAG9D,kBAAC,IAAD,CAAiBvC,UAAU,wBAAwBoI,MAAM,QAAzD,iBACA,kBAAC,IAAD,CAAiBpI,UAAU,wBAAwBoI,MAAM,SAASnF,KAAKjI,MAAMgE,SAAS4F,cAAcwvB,kBACpG,kBAAC,IAAD,CAAiBp0B,UAAU,wBAAwBoI,MAAM,UAAUnF,KAAKjI,MAAMgE,SAAS4F,cAAcyvB,mBACrG,kBAAC,IAAD,CAAiBr0B,UAAU,wBAAwBoI,MAAM,WAAWnF,KAAKjI,MAAMgE,SAAS4F,cAAc0vB,oBACtG,kBAAC,IAAD,CAAiBt0B,UAAU,wBAAwBoI,MAAM,UAAUnF,KAAKjI,MAAMgE,SAAS4F,cAAc2vB,qBAKrG,uBAAGt0B,MAAO,CAAC8J,MAAO,8BAA+ByqB,MAAO,QAASp0B,OAAQ,UAAWqB,QAAS,CAAC,SAAU,WAAWtD,SAAS8E,KAAKb,MAAMqiB,MAAQ,SAAW,QAAUzkB,UAAW,QAAUiD,KAAKb,MAAM6xB,SAAW,gBAAgB,eAAgB5yB,QAAS,WAChP,EAAKe,MAAM6xB,UACX,EAAKj5B,MAAMgE,SAASC,GAChB,cACA,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAACqS,OAAQ,CAACC,KAAM,EAAKriB,MAAMqiB,SAEjF,EAAKviB,SAAS,CAACuiB,KAAM,EAAKriB,MAAMqiB,KAAMwP,UAAU,EAAOrI,QAAIrpB,MAE3D,EAAKvH,MAAMgE,SAASC,GAChB,cACA,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAACqS,OAAQ,CAACC,KAAM,EAAKriB,MAAMqiB,KAAMmH,GAAI,OAE3F,EAAK1pB,SAAS,CAACuiB,KAAM,EAAKriB,MAAMqiB,KAAMwP,UAAU,EAAMrI,GAAI,WAM9E,yBAAK3rB,MAAO,CAAC+S,OAAQ,YAAajJ,MAAO,8BACnC,WACE,GAAI,EAAK3H,MAAM6xB,SACX,OAAQ,EAAK7xB,MAAMqiB,MACf,IAAK,SACD,OACI,yBAAKzkB,UAAU,mBAGV,CAAC,CAAC,IAAK,EAAKhF,MAAMgE,SAAS4F,cAAc6vB,4BAA6B,CAAC,IAAK,EAAKz5B,MAAMgE,SAAS4F,cAAc8vB,6BAA8B,CAAC,IAAM,EAAK15B,MAAMgE,SAAS4F,cAAc+vB,4BAA6B,CAAC,KAAO,EAAK35B,MAAMgE,SAAS4F,cAAcgwB,6BAA8B,CAAC,IAAM,EAAK55B,MAAMgE,SAAS4F,cAAciwB,4BAA6B,CAAC,IAAM,EAAK75B,MAAMgE,SAAS4F,cAAckwB,6BAA8B,CAAC,KAAO,EAAK95B,MAAMgE,SAAS4F,cAAcmwB,8BAA8Bl5B,KAAI,SAAAiE,GAAC,OAAI,uBAAGY,IAAKZ,EAAGE,UAAW,2BAAoC,EAAKoC,MAAMwpB,IAAa,EAAKxpB,MAAMwpB,GAAGztB,SAAS2B,EAAE,IAAM,kCAAmD,IAAQuB,QAAS,WAC1qB,GAAI,EAAKe,MAAMwpB,GAAGztB,SAAS2B,EAAE,IAAK,CAC9B,IACIk1B,EADQ,EAAK5yB,MAAMwpB,GACL9sB,QAAO,SAAAm2B,GAAI,OAAEA,IAAOn1B,EAAE,MAExC,EAAK9E,MAAMgE,SAASC,GAChB,cACA,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAACqS,OAAQ,CAACC,KAAM,EAAKriB,MAAMqiB,KAAMmH,GAAIoJ,MAE3F,EAAK9yB,SAAS,CAAC0pB,GAAIoJ,QACf,CACJ,IAAIE,EAAQ,EAAK9yB,MAAMwpB,GACvBsJ,EAAM1zB,KAAK1B,EAAE,IACb,IAAIk1B,EAAQE,EAEZ,EAAKl6B,MAAMgE,SAASC,GAChB,cACA,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAACqS,OAAQ,CAACC,KAAM,EAAKriB,MAAMqiB,KAAMmH,GAAIoJ,MAE3F,EAAK9yB,SAAS,CAAC0pB,GAAIoJ,OAEvBl1B,EAAE,QAGlB,IAAK,UACD,OACI,yBAAKE,UAAU,mBAEV,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAAQnE,KAAI,SAAAiE,GAAC,OAAI,uBAAGY,IAAKZ,EAAGE,UAAW,2BAAoC,EAAKoC,MAAMwpB,IAAa,EAAKxpB,MAAMwpB,GAAGztB,SAAS2B,EAAEsY,eAAiB,kCAAmD,IAAQ/W,QAAS,WAChY,GAAI,EAAKe,MAAMwpB,GAAGztB,SAAS2B,EAAEsY,eAAgB,CACzC,IACI4c,EADQ,EAAK5yB,MAAMwpB,GACL9sB,QAAO,SAAAm2B,GAAI,OAAEA,IAAOn1B,EAAEsY,iBAExC,EAAKpd,MAAMgE,SAASC,GAChB,cACA,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAACqS,OAAQ,CAACC,KAAM,EAAKriB,MAAMqiB,KAAMmH,GAAIoJ,MAE3F,EAAK9yB,SAAS,CAAC0pB,GAAIoJ,QACf,CACJ,IAAIE,EAAQ,EAAK9yB,MAAMwpB,GACvBsJ,EAAM1zB,KAAK1B,EAAEsY,eACb,IAAI4c,EAAQE,EAEZ,EAAKl6B,MAAMgE,SAASC,GAChB,cACA,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAACqS,OAAQ,CAACC,KAAM,EAAKriB,MAAMqiB,KAAMmH,GAAIoJ,MAE3F,EAAK9yB,SAAS,CAAC0pB,GAAIoJ,OAEvBl1B,QAzD1B,U,GAtGLwG,aC4DN6uB,G,OAzDEvzB,EAAQ,I,kDAGrB,WAAY5G,GAAQ,IAAD,8BACf,cAAMA,IACDoH,MAAQ,CACTgzB,QAAS,IAHE,E,oLAQYnyB,KAAKjI,MAAM6F,OAAO0C,GAAGijB,QAAQvjB,KAAKjI,MAAMwC,K,OAAnEyF,KAAKb,MAAMgzB,Q,uJAIXnyB,KAAKoyB,gB,mCAIL/hB,QAAQC,IAAI,kB,+BAGN,IAAD,OACL,OACI,kBAAC,IAAD,CAAU1T,IAAKoD,KAAKjI,MAAM4K,UAAW+K,OAAQ1N,KAAKjI,MAAMgU,QAASuK,aAAc,WAAO,EAAK8b,eAAgBpmB,aAAc,WAAU,EAAKjU,MAAMiU,cAAc,EAAKjU,MAAMiU,gBAAiBhP,MAAO,CAACC,aAAc,EAAGo1B,OAAQ,iBAAkB1kB,SAAU,cAGjP,yBAAK5Q,UAAU,oBACX,0BAAMC,MAAO,CAACwB,QAAS,cAAemS,WAAY,WACvD,uBAAG5T,UAAU,eAAb,SAIK,uBAAGA,UAAU,kBAAkBqB,QAAS4B,KAAKjI,MAAMiU,cAAc,uBAAGjP,UAAU,kBAIlF,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,YACViD,KAAKb,MAAMgzB,QAAQv5B,KAAI,SAAAgkB,GACpB,OACI,yBAAK7f,UAAU,eACX,yBAAKA,UAAU,YACV6f,EAAIva,MAET,uBAAGtF,UAAU,mBAAyD,uBAAGA,UAAU,sBAKnG,yBAAKA,UAAU,uB,GAhDXsG,c,QCKhBgjB,G,aAAsB1nB,EAAQ,KAA9B0nB,mBAGF3nB,EAAWC,EAAQ,IAgBnB2zB,EAAmBC,YAAUC,OAAO,CAEtC/qB,KAAM,CACFzI,GAAI,CACAyzB,WAAW,GACXC,WAAY,UACZC,eAAe,GACfC,YAAa,EACbC,gBAAiB,EACjBC,kBAAmB,EACnBC,YAAa,EACbC,mBAAoB,GACpBC,aAAc,GACdC,YAAa,GACbC,cAAe,IAEnBz5B,OAAQ,CACJC,QAAS,IACTC,SAAU,GACVC,KAAM,GAEVu5B,OAAO,GAIX1rB,KAAM,CACF1I,GAAI,CACAyzB,WAAW,GACXC,WAAW,YACXC,eAAe,uBACfC,YAAa,GACbC,gBAAiB,EACjBK,YAAa,GACbH,YAAa,EACbD,kBAAmB,IACnBE,mBAAoB,GACpBC,aAAc,GACdE,cAAe,KAEnBz5B,OAAQ,CACJC,QAAS,IACTC,SAAU,GACVC,KAAM,GAEVu5B,OAAO,GAGXC,SAAU,CACN,CACIr0B,GAAI,CACA0zB,WAAY,WACZM,mBAAoB,eACpBD,YAAa,EACbE,aAAc,IAElBv5B,OAAQ,CACJC,QAAS,IACTC,SAAU,GACVC,KAAM,IAId,CACImF,GAAI,CACAm0B,cAAe,EACfV,WAAW,EACXM,YAAa,EACbL,WAAY,UACZE,YAAa,EACbK,aAAc,YAElBv5B,OAAQ,CACJC,QAAS,IACTC,SAAU,GACVC,KAAM,OAOhBy5B,E,kDAEF,WAAYv7B,GAAQ,IAAD,8BAEf,cAAMA,IAuHVw7B,qBAAuB,kBAAM5zB,SAAS6zB,oBAAoB,YAAa,EAAKC,oBAAoB,IAzH7E,EA2HnBC,WAAa,kBAAM,EAAKz0B,UAAS,SAAAE,GAAK,MAAK,CAACw0B,UAAWx0B,EAAMw0B,cAtHzDj1B,EAAS,gBAET,EAAKS,MAAQ,CACTw0B,UAAU,EACVC,eAAWt0B,EACXu0B,aAASv0B,EACT+C,KAAM,GACN8e,KAAM,GACNC,WAAW,EACXC,YAAY,EACZ5D,QAAQ,GACRd,KAAM,GACNmX,WAAY,GACZj2B,cAAc,EACdmd,YAAY,EACZ+Y,YAAY,EACZC,eAAe,EACfC,mBAAmB,EACnBC,iBAAiB,EACjB3lB,kBAAmB,EAAKxW,MAAMwW,kBAC9BxK,aAAc,EAAKhM,MAAM4F,SAAS,GAClCw2B,sBAA4C70B,IAAzB,EAAKvH,MAAMq8B,YAAoD,IAAzB,EAAKr8B,MAAMq8B,UACpEC,yBAA0B,EAAC,EAAO,MAClCC,2BAA2B,EAC3BC,iBAAiB,GAErB,EAAKC,mBAAoB,EACzB,EAAKC,GAAK37B,IAAMC,YAChB,EAAK2T,SAAW5T,IAAMC,YACtB,EAAK27B,SAAW57B,IAAMC,YACtB,EAAK47B,aAAe77B,IAAMC,YAC1B,EAAK67B,YAAc97B,IAAMC,YACzB,EAAK87B,WAAa/7B,IAAMC,YACxB,EAAK+7B,aAAeh8B,IAAMC,YAC1B,EAAKg8B,oBAAsBj8B,IAAMC,YACjC,EAAKi8B,qBAAuBl8B,IAAMC,YAxCnB,E,yDA2CLiH,KAAKf,SAAS,CAAC80B,YAAY,M,mCAC3B/zB,KAAKf,SAAS,CAAC80B,YAAY,M,sCAExB/zB,KAAKf,SAAS,CAAC+0B,eAAe,M,uCAC7Bh0B,KAAKf,SAAS,CAACg2B,gBAAgB,M,8CAEzBp4B,GAChBmD,KAAKb,MAAMo1B,gBACXv0B,KAAKf,SAAS,CAACo1B,yBAA0B,EAAC,EAAMx3B,EAAEq4B,eAElDl1B,KAAKf,SAAS,CAACq1B,2BAA2B,M,iKAOzBt0B,KAAKjI,MAAM6F,OAAO0C,GAAGyb,mBAAmB/b,KAAKjI,MAAMwC,IAAKyF,KAAKjI,MAAMyF,K,cAApFsnB,E,YAGJ9kB,K,KACU8kB,EAASziB,K,KACTyiB,EAAS3D,K,KACN2D,EAASrH,Q,KACZqH,EAASnI,K,KACHmI,EAASzD,W,KACVyD,EAAS1D,U,KACR0D,EAAS9J,W,KAEjB8J,EAASxe,IACRwe,EAASzD,WACN,IAAI7d,KAA0B,IAArBshB,EAASxe,IAAIC,SACtB8f,EACK,IAAI7iB,KAA0B,IAArBshB,EAASxe,IAAIC,SAAegiB,cACtC,CAACP,SAAUlD,EAASxD,gBAG5BhiB,E,KAGAwlB,EAASlR,MACRkR,EAASzD,WACN,IAAI7d,KAA4B,IAAvBshB,EAASlR,MAAMrN,SACxB8f,EACK,IAAI7iB,KAA4B,IAAvBshB,EAASlR,MAAMrN,SAAegiB,cACxC,CAACP,SAAUlD,EAASxD,gBAEzBhiB,E,UAEgBU,KAAKjI,MAAMgE,SAASo5B,kBAAkBn1B,KAAKjI,MAAMyF,K,4BA5BxE6E,K,KACA8e,K,KACA1D,Q,KACAd,K,KACA0E,W,KACAD,U,KACApG,W,KACA6Y,Q,KAWAD,U,KAUAW,gB,YA7BCt1B,S,iBA+BLe,KAAKo1B,qBACLp1B,KAAKw0B,mBAAoB,E,kJAIrBx0B,KAAKb,MAAM00B,UACP7zB,KAAKb,MAAM00B,QAAS,IAAIrwB,KAAU,EAClCxD,KAAKf,SAAS,CAAC60B,WAAY,OAC1B9zB,KAAKb,MAAM00B,QAAS,IAAIrwB,KAAU,MACvCxD,KAAKf,SAAS,CAAC60B,WAAY,OAE3B9zB,KAAKf,SAAS,CAAC60B,WAAY,MAE3B9zB,KAAKb,MAAMy0B,YACP5zB,KAAKb,MAAMy0B,UAAW,IAAIpwB,KAAU,EACpCxD,KAAKf,SAAS,CAACpB,cAAc,KACA,IAA5BmC,KAAKjI,MAAM8F,aAChBmC,KAAKf,SAAS,CAACpB,cAAc,IACvBmC,KAAKjI,MAAM8F,cACjBmC,KAAKf,SAAS,CAACpB,cAAc,O,0CAIjCmC,KAAKixB,WACLtxB,SAAS01B,iBAAiB,YAAar1B,KAAKyzB,oBAAoB,K,kCAQhEzzB,KAAKf,SAAS,CAAC00B,UAAU,M,iCAIjB,IAAD,OACH3zB,KAAKb,MAAMg1B,iBACXn0B,KAAKf,SAAS,CAAC00B,UAAU,IAEzB3zB,KAAKf,SAAS,CAACk1B,kBAAkB,IAAO,kBAAI,EAAKl1B,SAAS,CAAC00B,UAAU,S,iCAGjE,IAAD,OAEP3zB,KAAKw0B,mBAAoB,EACzBx0B,KAAKf,SAAS,CAACk1B,kBAAkB,IAAO,kBAAI,EAAKl1B,SAAS,CAAC00B,UAAU,S,yCAGtD92B,GAEXmD,KAAKy0B,GAAGv6B,SACJ8F,KAAKy0B,GAAGv6B,QAAQo7B,SAASz4B,EAAEyS,SAG/BtP,KAAK0M,SAASxS,SACV8F,KAAK0M,SAASxS,QAAQo7B,SAASz4B,EAAEyS,SAGrCtP,KAAK60B,WAAW36B,SACZ8F,KAAK60B,WAAW36B,QAAQo7B,SAASz4B,EAAEyS,SAGvCtP,KAAK80B,aAAa56B,SACd8F,KAAK80B,aAAa56B,QAAQo7B,SAASz4B,EAAEyS,SAGzCtP,KAAK+0B,oBAAoB76B,SACrB8F,KAAK+0B,oBAAoB76B,QAAQo7B,SAASz4B,EAAEyS,SAGhDtP,KAAKg1B,qBAAqB96B,SACtB8F,KAAKg1B,qBAAqB96B,QAAQo7B,SAASz4B,EAAEyS,SAGjDtP,KAAK20B,aAAaz6B,SACd8F,KAAK20B,aAAaz6B,QAAQo7B,SAASz4B,EAAEyS,SAWzC3P,SAAS+wB,eAAe,eAAe4E,SAASz4B,EAAEyS,SAGlDtP,KAAKjI,MAAM6V,SACPjO,SAAS+wB,eAAe,mBAAmB4E,SAASz4B,EAAEyS,SAG1DtP,KAAKb,MAAM40B,YAGX/zB,KAAKb,MAAM60B,eAIfh0B,KAAKu1B,c,yCAGUr1B,EAAWC,EAAWC,GAEjCD,EAAUyzB,YAAc5zB,KAAKb,MAAMy0B,WACnC5zB,KAAKo1B,qBACLj1B,EAAU0zB,UAAY7zB,KAAKb,MAAM00B,SACjC7zB,KAAKo1B,qBACLj1B,EAAUwzB,WAAa3zB,KAAKb,MAAMw0B,WAAoC,IAAxB3zB,KAAKb,MAAMw0B,UACrD7M,cAAe5rB,SAAS,YACxByE,SAAS+wB,eAAe,SAAS1zB,MAAMwB,QAAU,QACjDwB,KAAKjI,MAAMU,gBACXuH,KAAKjI,MAAMU,gBAAe,GAC9BuH,KAAKjI,MAAMgE,SAAS0U,eAEftQ,EAAUwzB,WAAa3zB,KAAKb,MAAMw0B,WAAoC,IAAxB3zB,KAAKb,MAAMw0B,WAC1D7M,cAAe5rB,SAAS,YACxByE,SAAS+wB,eAAe,SAAS1zB,MAAMwB,QAAU,SACjDwB,KAAKjI,MAAMU,gBACXuH,KAAKjI,MAAMU,gBAAe,GAC9BuH,KAAKjI,MAAMgE,SAAS2U,iBAEpBxQ,EAAUk0B,YAAcp0B,KAAKjI,MAAMq8B,WAAap0B,KAAKjI,MAAMq8B,WAC3Dp0B,KAAKw1B,a,+BAMH,IAAD,OAEL,OACI,6BAII,kBAAClD,EAAD,CAEImD,QAAM,EAENt2B,MACIa,KAAKw0B,kBACAx0B,KAAKb,MAAM6b,WACPhb,KAAKb,MAAMoP,kBACPvO,KAAKb,MAAMw0B,SACR,OAAO,OACN,WAET3zB,KAAKb,MAAMoP,kBACX,WACCvO,KAAKb,MAAMw0B,SAAU,OAAO,OAAS,SAIjD,SAAA+B,GACG,OAEI,kBAAC,WAAS54B,IAAV,CACIsB,QAAS,SAACvB,GACF,EAAKsC,MAAMw0B,UAAY92B,EAAEyS,SAAW,EAAKolB,SAASx6B,SAAW2C,EAAEyS,SAAW,EAAKslB,YAAY16B,SAAY,EAAKnC,MAAM49B,QAAY,EAAKx2B,MAAM6b,aAAa,EAAK7b,MAAMoP,mBACjK,EAAKinB,YAGbz4B,UAAW,SAAS,EAAKoC,MAAMw0B,SAAS,WAAW,aAEnD/2B,IAAK,EAAK63B,GAEVz3B,MAAO,CACH44B,UAAWF,EAAcjD,WACzBoD,UAAWH,EAAcvC,cACzBpjB,OAAQ2lB,EAAchD,WACtBoD,WAAWJ,EAAc/C,eACzBx0B,QAAQu3B,EAAc3C,YACtBrsB,SAAU,SACVlI,QAASk3B,EAAcxC,YACvBh2B,SAAUkZ,WAAS6c,aACnB8C,QAASL,EAAc9C,cAO3B,kBAAC,EAAD,CAAQp1B,IAAK,EAAKzF,MAAMyF,IAAKmF,UAAW,EAAK+J,SAAUX,QAAS,EAAK5M,MAAM40B,WAAY/nB,aAAc,EAAKgqB,WAAYz7B,IAAK,EAAKxC,MAAMwC,IAAKqD,OAAQ,EAAK7F,MAAM6F,OAAQ7B,SAAU,EAAKhE,MAAMgE,WAE3L,kBAAC,EAAD,CAAW4G,UAAW,EAAKgyB,aAAc5oB,QAAS,EAAK5M,MAAM60B,cAAehoB,aAAc,kBAAI,EAAK/M,SAAS,CAAC+0B,eAAe,KAASz5B,IAAK,EAAKxC,MAAMwC,IAAKqD,OAAQ,EAAK7F,MAAM6F,OAAQ7B,SAAU,EAAKhE,MAAMgE,WAI1M,yBAAKiB,MAAO,CAACwB,QAAS,eAAgBpB,UAAW,qBAE7C,2BACIlB,KAAK,WAExCU,IAAK,EAAKg4B,YACyBl4B,GAAI,cAAc,EAAK3E,MAAMyF,IAC7BT,UAAU,aACVk5B,eAAgB,EAAKl+B,MAAMwW,kBAC3BoB,SAAU,WAGF,EAAKxQ,MAAM6b,YACX,EAAKjjB,MAAMgE,SAAS0U,cAEpB,EAAKxR,SAAS,CAAC+b,YAAY,IAE3B,EAAKjjB,MAAMgE,SAASC,GAAG,0BAA2B,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,MAAM,GAE/F,EAAKzF,MAAMgE,SAAS2U,cAAc,MAG5B,EAAKvR,MAAM6b,aAEjB,EAAKjjB,MAAMgE,SAAS0U,cAEpB,EAAKxR,SAAS,CAAC+b,YAAY,IAE3B,EAAKjjB,MAAMgE,SAASC,GAAG,wBAAyB,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,MAAM,GAE7F,EAAKzF,MAAMgE,SAAS2U,cAAc,OAG1C1T,MAAO,CAACmB,QAAS,EAAKgB,MAAMtB,aAAa,EAAE,OAK/C,2BAAOjB,IAAK,EAAK83B,SAAU33B,UAAW,oBAAoB,EAAKoC,MAAM20B,WAAYp3B,GAAI,oBAAoB,EAAK3E,MAAMyF,IAAK04B,QAAS,cAAc,EAAKn+B,MAAMyF,KAA3J,WAIJ,kBAAC,WAAS2V,MAAV,CACIrC,aAAc,EAAK3R,MAAMkD,KACzBsN,SACI,SAAC9S,GAKGA,EAAE+S,UAKF,EAAK7X,MAAMgE,SAASqT,mBAAkB,kBAAM,EAAKrX,MAAMgE,SAASC,GAC5D,cACA,CACIzB,IAAK,EAAKxC,MAAMwC,IAChBiD,IAAK,EAAKzF,MAAMyF,IAChB0R,MAAM,CAAC7M,KAAMxF,EAAEyS,OAAOnK,WAL9B,oBAOgB,EAAKpN,MAAMyF,IAP3B,aAWR6V,QAAS,SAACxW,GAEF,EAAKsC,MAAMw0B,UAEP7M,cAAe5rB,SAAS,WAAW2B,EAAEyS,OAAO4E,QAGxDnX,UAAW,cAAc,EAAKoC,MAAMw0B,SAAS,GAAG,aAChDvgB,UAAY,EAAKjU,MAAMw0B,SACvBz3B,KAAK,OACLuxB,aAAa,MACbzc,YAAa,EAAKjZ,MAAMgE,SAAS4F,cAAcw0B,GAC/Cn5B,MAAO,CAACmB,QAAS,EAAKgB,MAAMtB,aAAa,EAAE,IAAMu4B,eAAgBV,EAAc1C,sBAGjF,WACE,IAAkC,IAA9B,EAAK7zB,MAAMg1B,iBACX,OACI,kBAAC,WAASr3B,IAAV,CAAcC,UAAU,YAAYC,MAAO,CAACmB,QAASu3B,EAAc7C,gBAAiBnsB,SAAU,SAASmvB,UAAWH,EAAc5C,oBAG5H,8BACI9hB,YAAa,EAAKjZ,MAAMgE,SAAS4F,cAAcwf,KAC/CpkB,UAAU,YACVC,MAAO,CAACoP,aAAc,IACtB0E,aAAc,EAAK3R,MAAMgiB,KACzBxR,SACI,SAAC9S,GAGGA,EAAE+S,UACF,EAAK7X,MAAMgE,SAASqT,mBAAkB,kBAAM,EAAKrX,MAAMgE,SAASC,GAC5D,cACA,CACIzB,IAAK,EAAKxC,MAAMwC,IAChBiD,IAAK,EAAKzF,MAAMyF,IAChB0R,MAAM,CAACiS,KAAMtkB,EAAEyS,OAAOnK,WAL9B,oBAOgB,EAAKpN,MAAMyF,IAP3B,eAcZ,yBAAKR,MAAO,CAACwB,QAAS,eAAgB4N,aAAc,EAAGhP,UAAW,qBAE9D,uBAAGyS,WAAU,EAAK9X,MAAMgE,SAASyV,QAASzU,UAAU,YAAYC,MAAO,CAAC8S,YAAa,EAAK3Q,MAAMiiB,UAAY,oCAAoC,wBAAyBjkB,OAAQ,WAAYiB,QAAS,WAGlM,EAAKrG,MAAMgE,SAASC,GAChB,cACA,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAACkS,WAAY,EAAKjiB,MAAMiiB,aAG9E,EAAKniB,SAAS,CAACmiB,WAAY,EAAKjiB,MAAMiiB,cAEvC,uBAAGrkB,UAAU,cAAcC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,EAAK3H,MAAMiiB,UAAY,+BAAiC,wBAAyB5f,SAAU,GAAIpE,UAAW,0BAGlK,uBAAGyS,WAAS,qBAAqB9S,UAAU,YAAYC,MAAO,CAAC8S,YAAa,EAAK3Q,MAAMkiB,WAAY,oCAAoC,wBAAyBlkB,OAAQ,WAAYiB,QAAS,WAGzL,EAAKrG,MAAMgE,SAASC,GAChB,cACA,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAACmS,YAAa,EAAKliB,MAAMkiB,cAG/E,EAAKpiB,SAAS,CAACoiB,YAAa,EAAKliB,MAAMkiB,eAExC,uBAAGtkB,UAAU,wBAAwBC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,EAAK3H,MAAMkiB,WAAY,+BAAiC,wBAAyB7f,SAAU,GAAIpE,UAAW,0BAG5K,uBAAGgB,QAAS,EAAK21B,WAAYh3B,UAAU,YAAYC,MAAO,CAAC8S,YAAa,wBAAyB3S,OAAQ,WAAY0S,WAAS,oBAAmB,uBAAG9S,UAAU,cAAcC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,wBAAyBtF,SAAU,GAAIpE,UAAW,8BAGxP,kBAACi5B,EAAA,EAAD,CAAkBt6B,SAAU,EAAKhE,MAAMgE,SAAU4G,UAAW,EAAKqyB,qBAAsBz6B,IAAK,EAAKxC,MAAMwC,IAAK+7B,gBAAc,EAAC14B,OAAQ,EAAK7F,MAAM6F,OAAQmO,QAAS,EAAK5M,MAAMm1B,0BAA2BtoB,aAAc,kBAAI,EAAK/M,SAAS,CAACq1B,2BAA2B,KAASiC,SAAO,EAACC,YAAa,EAAKr3B,MAAM00B,QAAS1nB,eAAgB,SAACc,GAChU,EAAKlV,MAAMgE,SAAS06B,mBAAmB,EAAK1+B,MAAMyF,KAAK+R,MAAK,WACxD,EAAKxX,MAAMgE,SAAS26B,qBAAqB,EAAK3+B,MAAMyF,IAAK,EAAKzF,MAAMwC,IAAK,EAAK4E,MAAMkD,KAAM,EAAKlD,MAAMgiB,KAAMlU,GAC3G,EAAKhO,SAAS,CAACs1B,iBAAiB,UAGxC,kBAAC,IAAD,CACIoC,cAAc,EACdjpB,OAAQ,EAAKvO,MAAMk1B,yBAAyB,GAC5C1mB,SAAS,gBACTxM,KAAK,KACL6K,aAAc,SAAAnP,GAAC,OAAI,EAAKoC,SAAS,CAACo1B,yBAA0B,EAAC,EAAO,SACpE/gB,MAAO,EAAKnU,MAAMk1B,yBAAyB,GAC3Cz3B,IAAK,EAAKm4B,qBAEV,6BACI,yBAAKh4B,UAAU,4BAA4BqB,QAAS,WAChD,EAAKrG,MAAMgE,SAAS06B,mBAAmB,EAAK1+B,MAAMyF,KAClD,EAAKyB,SAAS,CAACs1B,iBAAiB,EAAOF,yBAA0B,EAAC,EAAO,UAF7E,uBAIA,yBAAKt3B,UAAU,4BAA4BqB,QAAS,kBAAI,EAAKa,SAAS,CAACq1B,2BAA2B,EAAMD,yBAAyB,EAAC,EAAO,UAAzI,yBAGN,WACE,GAAI,EAAKt8B,MAAMgE,SAAS2qB,yBAA4BI,cAAe5rB,SAAS,eAAgB4rB,cAAe5rB,SAAS,WAChH,OAAO,uBAAGkD,QAAS,EAAKw4B,wBAAyB75B,UAAU,YAAYC,MAAO,CAAC8S,YAAa,wBAAyB3S,OAAQ,WAAY0S,WAAS,oBAAmB,uBAAG9S,UAAU,cAAcC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,wBAAyBtF,SAAU,GAAIpE,UAAW,4BAFlR,GAMF,uBAAGgB,QAAS,EAAK41B,cAAej3B,UAAU,YAAYC,MAAO,CAAC8S,YAAa,wBAAyB3I,YAAa,GAAIhK,OAAQ,WAAY0S,WAAS,gCAA+B,uBAAG9S,UAAU,cAAcC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,wBAAyBtF,SAAU,GAAIpE,UAAW,+BAM5R,yBAAKJ,MAAO,CAACwB,QAAS,eAAgB4N,aAAc,IAGhD,yBAAKpP,MAAO,CAACwB,QAAS,eAAgB2I,YAAa,GAAIiF,aAAc,EAAGvF,WAAY,IAEhF,uBAAG9J,UAAU,cAAc8S,WAAS,uBAAuB7S,MAAO,CAACI,UAAW,mBAAoB+J,YAAa,GAAIL,MAAO,mBAAoBtF,SAAU,MACxJ,kBAAC60B,EAAA,EAAD,CAAkBt6B,SAAU,EAAKhE,MAAMgE,SAAU4G,UAAW,EAAKmyB,aAAcv6B,IAAK,EAAKxC,MAAMwC,IAAKqD,OAAQ,EAAK7F,MAAM6F,OAAQmO,QAAS,EAAK5M,MAAM80B,kBAAmBjoB,aAAc,kBAAI,EAAK/M,SAAS,CAACg1B,mBAAmB,KAASsC,SAAO,EAACC,YAAa,EAAKr3B,MAAMy0B,UAAWznB,eAAgB,SAACc,GAC3R,EAAKlV,MAAMgE,SAASC,GAChB,cAAe,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAAC0E,MAAM3G,EAAGqU,SAAUuG,KAAKC,iBAAiBC,kBAAkBC,YAEjI,EAAK/oB,SAAS,CAAC20B,UAAW3mB,OAG5B,WAEE,IAAM4pB,EAAY,SAAC,GAAwB,IAAtB1xB,EAAqB,EAArBA,MAAO/G,EAAc,EAAdA,QACxB,OACI,2BAAOrB,UAAU,eAAeqW,SAAW0T,cAAe5rB,SAAS,UAAY4V,aAAc3L,EAAQwK,SAAU,SAAC9S,GAK5GA,EAAE+S,UACF,EAAK7X,MAAMgE,SAASqT,mBAAkB,WAClC,IAAInC,EAAI0G,YAAiB9W,EAAEyS,OAAOnK,OAC9B8H,GAAG,EAAKhO,SAAS,CAAC20B,UAAW3mB,IAC7BA,GACA,EAAKlV,MAAMgE,SAASC,GAChB,cAAe,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAAC0E,MAAM3G,EAAGqU,SAAUuG,KAAKC,iBAAiBC,kBAAkBC,cALzI,qBAOiB,EAAKjwB,MAAMyF,IAP5B,aAQD6V,QAAS,SAACxW,GACLiqB,cAAe5rB,SAAS,UACxB,EAAK+D,SAAS,CAACg1B,mBAAmB,KAElC71B,IACAvB,EAAEyS,OAAOc,aAOnB0mB,EAAY,SAAC,GAAyB,IAAvB3xB,EAAsB,EAAtBA,MAAOwK,EAAe,EAAfA,SAIxB,MAFkD,OAA9CxK,EAAMwG,MAAMxG,EAAMlL,OAAO,EAAGkL,EAAMlL,UAAkBkL,GAAgB,KAGpE,2BACIpI,UAAU,eACV+T,aAAc3L,EACd0oB,WAAY,SAAAhxB,GAGR,IAAIoQ,EAAI0G,YAAiB9W,EAAEyS,OAAOnK,OAE9B8H,GAAe,UAAVpQ,EAAEY,KAAiBkS,EAAS1C,EAAE8N,WAAa,IAAM9N,EAAE8pB,aAAe,IAAM9pB,EAAE+pB,kBAInG,OACI,kBAAC,IAAD,CACI1iB,SAAU,EAAKnV,MAAMy0B,UACrBqD,SAAU,EAAKl/B,MAAM6V,QAAQ,kBAAkB,cAC/C+B,SAAU,SAAA9E,GAEN,EAAK5L,SAAS,CAAC20B,UAAW/oB,IAI1B,EAAK9S,MAAMgE,SAASC,GAChB,cAAe,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAAC0E,MAAO/I,EAAMyW,SAAUuG,KAAKC,iBAAiBC,kBAAkBC,aAGzIkP,eAAa,EACbC,WAAW,qBACXC,gBAAiB,kBAACN,EAAD,MACjBO,YAAa,kBAACR,EAAD,QAhEvB,IAsEN,yBAAK75B,MAAO,CAACwB,QAAS,eAAgB4N,aAAc,EAAGvF,WAAY,IAC/D,uBAAG9J,UAAU,cAAc8S,WAAS,qBAAqB7S,MAAO,CAACI,UAAW,mBAAoB+J,YAAa,GAAIL,MAAO,mBAAoBtF,SAAU,MAEtJ,kBAAC60B,EAAA,EAAD,CAAkBt6B,SAAU,EAAKhE,MAAMgE,SAAU4G,UAAW,EAAKkyB,WAAYt6B,IAAK,EAAKxC,MAAMwC,IAAKqD,OAAQ,EAAK7F,MAAM6F,OAAQmO,QAAS,EAAK5M,MAAM+0B,gBAAiBloB,aAAc,kBAAI,EAAK/M,SAAS,CAACi1B,iBAAiB,KAASqC,SAAO,EAACC,YAAa,EAAKr3B,MAAM00B,QAAS1nB,eAAgB,SAACc,GACnR,EAAKlV,MAAMgE,SAASC,GAChB,cAAe,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAAC5I,IAAI2G,EAAGqU,SAAUuG,KAAKC,iBAAiBC,kBAAkBC,YAE/H,EAAK/oB,SAAS,CAAC40B,QAAS5mB,OAG1B,WACE,IAAM4pB,EAAY,SAAC,GAAwB,IAAtB1xB,EAAqB,EAArBA,MAAO/G,EAAc,EAAdA,QACxB,OACI,2BAAOrB,UAAU,eAAeqW,WAAW0T,cAAe5rB,SAAS,UAA2B4V,aAAc3L,EAAOwK,SAAU,SAAC9S,GAK1HA,EAAE+S,UACF,EAAK7X,MAAMgE,SAASqT,mBAAkB,WAClC,IAAInC,EAAI0G,YAAiB9W,EAAEyS,OAAOnK,OAC9B8H,GAAG,EAAKhO,SAAS,CAAC40B,QAAS5mB,IAC3BA,GACA,EAAKlV,MAAMgE,SAASC,GAChB,cAAe,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAAC5I,IAAI2G,EAAGqU,SAAUuG,KAAKC,iBAAiBC,kBAAkBC,cALvI,mBAQe,EAAKjwB,MAAMyF,IAR1B,aAUE6V,QAAS,SAACxW,GACJiqB,cAAe5rB,SAAS,UACxB,EAAK+D,SAAS,CAACi1B,iBAAiB,KAEhC91B,IACAvB,EAAEyS,OAAOc,aAMvB0mB,EAAY,SAAC,GAAyB,IAAvB3xB,EAAsB,EAAtBA,MAAOwK,EAAe,EAAfA,SAIxB,MAFkD,OAA9CxK,EAAMwG,MAAMxG,EAAMlL,OAAO,EAAGkL,EAAMlL,UAAkBkL,GAAgB,KAGpE,2BACIpI,UAAU,eACV+T,aAAc3L,EACd0oB,WAAY,SAAAhxB,GAGR,IAAIoQ,EAAI0G,YAAiB9W,EAAEyS,OAAOnK,OAE9B8H,GAAe,UAAVpQ,EAAEY,KAAiBkS,EAAS1C,EAAE8N,WAAa,IAAM9N,EAAE8pB,aAAe,IAAM9pB,EAAE+pB,kBAInG,OACI,kBAAC,IAAD,aACI1iB,SAAU,EAAKnV,MAAM00B,QACrBoD,SAAU,EAAKl/B,MAAM6V,QAAQ,kBAAkB,cAC/C+B,SAAU,SAAA9E,GAAI,OAAI,EAAK5L,SAAS,CAAC40B,QAAShpB,KAC1CqsB,eAAa,EACbI,aAAW,EACXH,WAAW,qBACXC,gBAAiB,kBAACN,EAAD,MACjBO,YAAa,kBAACR,EAAD,OARjB,YASc,SAAAhsB,GAEN,EAAK5L,SAAS,CAAC40B,QAAShpB,IAGxB,EAAK9S,MAAMgE,SAASC,GAChB,cAAe,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK0R,MAAM,CAAC5I,IAAKuE,EAAMyW,SAAUuG,KAAKC,iBAAiBC,kBAAkBC,gBA/DjJ,KAuEV,6BAEI,0BAAMjrB,UAAU,0BAEZ,uBAAGA,UAAU,iBAAiBC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,mBAAoBtF,SAAU,GAAI2F,YAAa,EAAG/J,UAAW,qBAErH,kBAAC,IAAD,CACI+F,QAAS,EAAKpL,MAAM4F,SAAS,GAC7BZ,UAAU,eACVw6B,gBAAgB,cAChBD,aAAW,EACXE,OAAQ,CAEJC,WAAY,SAAAC,GAAQ,kCAAUA,GAAV,IAAoBj+B,OAAQ,uBAEpDk+B,iBAAkBh4B,SAAS4L,KAC3BpG,MAAO,EAAKpN,MAAM4F,SAAS,GAAG9B,QAAO,SAAA+7B,GAAM,OAAIA,EAAOzyB,QAAU,EAAKhG,MAAMse,WAC3E9N,SAAU,SAAC9S,GAGP,EAAK9E,MAAMgE,SAASC,GAAG,uBAAwB,CAAEzB,IAAK,EAAKxC,MAAMwC,IAAKiD,IAAK,EAAKzF,MAAMyF,IAAK4qB,WAAiC,KAArB,EAAKjpB,MAAMse,aAAane,EAAU,EAAKH,MAAMse,QAASA,QAAU5gB,EAAEA,EAAEsI,MAAM,KAEjL,EAAKlG,SAAS,CAACwe,QAAS5gB,EAAEA,EAAEsI,MAAM,SAK9C,0BAAMpI,UAAU,sBAEZ,uBAAGA,UAAU,cAAcC,MAAO,CAAC+S,OAAQ,EAAGjJ,MAAO,mBAAoBtF,SAAU,GAAIpE,UAAW,qBAElG,kBAAC,IAAD,CACI+F,QAAS,EAAKpL,MAAM4F,SAAS,GAC7BZ,UAAU,WACVw6B,gBAAgB,cAChBD,aAAW,EACXO,SAAO,EACPL,OAAQ,CAAEC,WAAY,SAAAK,GAAI,kCAAUA,GAAV,IAAgBr+B,OAAQ,uBAClDk+B,iBAAkBh4B,SAAS4L,KAC3BpG,MAAO,EAAKpN,MAAM4F,SAAS,GAAG9B,QAAO,SAAA+7B,GAAM,OAAI,EAAKz4B,MAAMwd,KAAKzhB,SAAS08B,EAAOzyB,UAC/EwK,SAAU,SAACooB,EAAUC,GACjB,IAAI5L,EAAO,EACP6L,EAAOF,EAASA,EAASn/B,IAAT,uCAAa,WAAgBiE,GAAhB,iBAAAnC,EAAA,0DACzBmC,EAAEq7B,UADuB,iCAEN9L,EAAKr0B,MAAMgE,SAASC,GACnC,aACA,CACIzB,IAAK6xB,EAAKr0B,MAAMwC,IAChB8H,KAAMxF,EAAEuI,QANS,cAErBia,EAFqB,OAQtB3iB,IACCy7B,EAAe/L,EAAKjtB,MAAM4E,cACjBxF,KAAK,CAAC6G,MAAOvI,EAAEuI,MAAOD,MAAOka,IAC1C+M,EAAKntB,SAAS,CAAC8E,aAAco0B,IAXJ,kBAYlB9Y,GAZkB,iCAclBxiB,EAAEsI,OAdgB,4CAAb,uDAejB,GACHiT,QAAQe,IAAI8e,GAAM1oB,MAAK,SAAA6oB,GACnB,EAAKn5B,SAAS,CAAC0d,KAAMyb,IACrB,EAAKrgC,MAAMgE,SAASC,GAChB,cACA,CACIzB,IAAK,EAAKxC,MAAMwC,IAChBiD,IAAK,EAAKzF,MAAMyF,IAChB0R,MAAM,CAACyN,KAAMyb,cArUvD,Y,GAhXf/0B,aA2sBJiwB,O,sEC/0BX+E,EAEAC,EACAC,EAAYC,EACZvI,EAKAwI,E,iDAHyD95B,EAAQ,IAA7D+5B,E,EAAAA,oBAAqBC,E,EAAAA,mBAAoBpS,E,EAAAA,QACjCqS,GAAerS,EAAvBsS,OAAuBtS,EAAfqS,Y,EAgFO,WAInB,IAAIjd,EAAQ,IAAIpR,IACZuuB,EAAuB,IAAIvuB,IAgB/B,SAASwuB,EAAej2B,GAcpB,IAAIlG,EAAM27B,EAEVloB,QAAQ2oB,OAA0B,kBAAZl2B,EAAK,IAEvBlG,EADAkG,EAAK,GAAG5H,SAAS,KACX0B,EAAIq8B,gBAAgBn2B,EAAK,IAEzBlG,EAAIs8B,WAAWp2B,EAAK,IApBJ,oBAsBVA,EAAK6I,MAAM,IAtBD,IAsB1B,2BAA+B,CAAC,IAAvBwtB,EAAsB,QAC3B,GAAmB,kBAARA,EACP,GAAIv8B,aAAe47B,EAAMY,kBACrBx8B,EAAMA,EAAIs8B,WAAWC,OAClB,MAAIv8B,aAAe47B,EAAMa,OAG5B,MAAM,IAAI/gB,MAAM,oBAAqB1b,EAAI6J,YAFzC7J,EAAMA,EAAIyc,IAAI8f,OAIf,KAAIvvB,MAAM0vB,QAAQH,GAQrB,MAAM,IAAI7gB,MAAM,eAAgB6gB,EAAI1yB,YAPpC,KAAI7J,aAAe47B,EAAMa,OAGrB,MAAM,IAAI/gB,MAAM,oBAAqB6gB,EAAI1yB,YAHZ,IAAD,EAC5B7J,GAAM,EAAAA,GAAI28B,MAAJ,oBAAaJ,IAIvB9oB,QAAQ2oB,OAAOp8B,aAAe47B,EAAMa,SArClB,8BA0C1B,OAAOz8B,EAGX,SAAS48B,IASL,OAAOj+B,KAAKiJ,SAASiC,SAAS,IAAIsC,UAAU,GAAGxN,KAAKiJ,SAASiC,SAAS,IAAIsC,UAAU,GAAGxN,KAAKiJ,SAASiC,SAAS,IAAIsC,UAAU,GA3EvG,4CA8EzB,WAA0BjG,GAA1B,iBAAApI,EAAA,6DAYU++B,EAAaC,KAAKC,UAAU72B,GAC7B6Y,EAAM3Q,IAAIyuB,KAEL78B,EAAMm8B,EAAej2B,GAC3B6Y,EAAMvhB,IAAIq/B,EAAY78B,EAAIqO,OAC1B6tB,EAAqB1+B,IAAIq/B,EACrB78B,EAAIg9B,WAAW,CACXvf,MAAOhK,QAAQ0J,MACf8f,KAAM,SAAC5f,GACH0B,EAAMvhB,IAAIq/B,EAAYxf,GACtBgW,SAtBpB,SA2BiBtU,EAAM1Q,IAAIwuB,GA3B3B,oFA9EyB,sBA4GzB,IAAIK,EAAa,WACb,IAAMC,EAASrB,EAAoBsB,KAoBnC,MAAO,CAACC,KAlBA,uCAAG,4BAAAv/B,EAAA,sEACek+B,EAAWsB,SAAS,CACtCp3B,KAHO,iBAIPq3B,UAAWJ,EACXK,SAAUzB,EAAmB0B,OAJ1B,OACHvsB,EADG,OAKHyL,KACJ+e,EAAWoB,KAAKY,MAAMxsB,GANf,2CAAH,qDAkBMysB,MATL,uCAAG,sBAAA7/B,EAAA,sEACFk+B,EAAW4B,UAAU,CACvB13B,KAZO,iBAaPq3B,UAAWJ,EACXxgB,KAAMmgB,KAAKC,UAAUrB,GACrB8B,SAAUzB,EAAmB0B,OALzB,2CAAH,sDAZI,GA5GQ,4CAoIzB,WAA2Bv3B,GAA3B,iBAAApI,EAAA,4DAWwB,YAAhB29B,EACAhoB,QAAQgK,MAAM,uBAQS,SAAhBge,IACPoC,EAAUnC,EACVx1B,EAAK43B,MAAK,SAAApgC,GAEN,YAAoBgF,KADpBm7B,EAAUA,EAAQngC,QAKtBqgC,EAAU,SAAsBF,GAUhC,IAAIG,EAAU,GAV2B,WAW9BC,GACPD,EAAQr8B,KAAK,CAAC7B,GAAIm+B,EAAOthB,KAAM,kBAAIxE,OAAO6K,OAAO,GAAI6a,EAAQI,KAASve,QAAQ,KADlF,IAAK,IAAMue,KAASJ,EAApB,EAAWI,GAEX,MAAO,CAAC3gB,KAAM0gB,GAbJ,CAcXH,GA1CP,kBA2CWE,GA3CX,4CApIyB,kEAkLzB,WAA0B73B,EAAMuM,GAAhC,mBAAA3U,EAAA,yDAYwB,YAAhB29B,EAZR,gBAaQhoB,QAAQgK,MAAM,uBAbtB,0BAqB+B,SAAhBge,EArBf,iBA4BQ,IANAoC,EAAUnC,EACVx1B,EAAK6H,SAAQ,SAAArQ,GACLmgC,EAAQngC,KAAImgC,EAAQngC,GAAK,IAC7BmgC,EAAUA,EAAQngC,MAEtBoC,EAAK88B,IACEiB,EAAQ/9B,IAAKA,EAAK88B,IACzB,IAAW/7B,KAAO4R,EACVA,EAAQ5R,aAAgB+F,OACxB6L,EAAQ5R,GAAO,CAAC8I,QAAShL,KAAKu/B,MAAMzrB,EAAQ5R,GAAKyP,UAAU,KAAM,IA/BjF,OAkCQutB,EAAQ/9B,GAAM2S,EAlCtB,UAmCcyqB,EAAWS,QAnCzB,iCAqCWxlB,OAAO6K,OAAO,GAAI,CAACljB,KAAI6c,KAAMlK,EAASiN,QAAQ,KArCzD,6CAlLyB,kEA0NzB,WAA0BxZ,GAA1B,iBAAApI,EAAA,yDAWwB,YAAhB29B,EAXR,gBAYQhoB,QAAQgK,MAAM,uBAZtB,0BAoB+B,SAAhBge,EApBf,wBAqBQoC,EAAUnC,EACNjyB,EAAOvD,EAAKi4B,MAChBj4B,EAAK6H,SAAQ,SAAArQ,GACLmgC,EAAQngC,KAAImgC,EAAQngC,GAAK,IAC7BmgC,EAAUA,EAAQngC,aAEfmgC,EAAQp0B,GA3BvB,UA4BcyzB,EAAWS,QA5BzB,6CA1NyB,kEA0PzB,WAA0Bz3B,EAAMuM,GAAhC,mBAAA3U,EAAA,yDAYwB,YAAhB29B,EAZR,gBAaQhoB,QAAQgK,MAAM,uBAbtB,0BAqB+B,SAAhBge,EArBf,iBA4BQ,IAAW56B,KANXg9B,EAAUnC,EACNjyB,EAAOvD,EAAKi4B,MAChBj4B,EAAK6H,SAAQ,SAAArQ,GACLmgC,EAAQngC,KAAImgC,EAAQngC,GAAK,IAC7BmgC,EAAUA,EAAQngC,MAEJ+U,EACVA,EAAQ5R,aAAgB+F,OACxB6L,EAAQ5R,GAAO,CAAC8I,QAAShL,KAAKu/B,MAAMzrB,EAAQ5R,GAAKyP,UAAU,KAAM,IA9BjF,OAiCQutB,EAAQp0B,GAAQgJ,EAjCxB,UAkCcyqB,EAAWS,QAlCzB,iCAoCWxlB,OAAO6K,OAAO,GAAI,CAACljB,QApC9B,EAoCkC6c,KAAMlK,EAASiN,QAAQ,KApCzD,6CA1PyB,kEAiSzB,WAA6BxZ,EAAMuM,GAAnC,iBAAA3U,EAAA,yDAYwB,YAAhB29B,EAZR,gBAaQhoB,QAAQgK,MAAM,uBAbtB,0BAqB+B,SAAhBge,EArBf,iBA2BQ,IAAW56B,KALXg9B,EAAUnC,EACVx1B,EAAK6H,SAAQ,SAAArQ,GACLmgC,EAAQngC,KAAImgC,EAAQngC,GAAK,IAC7BmgC,EAAUA,EAAQngC,MAEJ+U,EACVA,EAAQ5R,aAAgB+F,OACxB6L,EAAQ5R,GAAO,CAAC8I,QAAShL,KAAKu/B,MAAMzrB,EAAQ5R,GAAKyP,UAAU,KAAM,IA7BjF,OAgCQutB,EAAU1lB,OAAO6K,OAAO6a,EAASprB,GAhCzC,UAiCcyqB,EAAWS,QAjCzB,iCAmCWxlB,OAAO6K,OAAOvQ,EAAS,CAAC3S,QAnCnC,EAmCuC6c,KAAMlK,EAASiN,QAAQ,KAnC9D,6CAjSyB,sBA8VzB,SAAS0e,EAASl4B,GAWd,OAAOiS,OAAO6K,OACVmZ,EAAej2B,GACf,CAAEmI,IAAK,kBA3WU,2CA2WJgwB,CAAWn4B,MAGhC,SAASkmB,IAAS3Y,QAAQgK,MAAM,kBAChC,SAAS6gB,EAAWp4B,GAQhB,MAAO,CACHpG,GAAIssB,EACJpL,IAAK,SAACvO,GAAD,OAzXY,6CAyXC8rB,CAAWr4B,EAAMuM,IAGnCpE,IAAK,kBA5XY,2CA4XNmwB,CAAYt4B,IACvB1I,IAAK,SAACiV,GAAD,OA7XY,6CA6XCgsB,CAAWv4B,EAAMuM,IACnCgO,OAAQ,SAAChO,GAAD,OA9XS,6CA8XIisB,CAAcx4B,EAAMuM,IACzCyP,OAAQ,kBA/XS,2CA+XHyc,CAAWz4B,KAoBjC,MAAO,CAhBP,WAA4B,IAAD,uBAANA,EAAM,yBAANA,EAAM,gBAQvB,OAAQu1B,GACJ,IAAK,WACD,OAAO2C,EAASl4B,GACpB,QACI,OAAOo4B,EAAWp4B,KAvY9B,WASI6Y,EAAQ,IAAIpR,IACZuuB,EAAuB,IAAIvuB,MAlBZ,G,mBAAhBmO,E,KAAM0N,E,KAsZE,KAACL,SAleI,SAAC1W,GAAyB,IAK1C,IAAImsB,EAAU,GAL4B,mBAAbC,EAAa,iCAAbA,EAAa,kBAO1C,GAAIA,EAASvgC,SAAS,YAAa,CAC/B,IAAM8iB,EAAMrf,EAAQ,KAIhB0Q,EAAQgd,SAASqP,cAAc1d,EAAI2d,OAAOC,QALf,MAMP,CAACvsB,EAAQgd,SAASwP,YAAaxsB,EAAQgd,SAASwP,WAAtEtD,EAN6B,KAMjBC,EANiB,KAO/BD,EAAWuD,kBAAkB,CAACC,iBAAiB,IAAO5hB,MAAM9J,QAAQgK,OACpEmhB,EAAQj9B,KAAK,IAAI6Z,SAAQ,SAASC,GAC9B,OAAOA,EAAQmgB,OAIvB,GAAIiD,EAASvgC,SAAS,UAAW,CAC7BmV,QAAQgK,MAAM,gCACdhK,QAAQgK,MAAM,gCACdhK,QAAQgK,MAAM,gCACdhK,QAAQgK,MAAM,gCACdhK,QAAQgK,MAAM,gCACdhK,QAAQgK,MAAM,gCACdhK,QAAQgK,MAAM,gCAPe,MAUY1b,EAAQ,IAAzC+5B,EAVqB,EAUrBA,oBAAqBnS,EAVA,EAUAA,QACrBsS,EAAWtS,EAAXsS,OACR2C,EAAQj9B,KAAK,sBAAC,4BAAA7D,EAAA,sEACcm+B,EAAOmD,UADrB,0BACgC16B,SAApC0L,EAAiD,QAD7C,KAEKA,EAAW0rB,EAAoBsB,KAAOz4B,EAAQ06B,cAC9C,gBAHL,uBA1ClBC,GA0CkB,0CAAD,IAmCjB,OA1BIT,EAASvgC,SAAS,SAClBsgC,EAAQj9B,KAAK,sBAAC,gCAAA7D,EAAA,6DACJq/B,EAASrB,EAAoBsB,KAC7BmC,EAAS,iBAFL,kBAKYvD,EAAWsB,SAAS,CAClCp3B,KAAMq5B,EACNhC,UAAWJ,EACXK,SAAUzB,EAAmB0B,OAR3B,OAKNvsB,EALM,OASFyL,KATE,uDAWNzL,EAAW,KAXL,UAYA8qB,EAAW4B,UAAU,CACvB13B,KAAMq5B,EACNhC,UAAWJ,EACXxgB,KAAMmgB,KAAKC,UAAU,IACrBS,SAAUzB,EAAmB0B,OAhB3B,QAoBV/B,EAAWoB,KAAKY,MAAMxsB,GApBZ,wDAAD,IAwBjB2qB,EAAYrgB,QAAQe,IAAIqiB,IAgaU9iB,OAAM0N,QAAOH,MA5ZrC,SAAC3lB,GAA0B,IAAtB+mB,EAAqB,uDAAX,aAGzB,OAFAgR,EAAc/3B,EACd2vB,EAAiB5I,EACVoR,M,qLC6GX,SAAS2D,EAAarkC,GAAQ,IAAD,EACaC,mBAASD,EAAMy+B,YAAcz+B,EAAMy+B,YAAc,IAAIhzB,MADlE,mBACpB0F,EADoB,KACNC,EADM,KAGrBC,EAAeF,EAAahD,WAC5BmD,EAAcH,EAAajD,cAE3BqD,EAAgB,IAAI9F,KAAK6F,EAAaD,EAAc,GACpDG,EAAe,IAAI/F,KAAK6F,EAAaD,EAAa,EAAG,GACrDI,EAAmB,IAAIhG,KAAK6F,EAAaD,EAAc,GAEvDK,EAAkBH,EAAcI,SAAS,EAE7C,SAAStB,EAA0BC,EAAMC,EAAOC,GAC5C,IAAIC,EAASH,EACTI,EAASH,EACTI,EAAQH,EACRI,EAAM,SAAS7M,GAEf,OAAoB,IADpBA,EAAIA,EAAE2K,SAAS,KACLxM,OAAe,IAAM6B,EAAIA,GAGnC8M,EAAIrN,KAAKsN,KAAKC,SAASN,EAAOO,UAAU,EAAE,GAAI,IAAML,EAAQI,SAASL,EAAOM,UAAU,EAAE,GAAI,KAAO,EAAEL,IACrGM,EAAIzN,KAAKsN,KAAKC,SAASN,EAAOO,UAAU,EAAE,GAAI,IAAML,EAAQI,SAASL,EAAOM,UAAU,EAAE,GAAI,KAAO,EAAEL,IACrGO,EAAI1N,KAAKsN,KAAKC,SAASN,EAAOO,UAAU,EAAE,GAAI,IAAML,EAAQI,SAASL,EAAOM,UAAU,EAAE,GAAI,KAAO,EAAEL,IAEzG,OAAOC,EAAIC,GAAKD,EAAIK,GAAKL,EAAIM,GAGjC,IAAIU,EAAa,YAAI,IAAIC,MAAMH,EAAgB,IAAI7Q,KAAI,SAACC,EAAGyB,GAAK,MAAO,CAAC4B,KAAM,MAAOC,QAAS7B,EAAEkP,EAAiB9F,WAAW+F,EAAgB,GAAG,MAE3II,EAAY,YAAI,IAAID,MAAO,EAAEL,EAAaG,YAAY,EAAG,EAAE,EAAEH,EAAaG,WAAW9Q,KAAI,SAACC,EAAGyB,GAAK,MAAO,CAAC4B,KAAK,OAAQC,QAAQ7B,EAAE,MAEjIwP,EAAc,YAAI,IAAIF,MAAML,EAAa7F,YAAY9K,KAAI,SAACC,EAAGyB,GAAK,MAAO,CAAC4B,KAAK,SAAUC,QAAQ7B,EAAE,MAhC9E,EAmCHtC,mBAAS,IAnCN,mBAmCpB+R,EAnCoB,KAmCdC,EAnCc,KAmEzB,OA7BAJ,MAAM9D,UAAUuE,IAAM,WAClB,OAAO9O,KAAK8O,IAAIC,MAAM,KAAMtK,OAIhC3F,qBAAU,WACN,sBAAC,sCAAAK,EAAA,6DACO9B,EAAM,IAAI2R,IACVG,EAAK,GAFZ,SAGwB3S,EAAM6F,OAAO0C,GAAGuF,mBAAmB9N,EAAMwC,IAAK+O,EAAeC,GAAc,GAHnG,cAIYoB,SAAQ,YAAa,IAAD,mBAAPC,GAAO,WACrBC,EAAO,IAAIrH,KAAqB,IAAhBoH,EAAItE,IAAIC,SAC5BsE,EAAKC,SAAS,EAAG,EAAG,EAAG,GACvB,IAAIC,EAAOF,EAAKnH,UACb9K,EAAIoS,IAAID,GACPnS,EAAIwB,IAAI2Q,EAAMnS,EAAIqS,IAAIF,GAAM,GAE5BnS,EAAIwB,IAAI2Q,EAAM,OAElBG,EAAStB,MAAMuB,KAAKvS,EAAIsS,WACjBjR,OAAS,IACZoQ,EAAMa,EAAOb,MACbrN,EAAQsO,iBAAiB3L,SAAS4L,MAClCC,EAAQN,EAAOtS,KAAI,SAAAiE,GAAC,OAAEuL,EAA0BpL,EAAMyO,iBAAiB,qBAAqBC,OAAOC,MAAM,GAAI3O,EAAMyO,iBAAiB,sBAAsBC,OAAOC,MAAM,GAAI9O,EAAEwN,MACjLT,MAAMuB,KAAKvS,EAAIgT,QAAQjB,SAAQ,SAAC9N,EAAGvC,GAAKoQ,EAAG7N,GAAG2O,EAAMlR,OAExD0P,EAAQU,GApBX,0CAAD,KAsBF,CAACxB,EAAcnR,EAAMy+B,cAEnB,yBAAK95B,GAAG,iCAAiCM,MAAK,aAAGwB,QAAS,gBAAmBzG,EAAMiF,QAC/E,yBAAKN,GAAG,4BACJ,yBAAKA,GAAG,oBACJ,0BAAMK,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,QACA,0BAAMA,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,QAEJ,yBAAKL,GAAG,sBACH,sBAAIiN,GAAJ,YAAkBG,GAAlB,YAAiCD,IAAWjR,KAAI,SAAA0B,GAAC,OAClD,0BAAMyC,UAAS,0DAAqDzC,EAAE4B,KAAvD,oCAAuF5B,EAAE6B,SAAWa,MAAO,CACtHkP,gBAAmBnC,EAAKzP,EAAE6B,UAAqB,WAAX7B,EAAE4B,KAApB,WACV6N,EAAKzP,EAAE6B,UACX,UACJk2B,OAAqB,WAAX/3B,EAAE4B,MAAqB5B,EAAE6B,UAAY+M,EAAaxF,UAC5D,oCACA,KAEAtF,QAAS,SAACvB,GAEN,IAAIgO,EACW,QAAXvQ,EAAE4B,OACF2O,EAAO,IAAIrH,KAAKgG,EAAiBvD,cAAeuD,EAAiBtD,WAAY5L,EAAE6B,UACpE,WAAX7B,EAAE4B,OACF2O,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAY5L,EAAE6B,UAC9D,SAAX7B,EAAE4B,OACF2O,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAW,EAAG5L,EAAE6B,UAC/EgN,EAAgB0B,GACZ9S,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAetB,KACzBvQ,EAAE6B,aAGd,yBAAKO,GAAG,sBACJ,yBAAKK,UAAU,mCAAmCmM,EAAaxF,WAC/D,yBAAK3G,UAAU,+BAA+BmM,EAAanC,eAAehP,EAAMgE,SAAS4F,cAAcqF,cAAe,CAAGC,QAAS,UAClI,yBAAKlK,UAAU,4BAA4BmM,EAAanC,eAAehP,EAAMgE,SAAS4F,cAAcqF,cAAe,CAAEc,MAAO,UAC5H,yBAAK/K,UAAU,2BAA2BmM,EAAajD,gBAEzD,WACE,GAAIlO,EAAMw+B,QACN,OAAO,yBAAKx5B,UAAU,qBAClB,0BAAMA,UAAU,iBAAhB,QAGA,2BACIA,UAAU,mBACV+T,aAAc5H,EAAamzB,qBAC3BxO,WAAY,SAAAhxB,GAGR,IAAIoQ,EAAI0G,YAAiB9W,EAAEyS,OAAOnK,OAElC,GAAI8H,GAAe,UAAVpQ,EAAEY,IAAiB,CACxB,IAAI6+B,EAAU,IAAI94B,KAAK0F,EAAajD,cAAeiD,EAAahD,WAAYgD,EAAaxF,UAAWuJ,EAAE8N,WAAY9N,EAAE8pB,aAAc9pB,EAAE+pB,cACpI7tB,EAAgBmzB,GAChBz/B,EAAEyS,OAAOnK,MAAQm3B,EAAQD,qBACrBtkC,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAemwB,QAnB/C,GA0BF,yBAAK5/B,GAAG,kBACJ,uBAAGK,UAAU,oCAAoCqB,QAAS,WACtD,IAAIyM,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAW,EAAG,GAC7EiD,EAAgB0B,GACZ9S,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAetB,MAG7B,uBAAG9N,UAAU,qCAAqCqB,QAAS,WACvD,IAAIyM,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAW,EAAG,GAC7EiD,EAAgB0B,GACZ9S,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAetB,MAG7B,yBAAK9N,UAAU,iBAAiBqB,QAAS,WACrC+K,EAAgB,IAAI3F,MAChBzL,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAe,IAAI3I,QAE7BzL,EAAMgE,SAAS4F,cAAc0K,OACjC,yBAAKtP,UAAU,iBAAiBC,MAAO,CAACmK,YAAa,GAAIoqB,MAAO,SAAUnzB,QAAS,WAC3E8K,GACAnR,EAAMoU,eAAejD,GACzBnR,EAAMiU,iBAHV,WAcLqqB,IAvVf,SAAyBt+B,GAAQ,IAAD,EACUC,mBAASD,EAAMy+B,YAAcz+B,EAAMy+B,YAAc,IAAIhzB,MAD/D,mBACvB0F,EADuB,KACTC,EADS,KAGxBC,EAAeF,EAAahD,WAC5BmD,EAAcH,EAAajD,cAE3BqD,EAAgB,IAAI9F,KAAK6F,EAAaD,EAAc,GACpDG,EAAe,IAAI/F,KAAK6F,EAAaD,EAAa,EAAG,GACrDI,EAAmB,IAAIhG,KAAK6F,EAAaD,EAAc,GAEvDK,EAAkBH,EAAcI,SAAS,EAE7C,SAAStB,EAA0BC,EAAMC,EAAOC,GAC5C,IAAIC,EAASH,EACTI,EAASH,EACTI,EAAQH,EACRI,EAAM,SAAS7M,GAEf,OAAoB,IADpBA,EAAIA,EAAE2K,SAAS,KACLxM,OAAe,IAAM6B,EAAIA,GAGnC8M,EAAIrN,KAAKsN,KAAKC,SAASN,EAAOO,UAAU,EAAE,GAAI,IAAML,EAAQI,SAASL,EAAOM,UAAU,EAAE,GAAI,KAAO,EAAEL,IACrGM,EAAIzN,KAAKsN,KAAKC,SAASN,EAAOO,UAAU,EAAE,GAAI,IAAML,EAAQI,SAASL,EAAOM,UAAU,EAAE,GAAI,KAAO,EAAEL,IACrGO,EAAI1N,KAAKsN,KAAKC,SAASN,EAAOO,UAAU,EAAE,GAAI,IAAML,EAAQI,SAASL,EAAOM,UAAU,EAAE,GAAI,KAAO,EAAEL,IAEzG,OAAOC,EAAIC,GAAKD,EAAIK,GAAKL,EAAIM,GAGjC,IAAIU,EAAa,YAAI,IAAIC,MAAMH,EAAgB,IAAI7Q,KAAI,SAACC,EAAGyB,GAAK,MAAO,CAAC4B,KAAM,MAAOC,QAAS7B,EAAEkP,EAAiB9F,WAAW+F,EAAgB,GAAG,MAE3II,EAAY,YAAI,IAAID,MAAO,EAAEL,EAAaG,YAAY,EAAG,EAAE,EAAEH,EAAaG,WAAW9Q,KAAI,SAACC,EAAGyB,GAAK,MAAO,CAAC4B,KAAK,OAAQC,QAAQ7B,EAAE,MAEjIwP,EAAc,YAAI,IAAIF,MAAML,EAAa7F,YAAY9K,KAAI,SAACC,EAAGyB,GAAK,MAAO,CAAC4B,KAAK,SAAUC,QAAQ7B,EAAE,MAhC3E,EAmCNtC,mBAAS,IAnCH,mBAmCvB+R,EAnCuB,KAmCjBC,EAnCiB,KAqE5B,OA/BAJ,MAAM9D,UAAUuE,IAAM,WAClB,OAAO9O,KAAK8O,IAAIC,MAAM,KAAMtK,OAIhC3F,qBAAU,WACN,sBAAC,sCAAAK,EAAA,6DACO9B,EAAM,IAAI2R,IACVG,EAAK,GAFZ,SAGwB3S,EAAM6F,OAAO0C,GAAGuF,mBAAmB9N,EAAMwC,IAAK+O,EAAeC,GAAc,GAHnG,cAIYoB,SAAQ,YAAa,IAAD,mBAAPC,GAAO,WACrBC,EAAO,IAAIrH,KAAqB,IAAhBoH,EAAItE,IAAIC,SAC5BsE,EAAKC,SAAS,EAAG,EAAG,EAAG,GACvB,IAAIC,EAAOF,EAAKnH,UACb9K,EAAIoS,IAAID,GACPnS,EAAIwB,IAAI2Q,EAAMnS,EAAIqS,IAAIF,GAAM,GAE5BnS,EAAIwB,IAAI2Q,EAAM,OAElBG,EAAStB,MAAMuB,KAAKvS,EAAIsS,WACjBjR,OAAS,IACZoQ,EAAMa,EAAOb,MACbrN,EAAQsO,iBAAiB3L,SAAS4L,MAClCC,EAAQN,EAAOtS,KAAI,SAAAiE,GAAC,OAAEuL,EAA0BpL,EAAMyO,iBAAiB,qBAAqBC,OAAOC,MAAM,GAAI3O,EAAMyO,iBAAiB,sBAAsBC,OAAOC,MAAM,GAAI9O,EAAEwN,MACjLT,MAAMuB,KAAKvS,EAAIgT,QAAQjB,SAAQ,SAAC9N,EAAGvC,GAAKoQ,EAAG7N,GAAG2O,EAAMlR,OAExD0P,EAAQU,GApBX,0CAAD,KAsBF,CAACxB,EAAcnR,EAAMy+B,cAInB,kBAAC,IAAD,CAAU55B,IAAK7E,EAAM4K,UAAW+K,OAAQ3V,EAAMgU,QAASC,aAAc,WAAUjU,EAAMiU,cAAcjU,EAAMiU,gBAAiBhP,MAAO,CAACC,aAAc,GAAI0Q,SAAS,oBACzJ,yBAAKjR,GAAG,iCAAiCM,MAAK,aAAGwB,QAAS,gBAAmBzG,EAAMiF,QAC/E,yBAAKN,GAAG,4BACJ,yBAAKA,GAAG,oBACJ,0BAAMK,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,QACA,0BAAMA,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,OACA,0BAAMA,UAAU,yBAAhB,QAEJ,yBAAKL,GAAG,sBACH,sBAAIiN,GAAJ,YAAkBG,GAAlB,YAAiCD,IAAWjR,KAAI,SAAA0B,GAAC,OAClD,0BAAMyC,UAAS,0DAAqDzC,EAAE4B,KAAvD,oCAAuF5B,EAAE6B,SAAWa,MAAO,CACtHkP,gBAAmBnC,EAAKzP,EAAE6B,UAAqB,WAAX7B,EAAE4B,KAApB,WACV6N,EAAKzP,EAAE6B,UACX,UACJk2B,OAAqB,WAAX/3B,EAAE4B,MAAqB5B,EAAE6B,UAAY+M,EAAaxF,UAC5D,oCACA,KAEAtF,QAAS,SAACvB,GAEN,IAAIgO,EACW,QAAXvQ,EAAE4B,OACF2O,EAAO,IAAIrH,KAAKgG,EAAiBvD,cAAeuD,EAAiBtD,WAAY5L,EAAE6B,UACpE,WAAX7B,EAAE4B,OACF2O,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAY5L,EAAE6B,UAC9D,SAAX7B,EAAE4B,OACF2O,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAW,EAAG5L,EAAE6B,UAC/EgN,EAAgB0B,GACZ9S,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAetB,KACzBvQ,EAAE6B,aAGd,yBAAKO,GAAG,sBACR,yBAAKK,UAAU,mCAAmCmM,EAAaxF,WAC/D,yBAAK3G,UAAU,+BAA+BmM,EAAanC,eAAe,QAAS,CAAGE,QAAS,UAC/F,yBAAKlK,UAAU,4BAA4BmM,EAAanC,eAAe,QAAS,CAAEe,MAAO,UACzF,yBAAK/K,UAAU,2BAA2BmM,EAAajD,gBAErD,WACE,GAAIlO,EAAMw+B,QACN,OAAO,yBAAKx5B,UAAU,qBAClB,0BAAMA,UAAU,iBAAhB,QAGA,2BACIA,UAAU,mBACV+T,aAAc5H,EAAamzB,qBAC3BxO,WAAY,SAAAhxB,GAGR,IAAIoQ,EAAI0G,YAAiB9W,EAAEyS,OAAOnK,OAElC,GAAI8H,GAAe,UAAVpQ,EAAEY,IAAiB,CACxB,IAAI6+B,EAAU,IAAI94B,KAAK0F,EAAajD,cAAeiD,EAAahD,WAAYgD,EAAaxF,UAAWuJ,EAAE8N,WAAY9N,EAAE8pB,aAAc9pB,EAAE+pB,cACpI7tB,EAAgBmzB,GAChBz/B,EAAEyS,OAAOnK,MAAQm3B,EAAQD,qBACrBtkC,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAemwB,QAnB/C,GA0BF,yBAAK5/B,GAAG,kBACR,uBAAGK,UAAU,oCAAoCqB,QAAS,WACtD,IAAIyM,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAW,EAAG,GAC7EiD,EAAgB0B,GACZ9S,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAetB,MAG7B,uBAAG9N,UAAU,qCAAqCqB,QAAS,WACvD,IAAIyM,EAAO,IAAIrH,KAAK8F,EAAcrD,cAAeqD,EAAcpD,WAAW,EAAG,GAC7EiD,EAAgB0B,GACZ9S,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAetB,MAG7B,yBAAK9N,UAAU,iBAAiBqB,QAAS,WACrC+K,EAAgB,IAAI3F,MAChBzL,EAAMoU,iBAAmBpU,EAAMu+B,gBAC/Bv+B,EAAMoU,eAAe,IAAI3I,QAE7BzL,EAAMgE,SAAS4F,cAAc0K,OAC7B,yBAAKtP,UAAU,iBAAiBC,MAAO,CAACmK,YAAa,GAAIoqB,MAAO,SAAUnzB,QAAS,WAC3E8K,GACAnR,EAAMoU,eAAejD,GACzBnR,EAAMiU,iBAHV,e","file":"static/js/main.a3a63df3.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useDrag } from 'react-use-gesture'\nimport { useSprings, animated, interpolate } from 'react-spring'\n\nimport '../Projects.css';\n\nimport Task from './Task';\n\n\n\n/*\n *\n * Hello human,\n * good afternoon.\n *\n * I am clumsy sortable!\n *\n * Use me to sort things\n * and make sortable task lists\n *\n * TODO => put actual documentation here\n *\n * So there.\n *\n * @jemoka\n *\n */\n\nconst SortableTaskList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:\"task\", content:i}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((id, i) => {\n        let anim = springs[i];\n        return (\n            <div ref={(e)=>{dragEnvelope.current=e}}>\n            <animated.div \n                {...bind(i)} \n                className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                style={{\n                    borderRadius: 7,\n                    position: \"relative\",\n                    cursor: \"pointer\",\n                    zIndex: anim.zIndex,  // z-index is 1000 during drag\n                    transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                }} \n                onClickCapture={(e)=>{\n                    if (activelyDragging.includes(i)){ // if we are still dragging\n                        e.stopPropagation(); // no clicky!\n                    }\n                }}\n            >\n                <Task ref={objRefs[i]} tid={id} key={id+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[id]} envelope={dragEnvelope} setDragEnabled={setDragEnabled} />\n            </animated.div>\n            </div>\n    )\n    });\n}\n\nconst SortableProjectList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:i.type, content:i.type===\"project\"?i.content.id:i.content}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((item, i) => {\n        let anim = springs[i];\n        if (item.type === \"task\")\n            return (\n                <div ref = {dragEnvelope}>\n                    <animated.div \n                        {...bind(i)} \n                        className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                        style={{\n                            borderRadius: 7,\n                            position: \"relative\",\n                            cursor: \"pointer\",\n                            zIndex: anim.zIndex,  // z-index is 1000 during drag\n                            transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                        }} \n                        onClickCapture={(e)=>{\n                            if (activelyDragging.includes(i)){ // if we are still dragging\n                                e.stopPropagation(); // no clicky!\n                            }\n                        }}\n                    >\n                        <Task ref={props.activeTaskID===item.content ? props.activeTaskRef : objRefs[i]} tid={item.content} key={item.content+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[item.content]} envelope={dragEnvelope} setDragEnabled={setDragEnabled}/>\n                    </animated.div>\n                </div>\n            )\n        else if (item.type === \"project\") {\n            return (\n            <div ref={dragEnvelope}>\n                <animated.div \n                    {...bind(i)} \n                    className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                    style={{\n                        borderRadius: 7,\n                        position: \"relative\",\n                        cursor: \"pointer\",\n                        zIndex: anim.zIndex,  // z-index is 1000 during drag\n                        transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                    }} \n                    onClickCapture={(e)=>{\n                        if (activelyDragging.includes(i)){ // if we are still dragging\n                            e.stopPropagation(); // no clicky!\n                        }\n                    }}\n                >\n                    <a className=\"subproject\" style={{opacity:props.availability[item.content.id]?\"1\":\"0.35\"}} onClick={()=>{props.paginate(\"projects\", item.content.id);props.history.push(`/projects/${item.content.id}`)}}><div><i className=\"far fa-arrow-alt-circle-right subproject-icon\"/><div style={{display: \"inline-block\"}}>{props.possibleProjects[item.content.id]}</div></div></a>\n                </animated.div>\n            </div>\n            )\n        }\n    });\n}\n\nexport { SortableTaskList, SortableProjectList };\n\n\n\n","// A whole lotta imports\n\n// Ionic components\nimport { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, isPlatform } from '@ionic/react';\nimport { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, calendar } from 'ionicons/icons';\n\n// Routing\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// Cool components that we need\nimport Upcoming from './Upcoming';\nimport Calendar from './Calendar';\nimport Completed from './Completed';\nimport Perspectives from './Perspectives';\nimport Projects from './Projects';\nimport ABTIB from './Components/FloatingActionButton';\nimport Keybinds from './Components/KeybindManager';\n\n// Our very own CSS\nimport './Home.css';\n\n// Tootips\nimport ReactTooltip from 'react-tooltip';\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\nconst history = isPlatform(\"electron\") ? createHashHistory() : createBrowserHistory();\n\n/* \n *\n * Hello, human\n * Good morning\n * Read me please.\n *\n * Use the **state**'s itemSelected \n *     to manage the menu\n * use the **React Router URL** \n *     to manage the page\n *\n * Otherwise, unreload-reload won't work.\n *\n * Thanks. @jemoka.\n *\n */\n\n// Welp. The Home.\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects:[], // list of top level projects\n            perspectives:[], // list of perspectives\n            itemSelected:{item:\"upcoming\", id:undefined}, // so what did we actually select\n        };\n\n\n        // AutoBind!\n        autoBind(this);\n\n        this.abtibRef = React.createRef();\n\n        this.menu = React.createRef();\n\n    }\n\n    paginate = (to, id) => this.setState({itemSelected:{item:to ,id}}) // Does not actually paginate; instead, it... uh... sets the highlighting of the menu\n\n    componentDidMount() {\n        // This is, indeed, the view\n        // Get the current URI to set which view is selected\n        let url = (new URL(document.URL))\n        let uri = url.pathname.split(\"/\");\n        let hash = url.hash.split(\"/\");\n        if (uri[1] === \"\")\n            this.setState({itemSelected:{item:\"upcoming\", id:\"\"}});\n        else if (isPlatform(\"electron\"))\n            this.setState({itemSelected:{item:hash[1], id:hash[2]}});\n        else\n            this.setState({itemSelected:{item:uri[1], id:uri[2]}});\n\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.to !== this.state.to && this.state.to !== undefined)\n             this.setState({sends:{to:undefined, id:undefined}})\n    }\n\n    async refresh() {\n        // Load the top level projects and perspectives\n        // to set into the state and to add to the menu\n        let tlp = await this.props.engine.db.getTopLevelProjects(this.props.uid);\n        let psp = await this.props.engine.db.getPerspectives(this.props.uid);\n\n        this.setState({projects: tlp[2], perspectives:psp[2]});\n    }\n\n\n\n\n    render() {\n        const Router = isPlatform(\"electron\") ? IonReactHashRouter : IonReactRouter; // Router workaround for electron\n        return (\n            <IonPage>\n                {/* The central router that controls the routing of views */}\n                <Router history={history}>\n\t\t    <Keybinds \n\t\t\tpaginate={this.paginate} \n\t\t\tref={this.keybindRef} \n\t\t\tperspectives={this.state.perspectives}\n\t\t\tprojects={this.state.projects}\n\t\t\tabtib={this.abtibRef} \n\t\t\tengine={this.props.engine} \n\t\t\tuid={this.props.uid} \n\t\t\tgruntman={this.props.gruntman} \n\t\t    />\n                    {/* OoIp */}\n                    <ReactTooltip />\n                    {/* App container */}\n                    <IonContent noBounce forceOverscroll={false}>\n                        {/* Menu pane to control mobile view splitting */}\n                        <IonSplitPane id=\"main-split\" contentId=\"main\" mode=\"md\">\n                            {/* The left: menu! */}\n                            <IonMenu id=\"main-menu\" contentId=\"main\" ref={this.menu}>\n                                <br />\n                                <IonContent id=\"menu-content\" className={(()=>{\n                                    if (!isPlatform(\"electron\")) // if we are not running electron\n                                        return \"normal\"; // normal windowing proceeds\n                                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                                        return \"darwin\"; // frameless setup\n                                    }\n                                    else if (process.platform === \"win32\") // windows\n                                        return \"windows\"; // non-frameless\n\n                                })()}>\n                                    {/* === Built Ins: upcoming + completed == */}\n                                    {/* Upcoming button + link */}\n                                    <Link to=\"/upcoming\" onClick={()=>this.setState({itemSelected:{item:\"upcoming\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Upcoming button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"upcoming\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20}} icon={chevronForwardCircle} />{this.props.localizations.upcoming}</div>\n                                    </Link>\n\n                                    {/* Completed button + link */}\n                                    <Link to=\"/completed\" onClick={()=>this.setState({itemSelected:{item:\"completed\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Completed button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"completed\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={checkmarkCircle} />{this.props.localizations.completed}</div>\n                                    </Link>\n\n                                    {/* Calendar button + link */}\n                                    <Link to=\"/calendar\" onClick={()=>this.setState({itemSelected:{item:\"calendar\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Calendar button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"calendar\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={calendar} />{this.props.localizations.calendar}</div>\n                                    </Link>\n\n                                    {/* === Perspectives == */}\n                                    <div className=\"menu-sublabel menu-decoration\">{this.props.localizations.perspectives} <a onClick={()=>{\n                                        if (this.menu.current)\n                                            this.menu.current.close();\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"perspective.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/perspectives/${npid}/do`);\n                                            this.paginate(\"perspectives\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n\n                                    {/* === Perspective button + link == */}\n                                    {this.state.perspectives.map((psp) => {\n                                        return (\n                                            <Link key={psp.id} to={`/perspectives/${psp.id}`} onClick={()=>this.setState({itemSelected:{item:\"perspectives\", id:psp.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"perspectives\" && this.state.itemSelected.id === psp.id ? \"menu-item-selected\" : \"\")}><i className=\"fas fa-layer-group\" style={{paddingRight: 2}}></i> {psp.name}</div> \n                                            </Link>\n                                        )\n                                    })}\n\n\n                                    {/* === Projects == */}\n                                    <div className=\"menu-sublabel menu-decoration\">{this.props.localizations.projects}<a onClick={()=>{\n                                        if (this.menu.current)\n                                            this.menu.current.close();\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"project.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/projects/${npid}/do`);\n                                            this.paginate(\"projects\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n                                    {/* === Project Contents == */}\n                                    {this.state.projects.map((proj) => {\n                                        return (\n                                            <Link key={proj.id} to={`/projects/${proj.id}`} onClick={()=>this.setState({itemSelected:{item:\"projects\", id:proj.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"projects\" && this.state.itemSelected.id === proj.id ? \"menu-item-selected\" : \"\")}><IonIcon icon={listOutline}/>{proj.name}</div></Link> \n                                        )                            \n                                    })}\n\n                                </IonContent>\n\n                                {/* Logout button */}\n                                <div className=\"menu-item\" id=\"logout\" onClick={()=>{history.push(`/`);this.props.dispatch({operation: \"logout\"})}}><i className=\"fas fa-snowboarding\" style={{paddingRight: 5}} />{this.props.localizations.logout}</div>\n                            </IonMenu>\n                            <IonPage id=\"main\">\n                                {/* the add button to inbox button*/}\n                                <ABTIB reference={this.abtibRef} uid={this.props.uid} gruntman={this.props.gruntman} localizations={this.props.localizations}/>\n                                {/* the portal root for DOM elements to park */}\n                                <div id=\"parking-lot\"></div>\n                                {/* The actual page */}\n                                <IonRouterOutlet>\n                                    {/* empty => /upcoming*/}\n                                    <Route render={() => <Redirect to=\"/upcoming\"/>}/>\n                                    {/* / => /upcoming */}\n                                    <Route exact path=\"/\" render={() => <Redirect to=\"/upcoming\" />} />\n                                    {/* and the perspective switch */}\n                                    <Switch>\n                                        {/* upcoming renders upcoming */}\n                                        <Route path=\"/upcoming\" exact render={()=><Upcoming engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} displayName={this.props.displayName} localizations={this.props.localizations} />} />\n                                        {/* completed renders completed */}\n                                        <Route path=\"/calendar\" exact render={()=><Calendar engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} />} localizations={this.props.localizations} />\n\n                                        {/* completed renders completed */}\n                                        <Route path=\"/completed\" exact render={()=><Completed engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} localizations={this.props.localizations} />} />\n\n                                        {/* perspective renders perspectives */}\n                                        <Route path=\"/perspectives/:id/:create?\" render={({match})=><Perspectives engine={this.props.engine} paginate={this.paginate} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh}  options={match.params.create} localizations={this.props.localizations}/>}  />\n\n                                        {/* project renders perspectives */}\n                                        <Route path=\"/projects/:id/:create?\" render={({match})=><Projects engine={this.props.engine} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh} paginate={this.paginate} options={match.params.create} localizations={this.props.localizations}/>}  />\n                                        {/* TODO projects */}\n                                    </Switch>\n                                </IonRouterOutlet>\n                            </IonPage>\n                        </IonSplitPane>\n                    </IonContent>\n                </Router>\n            </IonPage>\n        );\n    }\n};\n\nexport default Home;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform, IonInfiniteScroll, IonInfiniteScrollContent } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Upcoming.scss';\nimport './Pages.css';\n\nimport { SortableTaskList } from './Components/Sortable';\n\nimport Task from './Components/Task';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\n/* \n * The lack of a poem here is scathing\n * so I thought\n * I'd contribute.\n *\n * The homepage needs no introduction\n * For it explains itself in production.\n *\n * But alas,\n * I still write this.\n *\n * What for?\n *\n * @Jemoka\n *\n */\n\n\nclass Upcoming extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        let tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate()+1);\n\n        let greetings = this.props.localizations.greetings_setA;\n\n        this.state = {\n            inbox: [], // define the inbox\n            dueSoon: [], // whats due soon? \n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            timeline: [],\n            timelineShown: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        autoBind(this);\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pandt = await this.props.engine.db.getInboxandDS(this.props.uid, avail) // get inbox and due soon \n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.updatePrefix = this.random();\n\n        let timeline = await this.props.engine.db.selectTasksInRange(this.props.uid, new Date(), new Date(2100, 1, 1), true);\n        \n                            //timeline.push({type: \"label\", content: timelineRenderedUntil});\n                        //for (let task of fTasks)\n                            //timeline.push({type:\"task\", content:task});\n\n                        //this.setState({timelineRenderedUntil, timelineSoFar: timeline});\n        // Date same date check https://stackoverflow.com/questions/4428327/checking-if-two-dates-have-the-same-date-info\n        timeline = timeline.filter((x)=>!pandt[1].includes(x[0]))\n        Date.prototype.isSameDateAs = function(pDate) {\n          return (\n            this.getFullYear() === pDate.getFullYear() &&\n            this.getMonth() === pDate.getMonth() &&\n            this.getDate() === pDate.getDate()\n          );\n        }\n\n        let refrenceDate = new Date();\n        let tcontent = [];\n        for (let task of timeline) {\n            let due = new Date(task[1].due.seconds*1000);\n            if (!due.isSameDateAs(refrenceDate)) {\n                tcontent.push({type:\"label\", content: due});\n                refrenceDate = due;\n            }\n            tcontent.push({type:\"task\", content: task[0]});\n        }\n\n        this.setState({inbox: pandt[0], dueSoon: pandt[1], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, timeline: tcontent});\n    }\n\n    componentDidMount() {\n        this.refresh();\n\n        //// Jack and the Misadventures of Hiding the Scrollbar\n        //const content = this.pageRef.current;\n        //const styles = document.createElement('style');\n        //styles.textContent = `\n            //.scroll-y::-webkit-scrollbar {\n                //display: none;\n            //}\n        //`;\n        {/*content.shadowRoot.appendChild(styles);*/}\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n\n    render() {\n\n        return (\n            <IonPage>\n                <div style={{overflow: \"hidden\"}}>\n\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n                        <div className=\"header-container\" onTouchMove={(e)=>e.preventDefault()}>\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle><i className=\"fas fa-bars\" style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} /></IonMenuToggle> <h1 className=\"page-title\"><i style={{paddingRight: 10}} className=\"fas fa-chevron-circle-right\"></i>{this.props.localizations.upcoming}</h1> \n\n                                    \n                            <div className=\"greeting-datewidget\">\n                                <div style={{display: \"inline-block\"}} className=\"greeting-date\">{(new Date()).getDate()}</div>\n                                <div style={{display: \"inline-block\"}} className=\"greeting-datename\">{new Date().toLocaleString(this.props.localizations.getLanguage(), {  weekday: 'long' })}</div>\n                            </div>\n                            \n\n\n                                <div className=\"greeting-container\"><span id=\"greeting\">{this.state.greeting}</span> <span id=\"greeting-name\" style={{fontWeight: 600}}>{this.props.displayName}</span></div>\n                            </div>\n                        </div>\n                        <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", flexGrow: 5}}>\n                            <div>\n                                {(()=>{\n                                    if (this.state.inbox.length > 0)\n                                        return <div className=\"page-label\">{this.props.localizations.unsorted}<IonBadge className=\"count-badge\">{this.state.inbox.length}</IonBadge></div>\n                                })()}\n                                <SortableTaskList list={this.state.inbox} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                            </div>\n                            <div>\n                                {(()=>{\n                                    if (this.state.dueSoon.length > 0)\n                                        return <div className=\"page-label\">{this.props.localizations.ds}<IonBadge className=\"count-badge\">{this.state.dueSoon.length}</IonBadge></div>\n                                })()}\n                                {this.state.dueSoon.map(id => (\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                            </div>\n                            <div>\n                                <div className=\"timeline-button\">\n                                    <a \n                                        onClick={()=>\n                                                this.setState({timelineShown: !this.state.timelineShown})} \n                                        // for some reason, css classes don't work, so we have to style here\n                                        // @jack? why don't they? well, styling here's fine anyways. most likely b/c they are overrode by className=timeline-button\n                                        style={{\n                                            marginLeft: 15,\n                                            marginTop: 20, \n                                            display: \"inline-block\", \n                                            fontWeight: 600, \n                                            fontSize: 13, \n                                            //color: \"var(--decorative-light-alt)\", \n                                            cursor: \"pointer\"}}\n                                    >\n                                        <i \n                                            className=\"fas fa-calendar-week\" \n                                            style={{paddingRight: 5}}\n                                        ></i> {this.state.timelineShown? this.props.localizations.hide : this.props.localizations.show} {this.props.localizations.timeline}</a>\n                                </div> \n                                {\n                                    (()=>{\n                                        if (this.state.timelineShown)\n                                            return this.state.timeline.map(timelineItem => {\n                                                if (timelineItem.type === \"task\")\n                                                    return <Task tid={timelineItem.content} key={timelineItem.content+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[timelineItem.content]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                                        else if (timelineItem.type === \"label\")\n                                                    return <div className=\"timeline-box\"><div className=\"timeline-line-container\"><div className=\"timeline-line\">&nbsp;</div></div><div className=\"timeline-text\"><span className=\"timeline-weekname\">{timelineItem.content.toLocaleDateString(this.props.localizations.getLanguage(), { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</span></div></div>\n\n\n                                            })\n                                    })()\n                                }\n                                {\n                                    (()=>{\n                                            if (this.state.timelineShown)\n                                            return <span style={{fontSize: 8, color:\"var(--commitid)\", paddingLeft:10, paddingTop:10}}>Commit ID: {process.env.REACT_APP_COMMIT_HASH}</span>\n                                    })()\n                                }\n                            </div>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\n// Hiding scrollbar, a journey\n\n\n\nexport default Upcoming;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport {withGetScreen} from 'react-getscreen'\nimport './Calendar.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport CalendarPopover, { CalendarUnit } from './Components/CalendarPopover';\nimport CalendarTasklistPopover from './Components/CalendarTasklistPopover';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n *\n * Apparently,\n * People like calendars.\n *\n * WHY?\n *\n * People don't respect \n * the existance \n * of the whole idea of GTD.\n *\n * Seriously.\n *\n * Why. A calendar?! in a GTD app.\n *\n * FINE. Here's your calendar.\n *\n * @jemoka\n *\n *\n */\n\nlet refreshed = 0;\n\nfunction CalPageBigOllendar(props) {\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let [dateSelected, setDateSelected] = useState(new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    let [heat, setHeat] = useState({});\n\n    let [isPopoverShown, setIsPopoverShown] = useState(false);\n\n    let [shownList, setShownList] = useState([]);\n    \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    let refresh = (async function() {\n            let map = new Map();\n            let names = new Map();\n            let ids = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([id, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n                if(names.has(time))\n                    names.set(time, [...names.get(time), val.name]);\n                else\n                    names.set(time, [val.name]);\n                if(ids.has(time))\n                    ids.set(time, [...ids.get(time), id]);\n                else\n                    ids.set(time, [id]);\n\n            });\n            let values = Array.from(map.values());\n            let nameList = Array.from(names.values());\n            let idList = Array.from(ids.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]={color:hexes[i], value:values[i], names:nameList[i], ids: idList[i]}});\n            }\n            setHeat(hm);\n        })\n\n    useEffect(()=>{\n        refresh();\n    },[dateSelected, refreshed]);\n\n    return (\n        <div id=\"calendar-page-bigol-calendar-wrapper\" style={{display: \"inline-block\", height: \"85%\", width: \"95%\", ...props.style}}>\n            <CalendarTasklistPopover uid={props.uid} engine={props.engine} isShown={isPopoverShown} onDidDismiss={()=>setIsPopoverShown(false)} list={shownList} availability={props.availability} datapack={props.datapack} gruntman={props.gruntman} currentDate={dateSelected}/>\n            <div id=\"bigol-calendar-wrapper\">\n                <div id=\"bigol-calendar-daterow\">\n                    <span className=\"bigol-calendar-daterow-item\">Sun</span>\n                    <span className=\"bigol-calendar-daterow-item\">Mon</span>\n                    <span className=\"bigol-calendar-daterow-item\">Tues</span>\n                    <span className=\"bigol-calendar-daterow-item\">Wed</span>\n                    <span className=\"bigol-calendar-daterow-item\">Thu</span>\n                    <span className=\"bigol-calendar-daterow-item\">Fri</span>\n                    <span className=\"bigol-calendar-daterow-item\">Sat</span>\n                </div>\n                <div id=\"bigol-calendar-container\">\n                    {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                    <span className={`bigol-calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                        backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                            `#${heat[i.content].color}` :\n                            \"inherit\")\n                    }}\n                        onClick={(e)=>{\n                            let date;\n                            if (i.type === \"pre\")\n                                date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                            if (i.type === \"actual\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                            if (i.type === \"post\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                            setDateSelected(date);\n                            if (heat[i.content])\n                                setShownList(heat[i.content].ids);\n                            else\n                                setShownList([]);\n                            setIsPopoverShown(true)\n                            if (props.onDateSelected)\n                                props.onDateSelected(date);\n                        }}>\n                        <div className=\"calendar-date-text\">\n                            {i.content}<span className=\"calendar-date-value\">{(heat[i.content]&&i.type===\"actual\")?`${heat[i.content].value} Tasks`:null}</span></div><div style={{marginLeft: 6, marginRight: 5, marginBottom: 2}}>{((heat[i.content]&&i.type===\"actual\")?heat[i.content].names:[]).map((name)=><span className=\"calendar-date-taskname\"><div className=\"calendar-task-circle\">&nbsp;</div>{name}</span>)}</div>\n                    </span>\n                    )}\n                </div>\n                <div id=\"bigol-calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected)\n                            props.onDateSelected(new Date());\n\n                    }}>{props.gruntman.localizations.clbtd}</div>\n\n\n                </div>\n\n                <div id=\"bigol-calendar-infopanel\">\n                    <div id=\"bigol-calendar-dategroup\">\n                        <div className=\"bigol-calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                        <div className=\"bigol-calendar-infopanel-datename\">{dateSelected.toLocaleString(props.gruntman.localizations.getLanguage(), {  weekday: 'long' })}</div>\n                        <div className=\"bigol-calendar-infopanel-month\">{dateSelected.toLocaleString(props.gruntman.localizations.getLanguage(), { month: 'long' })}</div>\n                        <div className=\"bigol-calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nclass Calendar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let today = new Date();\n        today.setHours(0,0,0,0);\n\n        this.state = {\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            currentDate: (today), // new date\n            taskList: [],\n            popoverIsVisible: false,\n\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        let endDate = new Date(this.state.currentDate);\n        endDate.setHours(23,59,59,60);\n        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, this.state.currentDate, endDate);\n\n        refreshed++;\n\n        this.setState({\n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB, \t\t\t      // and the project db \n            taskList\n        }); // once we finish, set the state\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                {/* the perspective editor! */}\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-calendar-alt\">\n                                    </i>\n                                    @NEEDLOC Calendar\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                            </div> \n                        </div>\n                    </div>\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", height: \"100%\"}}>\n                        <div id=\"calendar-page-wrapper\">\n                            {(()=>{\n                                if (this.props.isMobile())\n                                    return <CalendarUnit gruntman={this.props.gruntman} uid={this.props.uid} engine={this.props.engine} isShown={this.state.popoverIsVisible} onDidDismiss={()=>this.setState({popoverIsVisible: false})}  onDateSelected={(async function(d){\n                                        let endDate = new Date(d.getTime());\n                                        endDate.setHours(23,59,59,60);\n                                        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, d, endDate);\n                                        this.setState({currentDate: d, taskList});\n                                    }).bind(this)}/>\n                                else \n                                    return <CalPageBigOllendar gruntman={this.props.gruntman}  uid={this.props.uid} engine={this.props.engine} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                            })()}\n                            {(()=>{\n                                if (this.props.isMobile())\n                            return <div id=\"calendar-page-taskpage-wrapper\">\n                                <span id=\"calendar-page-header\">\n                                    <div class=\"calendar-page-count\">{this.state.taskList.length}</div>\n                                    <div class=\"calendar-page-title\">tasks due on</div>\n                                    <div class=\"calendar-page-date\">{this.state.currentDate.toLocaleString('en-us', {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'  })}</div>\n                                </span>\n                                {this.state.taskList.map(id=>(\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                            </div>\n                            })()}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\nexport default withGetScreen(Calendar, {mobileLimit: 720, tabletLimit:768, shouldListenOnResize: true});\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { createRef, useEffect, useRef } from 'react';\nimport '../Calendar.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\nimport Task from '../Components/Task';\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the calendar popover\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\n\nfunction CalendarTasklistPopover(props) {\n\n    let refs = useRef([]);\n\n    useEffect(()=>{\n        refs.current=props.list.map((_)=>createRef());\n    }, [props.list]);\n\n    return (\n        <IonModal ref={props.reference} isOpen={props.isShown} onDidDismiss={() => {if(props.onDidDismiss) props.onDidDismiss()}} style={{borderRadius: 5}} cssClass=\"calendar-list-popover\">\n                <div id=\"airplane-hanger\"></div> {/*to mount the calendar*/}\n            <div className=\"popover-list\">\n                <span id=\"calendar-page-header\">\n                    <div class=\"calendar-page-count\">{props.list.length}</div>\n                    <div class=\"calendar-page-title\">tasks due on</div>\n                    <div class=\"calendar-page-date\" >{props.currentDate.toLocaleString('en-us', {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'  })}</div>\n                </span>\n\n                {props.list.map((id, i)=>\n                    <div ref={refs.current[i]}>\n                        <Task tid={id} key={id} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[id]} datapack={props.datapack} envelope={refs.current[i]} onModal={true}/>\n                    </div>\n                )}\n                <div className=\"bottom-helper\" style={{height: 150}}>&nbsp;</div>\n            </div>\n        </IonModal>\n    )\n}\n\nexport default CalendarTasklistPopover;\n\n","// IMPORTS\nimport { IonContent, IonPage, IonMenuToggle, isPlatform } from '@ionic/react'; \nimport React, { Component, useEffect } from 'react';\nimport './Completed.css';\nimport './Pages.css';\nimport Task from './Components/Task';\nconst autoBind = require('auto-bind/react'); // autobind is a lifesaver\n\n/*\n\n * Sometimes we complete.\n *\n * This is not always correct,\n *\n * so we have this page! \n *\n * @enquirer\n\n*/\n\n// construtor for rendered object\nfunction TaskObject(type, contents) {\n    this.type = type; // set the type to the type (label or task)\n    this.contents = contents; // set the contents to the contents (title or id)\n}\n\n// define the main component!\nclass Completed extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // the objects we render\n            tasksShown: 1, // track the number of times we have fetched more\n            taskCats: [\"Today\", \"Yesterday\", \"This Week\", \"This Month\", \"Even Before\"], // define task categories (cats!)\n            rendering: true, // define whether or not the element is rendering \n            possibleProjects:{}, // see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    async refresh() {\n        let taskArr = []; // define temp array\n        let full = await this.props.engine.db.getCompletedTasks(this.props.uid); // get the tasks from the database \n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n        // loop through the tasks, converting to objects and inserting labels between each cat\n        full.forEach((cat, i) => {\n            taskArr.push(new TaskObject(\"label\", this.state.taskCats[i])) // each iteration, push the next label to the temp arr\n            cat.forEach(task => { // this loops through each cat\n                taskArr.push(new TaskObject(\"task\", task)) // convert each task to an object then push it to the temp arr\n            })\n        });\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.setState({taskList: taskArr, rendering: false, possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB}); // once we finish, set the state\n        // also set rendering to false. \n        // This is a hacky solution instead of creating an entirely new async function.\n    }\n\n    async componentDidMount() {\n        this.refresh(); // refresh when the component mounts\n    }\n\n    handleFetchMore() {\n        this.setState({rendering: true}) // trigger loading screen\n        const loader =  setTimeout(() => { // set a timeout to set the rendering to false \n            this.setState({rendering: false})\n\n        }, 2);\n\n        const updateTasks =  setTimeout(() => { // set another timeout for the actual task update\n            this.setState({tasksShown: this.state.tasksShown+1}) \n            // increment tasksShown by one whenever fetch more is clicked\n            // this renders 10 more items \n            this.setState({rendering: false}) // set rendering to false\n        }, 1)\n\n        // disclaimer: I do not understand how this works. I was just messing around trying to debug and this happened to work.\n        // if it ain't broke, dont fix it? \n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                <div style={{overflowY: \"scroll\"}}>\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n\n                        <div className=\"header-container\">\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle>\n                                    <i class=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-check-circle\">\n                                    </i>\n                                    Completed\n                                </h1> \n                            </div>\n                        </div>\n                        {/* loop through the taskList ten times, multiplyed by the times we have fetched more */}\n                        {/* if the cat is empty or the final item rendered is a label, don't render it */}\n                        {/* otherwise, render a task */}\n                        {/* for the fetch more, if we are currently rendering, render a loading animation. */}\n                        {/* Otherwise, render a fetch more.*/}\n                        <div style={{overflowY: \"scroll\"}}>\n                            {this.state.taskList.slice(0, 10*this.state.tasksShown).map((content, i) => (\n                                <div style={{marginLeft: 10, marginRight: 10}}>\n                                    {(content.type == \"label\")?  \n                                            (this.state.taskList[i+1] ? \n                                                ((this.state.taskList[i+1].type == \"label\" || this.state.taskList.slice(0, 10*this.state.tasksShown).length == i+1) ? \n                                                \"\" : <p className=\"page-label\" style={{marginBottom:0}}>{content.contents}</p>) : \"\") : \n                                                <Task \n                                                    tid={content.contents} \n                                                    startingCompleted={true}\n                                                    key={content.contents+\"-\"+this.updatePrefix} \n                                                    uid={this.props.uid} \n                                                    engine={this.props.engine} \n                                                    gruntman={this.props.gruntman} \n                                                    availability={this.state.availability[content.contents]} \n                                                    datapack={[this.state.tagSelects,\n                                                        this.state.projectSelects, \n                                                        this.state.possibleProjects, \n                                                        this.state.possibleProjectsRev, \n                                                        this.state.possibleTags, \n                                                        this.state.possibleTagsRev]}\n                                                />\n                                    }\n                                </div>\n                            ))}\n\n                        <div className=\"fetch-more\" > \n                            {/* define the fetch more button */}\n                            {this.state.rendering? <p className=\"loader\" >Loading...</p> : <p onClick={this.handleFetchMore}>Fetch more...</p>}\n                        </div> \n                    <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default Completed;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Perspectives.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport PerspectiveEdit from './Components/PerspectiveEditor';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n * To sort, we give our tasks tags\n *\n * We can also give them flags\n * \n * With perspectives we filter,\n *\n * To keep our tasks in kilter,\n *\n * Then refactor the code if it lags!\n *\n *\n * @enquirer\n *\n */\n\n\nclass Perspectives extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // what tasks should we display? \n            perspectiveName: \"\", // whats the perspective name? \n\t    perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n\t    perspectiveAvail: {}, // whats the perspective availability? \n\t    perspectiveTord: {},  // whats the perspective ordering?\n\t    // not truth or dare. jack doent even know what that is! ^^ \n            showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n\n        };\n\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let possiblePerspectives = await this.props.engine.db.getPerspectives(this.props.uid); // get all possible perspectives\n        let perspectiveObject = possiblePerspectives[0][this.props.id] // get the one we want based on page id \n        let taskList = await this.props.engine.perspective.calc(this.props.uid, perspectiveObject.query, perspectiveObject.avail, perspectiveObject.tord) // then get the tasks from that perspective\n\n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.setState({\n            taskList: taskList,                           // set the tasklist, \n            perspectiveName: perspectiveObject.name,     // set the perspective name \n\t    perspectiveQuery: perspectiveObject.query,  // set the perspective query \n\t    perspectiveAvail: perspectiveObject.avail, // set the perspective avail \n\t    perspectiveTord: perspectiveObject.tord,  // set the perspective tord \n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB \t\t\t      // and the project db \n        }); // once we finish, set the state\n    }\n\n    updateName(e) {\n        if (e) { // if the name if defined, \n            this.props.gruntman.registerScheduler(() => {\n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n\t\t\t// pass it the things \n                        uid: this.props.uid, // the user id \n                        id: this.props.id,  // the perspective id \n                        payload: {name: e.target.value} // the action, setting name to the new value \n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n            this.setState({perspectiveName: e.target.value}) // set the perspectiveName\n        }\n    } \n\n\n    handleDelete() {\n        this.props.history.push(\"/upcoming\"); // go back\n        this.props.paginate(\"upcoming\"); // idk man \n        this.props.gruntman.do( // call a gruntman function\n            \"perspective.delete__perspective\", { \n                uid: this.props.uid, // pass it the user id \n                id: this.props.id, // and the current id \n            }\n        ).then(()=>{\n            this.props.menuRefresh(); // refresh menubar\n\n        }) // call the homebar refresh\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) { // if we updated the defer date\n            this.setState({\n                taskList: [], // what tasks should we display? \n                perspectiveName: \"\", // whats the perspective name? \n                perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n                perspectiveAvail: {}, // whats the perspective availability? \n                perspectiveTord: {},  // whats the perspective ordering?\n                // not truth or dare. jack doent even know what that is! ^^ \n                showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n                possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n                possibleTags:{}, \n                possibleProjectsRev:{}, \n                possibleTagsRev:{}, \n                availability: [], \n                projectSelects:[], \n                tagSelects: [], \n                projectDB: {}\n\n            });\n\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n        }\n        // so we want to refresh the perspective that's rendered\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.setState({showEdit: true});\n\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n\t\t{/* the perspective editor! */}\n                <PerspectiveEdit \n                    reference={this.repeater} \n                    isShown={this.state.showEdit} \n                    onDidDismiss={this.hideEdit}\n                    uid={this.props.uid} \n                    engine={this.props.engine} \n                    gruntman={this.props.gruntman}\n                    id={this.props.id}\n                    perspectiveName={this.state.perspectiveName}\n                    query={this.state.perspectiveQuery}\n                    avail={this.state.perspectiveAvail}\n                    tord={this.state.perspectiveTord}\n                    menuRefresh={this.props.menuRefresh}\n                    updateName={this.updateName}\n                    startHighlighted={this.props.options === \"do\"}\n                />\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n\t\t    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-layer-group\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.perspectiveName} // TODO: jack this is hecka hacky\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n\n                                <div className=\"greeting-container\" style={{marginLeft: 11, marginTop: 7}}>\n                                    <a \n                                        onClick={this.showEdit} \n                                        data-tip=\"LOCALIZE: Edit\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}}>\n                                        <i className=\"fas fa-edit\" \n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, \n                                                transform: \"translate(2px, -2px)\"}} \n                                        ></i>\n                                    </a>\n\n                                    <a \n                                        onClick={this.handleDelete} \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}>\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\"}}>\n\n                        {this.state.taskList.map(id => (\n                            <Task \n                                tid={id}\n                                key={id+\"-\"+this.updatePrefix} \n                                uid={this.props.uid} \n                                engine={this.props.engine} \n                                gruntman={this.props.gruntman} \n                                availability={this.state.availability[id]} \n                                datapack={[\n                                    this.state.tagSelects, \n                                    this.state.projectSelects, \n                                    this.state.possibleProjects, \n                                    this.state.possibleProjectsRev, \n                                    this.state.possibleTags, \n                                    this.state.possibleTagsRev\n                                ]}\n                            />\n                        ))}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Perspectives);\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\nimport '../Perspectives.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\nconst autoBind = require('auto-bind/react');\n\n\n/* \n * perspectives are amazing \n *\n * dab on them haters \n *\n * I just said the cringiest thing ever\n *\n * oh my god huxley i swear to god \n *\n * i will rebase your commits \n *\n *\n * - @zbuster05, recorded by @enquirer\n *\n */\n\nclass PerspectiveEdit extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            inputEvent: \"\", // define our input event for the perspective title \n        }\n\n        this.name = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.startHighlighted) // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    handleQueryChange(e) {\n        if (e) { // if the event is defined \n            this.props.gruntman.registerScheduler(() => { \n                //Register a scheduler to deal with React's onChange\n                //check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n                        // pass it the things \n                        uid: this.props.uid, // pass it the uid \n                        id: this.props.id,  // pass it the perspective id \n                        payload: {query: e.target.value} // pass it the action, updating the query\n                    }\n                )\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n        } else {console.log(e)}\n    }\n\n    handleHelp() { // TODO TODO TODO: jack what do u want here? \n        alert(\"You really think we have documentation ready? I mean, if they are there, they are at docs.condution.com\")\n        console.log(\"no one is here to help. grow up.\")\n    }\n\n    render() {\n        return (\n            <IonModal \n                ref={this.props.reference} \n                isOpen={this.props.isShown} \n                onWillPresent={() => {this.props.gruntman.lockUpdates();}}\n                onDidDismiss={() => {\n                    this.props.gruntman.unlockUpdates(); \n                    this.props.updateName(this.state.inputEvent);\n                    if (this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}\n                } \n                cssClass={\"perspective-modal\"}\n            > \n\n                <div>\n                    {/* Header */}\n                    <div className=\"perspective-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\", whiteSpace: \"nowrap\"}}>\n                            <b className=\"bold-prefix\" >{this.props.gruntman.localizations.perspective_build_callout}</b> \n                            <input className=\"editable-title pbuilder-pname\" \n                                ref={this.name}\n                                defaultValue={this.props.perspectiveName} \n                                onChange={(e)=> {e.persist(); this.props.updateName(e); this.setState({inputEvent: e})}}\n                                style={{minWidth: 0}}\n                                placeholder=\"@NEEDLOC Tap to set name\"\n                            />\n\n                            <div className=\"repeat-task-name\">{this.state.name}</div>\n                        </span>\n                        {/* Close button */} \n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss} style={{transform: \"translate(-10px, 3px)\"}}><i className=\"fa fa-times\"></i></a>\n\n                    </div>\n                    <div className=\"build-input\">\n                        <span className=\"bold-prefix\" style={{minWidth: \"70px\", marginTop: \"4px\"}}>Filter by</span> {/*@NEEDLOC*/}\n                        <input \n                            className=\"build-input-edit\"\n                            defaultValue={this.props.query}\n                            onChange={(e)=> {e.persist(); this.handleQueryChange(e)}}\n                            placeholder=\"LOCALIZE: perspective query\"\n                        >\n                        </input> \n                    </div>\n\n\n                    <div className=\"perspective-basic-row\">\n                        <span className=\"pbasic-container\" style={{marginRight: \"25px\"}}>\n                            <span>\n                                <i className=\"repeat-label fas fa-exchange-alt\"></i>\n                                <span className=\"perspective-label\">{this.props.gruntman.localizations.perspective_include}</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.avail} // TODO: make a database hit \n                                mode=\"ios\"\n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the user id \n                                            id: this.props.id,  // pass it the perspective id\n                                            payload: {avail: e.detail.value} // set the availability \n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"remain\">{this.props.gruntman.localizations.psp_rem}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"avail\">{this.props.gruntman.localizations.psp_avil}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"flagged\">{this.props.gruntman.localizations.psp_flg}</IonSelectOption>\n                            </IonSelect>\n                        </span>\n\n                        <span className=\"pbasic-container\">\n                            <span>\n                                <i className=\"repeat-label fas fa-sort-amount-down-alt\"></i>\n                                <span className=\"perspective-label\">{this.props.gruntman.localizations.perspective_order}</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.tord} \n                                mode=\"ios\" \n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the things, you know the drill \n                                            id: this.props.id, \n                                            payload: {tord: e.detail.value}\n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duas\">{this.props.gruntman.localizations.psp_abd}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duds\">{this.props.gruntman.localizations.psp_dbd}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deas\">{this.props.gruntman.localizations.psp_abe}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deds\">{this.props.gruntman.localizations.psp_dbe}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"alph\">{this.props.gruntman.localizations.psp_alpha}></IonSelectOption>\n                            </IonSelect>\n                            <div className=\"help-icon\" onClick={this.handleHelp}>\n                                <i \n                                    className=\"far fa-question-circle\" \n                                ></i>\n                            </div>\n                        </span>\n\n\n                    </div> \n\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default PerspectiveEdit;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Projects.css';\nimport './Pages.css';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport Task from './Components/Task';\n\nimport { withRouter } from \"react-router\";\n\nimport { SortableProjectList } from './Components/Sortable';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\nclass Projects extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '', // project name\n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            parent: \"\",\n            is_sequential: false,\n            currentProject: {children:[]},\n            activeTask: \"\"\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        this.activeTask = React.createRef();\n\n        this.name = React.createRef();\n\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) // if we updated the defer date\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.updatePrefix = this.random();\n        let cProject = (await views.props.engine.db.getProjectStructure(this.props.uid, this.props.id, false));\n        this.setState({name:pPandT[0][0][this.props.id], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, currentProject: cProject, is_sequential: cProject.is_sequential, parent: cProject.parentProj});\n    }\n\n    componentDidMount() {\n        this.refresh();\n        if (this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    updateName(e) {\n        if (e) {\n            this.props.gruntman.registerScheduler(() => { \n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"project.update__name\", { \n                        uid: this.props.uid, // pass it the things vvv\n                        id: this.props.id, \n                        name: e.target.value\n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `project.this.${this.props.id}-update`) // give it a custom id\n            this.setState({name: e.target.value})\n        } else { console.log(e)}\n    } \n\n    render() {\n        return (\n            <IonPage>\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--page-header-sandwich)\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    {(()=> {\n                                        if (this.state.parent !== \"\")\n                                            return <a className=\"fas fa-chevron-left backbutton\" onClick={()=>{this.props.paginate(\"projects\", this.state.parent);this.props.history.push(`/projects/${this.state.parent}`)}} />\n                                    })()}\n                                    <i style={{paddingRight: 4}} \n                                        className=\"fas fa-tasks\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.name} // TODO: jack this is hecka hacky\n                                        style={{transform: \"transformY(-2px)\"}}\n                                        ref={this.name}\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                                <div className=\"greeting-container\" style={{marginLeft: 5, marginTop: 7}}>\n                                    <a \n                                        onClick={()=> {\n                                            this.setState({is_sequential: !this.state.currentProject.is_sequential}, () => {\n                                                this.props.gruntman.do( // call a gruntman function\n                                                    \"project.update__pstate\", { \n                                                        uid: this.props.uid, // pass it the things vvv\n                                                        id: this.props.id, \n                                                        is_sequential: this.state.is_sequential\n                                                    }\n                                                );\n                                            }); // change the icon\n                                        }} \n                                        data-tip=\"LOCALIZE: Sequencial/Paralellel\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className={this.state.is_sequential ? \"fas fa-arrows-alt-v\":\"fas fa-arrows-alt-h\"}\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 13, transform: this.state.is_sequential ? \"translate(3.5px, -1px)\" : \"translate(0.25px, -1px)\"}}>\n                                        </i>\n                                    </a>\n                                    <a \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        onClick={()=>{\n                                            this.props.gruntman.do( // call a gruntman function\n                                                \"project.delete\", { \n                                                    uid: this.props.uid, // pass it the things vvv\n                                                    pid: this.props.id, \n                                                    parent: (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent\n                                                }\n                                            ).then(()=>{\n                                                this.props.menuRefresh(); // refresh menubar\n                                                this.props.history.push((this.state.parent === \"\" || this.state.parent === undefined) ? \"/upcoming/\" : `/projects/${this.state.parent}`); // go back\n                                                this.props.paginate((this.state.parent === \"\" || this.state.parent === undefined) ? \"upcoming\" : `projects`, (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent);\n                                            }) // call the homebar refresh\n                                        }}\n                                        style={{borderColor: \"var(--task-icon-ring)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-icon-text)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}\n                                        >\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", overflowX: \"hidden\"}}>\n\n                        <SortableProjectList list={this.state.currentProject.children} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]} possibleProjects={this.state.possibleProjects} history={this.props.history} paginate={this.props.paginate} activeTaskRef={this.activeTask} activeTaskID={this.state.activeTask}/>\n\n                        <div style={{marginTop: 10}}>\n                            <a className=\"newbutton\" onClick={()=>{\n                                this.props.gruntman.do( // call a gruntman function\n                                    \"task.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        pid: this.props.id, \n                                    },\n                                    true // bypass updates to manually do it + make it quicker\n                                ).then((result)=>{\n                                    let cProject = this.state.currentProject; // get current project\n                                    let avail = this.state.availability; // get current availibilty\n                                    avail[result.tid] = true; // set the current one to be available, temporarily so that people could write in it\n                                    cProject.children.push({type: \"task\", content:result.tid}); // add our new task\n                                    this.setState({activeTask:result.tid, currentProject: cProject, availability: avail}, () =>  this.activeTask.current._explode() ) // wosh!\n                                }) // call the homebar refresh\n                            }}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>{this.props.localizations.nb_at}</div></div></a>\n                            <a className=\"newbutton\" onClick={async function() {\n                                let npid = (await this.props.gruntman.do( // call a gruntman function\n                                    \"project.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        parent: this.props.id, \n                                    },\n                                )).pid;\n                                this.props.history.push(`/projects/${npid}/do`);\n                            }.bind(this)}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>{this.props.localizations.nb_ap}</div></div></a>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Projects);\n\n","//import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport React, { useState } from 'react';\nimport './FloatingActionButton.css';\nimport * as chrono from 'chrono-node';\nimport {useSpring, animated} from 'react-spring'\n\n\n/*\n * Hello human,\n * You know I'm not Jack because my pen has no nib\n * You know I'm not Huxley because I can't adlib\n * If I said I could do frqnt end, I'd be telling a fib\n * And now, as punishment, I've lost a rib\n * But alas, here is abtib ^-^\n *\n * ~~@Exr0n~~\n * @Ex-rib\n *\n */\n\n\nfunction handleABTIBInput(value) {\n    console.log('abtib reportin to handle input ^-^');\n    console.log(value);\n    // TODO: nlp it\n    // TODO: create the task\n}\n\nfunction ABTIB(props) {\n    const defaultValue = props.localizations.qa_content;\n    const [isExpanded, setisExpanded] = useState(false);\n    const [isSaving, setisSaving] = useState(false);\n\n    const anim = useSpring({\n\tto: \n\t    (isSaving ? \n\t\t{\n\t\t    width: 280, \n\t\t    color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd-success)\"\n\t\t} \n\n\t\t: \n\n\t\t{\n\t\t    width: isExpanded ? 280:250, \n\t\t    color:\"var(--quickadd-text)\", \n\t\t    //color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd)\",\n\t\t    //backgroundColor: \"var(--quickadd-success)\"\n\t\t}\n\t    )\n    })\n\n    return <animated.input \n\t\tid=\"abtib\" \n\t\treadOnly={false} \n\t\ttype=\"text\" \n\t\tdefaultValue={\"\"} \n\t\tstyle={anim} \n\t\tclassName=\"attib\"\n\t\tref={props.reference}\n\n        onFocus={\n            (event) => {\n                event.target.value = \"\";\n                setisExpanded(true);\n            }\n        }\n        onBlur={e=>{\n            setisExpanded(false);\n            setisSaving(false);\n            e.target.value = \"\";\n        }}\n        onKeyUp={\n            (event) => {\n                if (event.key === 'Enter') {\n                    event.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                    setisSaving(true);\n                    let taskName = event.target.value;\n                    let dateInfo = chrono.parse(taskName);\n                    let due = undefined;\n                    let defer = undefined;\n                    if (dateInfo.length > 0) {\n                        // we got a date!\n                        if (dateInfo[0].end) {\n                            // both start (defer) and end (due)\n                            // get end (due) date\n                            due = dateInfo[0].end.date();\n                            defer = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n\n                        }\n                        else {\n                            // only start (due)\n                            due = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n                        }\n                    }\n                    let npobj = { \n                            uid: props.uid, // pass it the things vvv\n                            pid: \"\",\n                            due,\n                            defer,\n                            name: taskName\n                    };\n                    props.gruntman.do( // call a gruntman function\n                        \"task.create\", npobj,\n                    ).then(()=>{\n                        event.target.blur();\n                    });\n                }\n            }\n        }\n        placeholder={ defaultValue + ((Math.random()*128 < 1) ? \" ^-^\" : \"\")}\n     />;\n}\n\nexport default ABTIB;\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport { IonModal, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonSearchbar, IonFooter } from '@ionic/react';\nimport './QuickSwitcher.css'\nimport '../Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\n\n/*\n * I am the quick switcher.\n *\n * With me you switch quickly!\n *\n * but be warned:\n *\n * The code upon which I am built\n *\n * Often sends those who see it\n *\n * Into horror.\n *\n *\n * @enquirer\n */\n\n\n// TODO: subprojects and icon \n\n\nclass QuickSwitcher extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    items: [], // processed items I get passed\n\t    filteredList: [], // my items filtered base upon query \n\t    query: '', // my query! \n\t    direction: true, // should I go back in history, or forward? (for back toggle)\n\t    selected: 0, // what is my selected item index?\n\t    prop_store: '', // store my props so we can check if they have changed \n\t    projs: [],\n\t}\n\tthis.searcher = React.createRef(); // searchbar input ref \n\tthis.currentlySelected = React.createRef(); // selected item ref \n    }\n\n    componentDidUpdate() {\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.processItems() // process the items \n\t}\n    }\n\n    componentDidMount() {\n\tthis.processItems() // when we mount, process the items.\n\tthis.setState({prop_store: this.props}) // set the prop store and the items \n\tthis.getProjs() // get our sub projects \n    }\n\n    async getProjs() { // get our projects \n\tconst subs = (await this.props.engine.db.getProjectsandTags(this.props.uid))[0][0] // hit the cache \n\tconst mod = Object.entries(subs).map(([key, value]) => { // process it \n\t    return ['.' + value, 'projects', key, 'fas fa-tasks']\n\t});\n\tthis.setState({projs: mod}) // and set our state \n    }\n\n    focusRef() { // focus the ref!\n\tif (this.searcher.current) // if the ref exists,\n            this.searcher.current.setFocus(); // focus it \n\tthis.setState({query: '', selected: 0}) // and reset the query \n\tthis.getProjs() // and get our projects\n    }\n\n\n    filterItems(searchTerm) { // filter the items!\n\tlet filteredItems = this.state.items.filter(item => {\n\t    return item[0].toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n\t});\n\treturn filteredItems\n    }\n\n    processItems() { // process our items!\n\t// name, url prefix, id\n\tthis.setState({items: \n\t    [\n\t\t[':upcoming', 'upcoming', '', 'fas fa-chevron-circle-right'], // set the first item to upcoming \n\t\t// (i could do + but i think thats less efficent \n\t\t[':completed', 'completed', '', 'fas fa-check-circle'], // set the second item to completed\n\t\t[':calendar', 'calendar', '', 'fas fa-calendar-alt'], // set the third item to calendar\n\t\t...this.props.items[0].map(o => ['!'+o.name, 'perspectives', o.id, 'fas fa-layer-group']), // map the perspectives\n\t\t...this.state.projs // the projects! \n\t    ],\n\t    prop_store: this.props //  and update the props \n\t})\n    }\n\n    handleKeydown(e) { // handle the keydown... avert your eyes\n\tconst keyname = e.key; // store the keyname\n\tif (keyname == \"Enter\") { // if we submit, \n\t    let selectedItem = this.filterItems(this.state.query)[this.state.selected] // store the selected item\n\t    // TODO: jack make the sidebar styling work \n\t    // if we are selectiong the first item and we have no query, \n\t    if ((!selectedItem || !this.state.query) && this.state.selected == 0) {  \n\t\tif (this.state.direction && this.props.history.length > 2) { // check our direction, \n\t\t    this.props.history.goBack() // then navigate back accordingly. \n\t\t} \n\t\telse if (this.props.history.length > 2) { this.props.history.goForward() }\n\t\tthis.setState({direction: !this.state.direction}) // and flip the direction \n\n\t    } else {\n\t\tconst slicedSelectedItem = selectedItem.slice(1) // store the sliced item!\n\t\tthis.props.history.push(`/${selectedItem[1]}/${selectedItem[2]}`) // push to the history\n\t\tthis.props.paginate(...slicedSelectedItem); // paginate-ify it!\n\t\tthis.props.updateIdx(slicedSelectedItem) // make our homebar keybinds work by giving it the index\n\t    }\n\t    this.props.dismiss() // dismiss the modal\n\t} else { // if we havent pressed submit, \n\t    const idx = this.state.selected // store the index \n\t    const len = this.filterItems(this.state.query).length-1 // and the filtered items cus react lifecyle bd \n\t    if (keyname == \"ArrowUp\" || (e.ctrlKey && keyname == \"p\")) { // if we are navigating up, \n\t\tif (idx > 0) { // and we selecting something greater than the first element, \n\t\t    this.setState({selected: idx-1}) // subtract from our index \n\t\t} else { this.setState({selected: len})} // if we are selection the first element, wrap to the last\n\t\tif (this.currentlySelected) {this.currentlySelected.current.scrollIntoView({ // and scroll it into view \n\t\t    behavior: \"smooth\", // make it smooooth \n\t\t    block: \"end\" // make it not get covered by the searchbar \n\t\t})}\n\t    } else if (keyname == \"ArrowDown\" || (e.ctrlKey && keyname == \"n\")) { // if we are scrolling down, \n\t\tif (idx == len) { // handle wrapping \n\t\t    this.setState({selected: 0})\n\t\t} else { this.setState({selected: idx+1}) } \n\t\tif (this.currentlySelected) {this.currentlySelected.current.scrollIntoView({\n\t\t    behavior: \"smooth\", // smooooooooooth\n\t\t    block: \"start\", // make it work better. their might be a better option for this \n\t\t})}\n\t    }\n\t}\n    }\n\n\n    render() { \n\treturn (\n\t    <IonModal \n\t\tisOpen={this.props.qs_show}  // are we open? \n\t\tanimated={false} // don't animate the opening. \n\t\tcssClass='qs_modal' // give it a class! \n\t\tautoFocus={true} // this doesnt do anything, but like, wishful thinking? \n\t\tonDidPresent={this.focusRef} // focus our input when we present the modal, and some other stuff\n\t\tonDidDismiss={this.props.dismiss} // set the state toggle when we dismiss the modal\n\t    >\n\t\t<div className='modal-content-wrapper'>\n\t\t    <IonSearchbar \n\t\t\tautoFocus={true} // more wishful thinking?\n\t\t\tref={this.searcher} // give it a ref!\n\t\t\tanimated={true} // idk what this does\n\t\t\tspellcheck={true} // spellcheck\n\t\t\tclassName='search-bar'\n\t\t\t// if we are on the first item and with no query, then add a 'Previous' to the end\n\t\t\tplaceholder={`Let's go to..${(this.state.selected == 0 && this.state.query == '')?\"   |   Previous\" : \"\"}`} // TODO: jack do you like this? \n\t\t\t// when we change, set the query, then set the selected to the first item \n\t\t\tonIonChange={e => this.setState({query: e.detail.value, selected: 0})}\n\t\t\tdebounce={0} // update for every update\n\t\t\tonKeyDown={this.handleKeydown} // call our gross function \n\n\t\t    ////////\n\t\t    // loop through our filtered items, highlight if the index is right\n\t\t    // onclick nav there, on hover set the index and the styling\n\t\t    ////////\n\n\t\t    />\n\t\t    <div className='option-wrapper'> \n\t\t\t{this.filterItems(this.state.query).map((item, i) => {\n\t\t\t    return (\n\t\t\t\t<div \n\t\t\t\t    className=\"option-line\"\n\t\t\t\t    className= {`option-line ${(this.state.selected == i)? 'option-text-hover' : ''}`}\n\t\t\t\t    ref={(this.state.selected == i)? this.currentlySelected : null}\n\t\t\t\t    onMouseEnter={() => {\n\t\t\t\t\tthis.setState({selected: i}); \n\t\t\t\t    }}\n\t\t\t\t    onClick={()=>{\n\t\t\t\t\tthis.props.history.push(`/${item[1]}/${item[2]}`) // push to the history\n\t\t\t\t\tthis.props.paginate(...item.slice(1)); // paginate-ify it!\n\t\t\t\t\tthis.props.dismiss()\n\t\t\t\t    }}\n\n\t\t\t\t>\n\t\t\t\t    <i className={`${item[3]} option-icon`} style={{\n\t\t\t\t    }}></i>\n\t\t\t\t    <p \n\t\t\t\t\tclassName= {`option-text`}\n\t\t\t\t    >{item[0]}</p>\n\t\t\t\t</div>\n\t\t\t\t)\n\n\t\t\t    }\n\t\t\t)}\n\n\t\t    </div> \n\t\t</div>\n\n\t    </IonModal>\n\t) \n    }\n\n}\n\nexport default withRouter(QuickSwitcher);\n\n\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport bindGlobal from 'mousetrap-global-bind';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport QuickSwitcher from './QuickSwitcher'\n\nconst autoBind = require('auto-bind/react');\n\n\nclass Keybinds extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    sidebar_list: [], // what's in the sidebar? \n\t    sidebar_index: 0, // how far down the sidebar are we? \n\t    prop_store: '', // store props so we can check if they have changed \n\t    qs_show: false // is the quick switcher shown? \n\t}\n    }\n\n    // define the bindings! 2d array of keybind and function \n    // TODO TODO: for some reason binding works now, so replace that later? \n    // TODO: expand these keybinds. ie, n/p and up/down arrows\n    bindings = [\n\t[\"alt+1\", ()=>{this.sidebar_switcher(this, 0)}], // nav to upcoming keybind\n\t[\"alt+2\", ()=>{this.sidebar_switcher(this, 1)}], // nav to completed keybind\n\t[\"alt+3\", ()=>{this.sidebar_switcher(this, 2)}], // nav to item 3 keybind\n\t[\"alt+4\", ()=>{this.sidebar_switcher(this, 3)}], // nav to item 4 keybind\n\t[\"alt+5\", ()=>{this.sidebar_switcher(this, 4)}], // nav to item 5 keybind\n\t[\"alt+6\", ()=>{this.sidebar_switcher(this, 5)}], // nav to item 6 keybind\n\t[\"alt+7\", ()=>{this.sidebar_switcher(this, 6)}], // nav to item 7 keybind\n\t[\"alt+8\", ()=>{this.sidebar_switcher(this, 7)}], // nav to item 8 keybind\n\t[\"alt+9\", ()=>{this.sidebar_switcher(this, 8)}], // nav to item 9 keybind\n\t[\"alt+0\", ()=>{this.sidebar_switcher(this, this.state.sidebar_list.length-1)}], // nav to last item keybind\n\t[\"alt+j\", ()=>{this.sidebar_incrimentor(this, 1)}], // nav down keybind \n\t[\"alt+k\", ()=>{this.sidebar_incrimentor(this, -1)}], // nav up keybind \n    [\"command+enter\", ()=>{this.focusElement(this.props.abtib)}], // focus the FAB\n    ]\n\n    globalBindings = [\n\t[\"command+k\", ()=>{this.manageQs(this)}], // toggle quick swithcher keybind \n    ]\n    \n    //TODO: this doesnt work with clicking or like anything else but eh\n\n    sidebar_switcher(that, num){\n\tconst loca = this.state.sidebar_list[num]; // set our location to index in sidebar\n\tthat.props.history.push(`/${loca[0]}/${loca[1]}`) // push to the history\n\tthat.props.paginate(...loca); // paginate-ify it!\n\tthis.setState({sidebar_index: num}) // update the sidebar index \n    }\n\n    sidebar_incrimentor(that, num) {\n\tconst next_loca = this.state.sidebar_list[this.state.sidebar_index+num] // store the variable -- we can delet this. \n\tif (next_loca) { // if its defined, \n\t    this.sidebar_switcher(that, this.state.sidebar_index+num) // go there\n\t    // if it's not defined and it's at the end, \n\t} else if (this.state.sidebar_index == this.state.sidebar_list.length-1) {\n\t    this.sidebar_switcher(that, 0) // wrap around and go back to the beginning \n\t} else { // if it's not defined and not at the end, then it must be at the beginning,\n\t    this.sidebar_switcher(that, this.state.sidebar_list.length-1) // so go to the end \n\t}\n    }\n\n    setSidebarIndex(item) { // manage the quickswitcher sidebar index changing \n\tlet idx\n\tthis.state.sidebar_list.forEach((sidebarItem, i) => { // get passed an item, find the item \n\t    if (this.arraysAreIdentical(sidebarItem, item)) {\n\t\tidx = i\n\t    }\n\t})\n\tthis.setState({sidebar_index: idx})\n    }\n\n    arraysAreIdentical(arr1, arr2){ // helper function cus js bad \n\tfor (let i = 0, len = arr1.length; i < len; i++){\n\t    if (arr1[i] !== arr2[i]){\n\t\treturn false;\n\t    }\n\t}\n\treturn true; \n    }\n\n\n    manageQs(that) {\n\tthis.setState({qs_show: !this.state.qs_show}); \n    }\n\n    focusElement(ref) { // another helper function \n\tif (ref) {\n\t    ref.current.focus()\n\t}\n    }\n\n    componentDidUpdate(){\n\t//TODO: safe-proof(?) this\n\t// update the props\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.setState({\n\t\tsidebar_list: [\n\t\t    ['upcoming', ''], // set the first item to upcoming \n\t\t    // (i could do + but i think thats less efficent \n\t\t    ['completed', ''], // set the second item to completed\n\t\t    ['calendar', ''], // set the third item to calendar\n\t\t    ...this.props.perspectives.map(o => ['perspectives', o.id]), // map the perspectives\n\t\t    ...this.props.projects.map(o => ['projects', o.id]) // and the projects \n\t\t], \n\t\tprop_store: this.props //  and update the props \n\t    })\n\t}\n\n\t// TODO: get the current url and set the index that way \n\t//if (!this.state.sidebar_index) {\n\t//    this.setState({sidebar_index: side\n\n\t//}\n    }\n\n    // loop through and bind all our things!\n    componentDidMount() {\n\tthis.setState({prop_store: this.props})\n\n        this.bindings.map(combo => {\n\t\tMousetrap.bind(...combo)\n        })\n\n\tthis.globalBindings.map(combo => {\n\t\tMousetrap.bindGlobal(...combo)\n\t})\n    }\n\n    // loop through and unbind all our things!\n    componentWillUnmount() { \n        this.bindings.map(combo => {\n            Mousetrap.unbind(...combo)\n        })\n    }\n\n    render() { \n\treturn (\n\t    <QuickSwitcher \n\t\tqs_show={this.state.qs_show} \n\t\tdismiss={()=> this.setState({qs_show: false})}\n\t\titems={[this.props.perspectives]}\n\t\tpaginate={this.props.paginate}\n\t\tupdateIdx={this.setSidebarIndex}\n\t\tengine={this.props.engine} \n\t\tuid={this.props.uid} \n\t\tgruntman={this.props.gruntman} \n\n\n\t    /> \n\t)\n    }\n\n}\n\nexport default withRouter(Keybinds);\n\n\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t429,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t430,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t431,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t432,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t433,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t434,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t435,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t436,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t437,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t438,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t439,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t440,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t441,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t442,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t443,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t444,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t445,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t446,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t447,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t448,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t449,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t450,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t451,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t452,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t453,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t454,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t455,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t456,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t457,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t458,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t459,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t460,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t461,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t462,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t463,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t464,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t465,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t466,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t467,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t468,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t469,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t470,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t471,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 216;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t475,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 218;\nmodule.exports = webpackAsyncContext;","import dbManager from \"./DBManager\"\nlet cRef = dbManager.cRef;\n\nconst util = {\n    select: {\n        compare: (lhs, cmp, rhs) => {\n            switch (cmp) {\n                case \"<\":\n                    return lhs < rhs;\n                case \">\":\n                    return lhs > rhs;\n                case \"<=\":\n                    return lhs <= rhs;\n                case \">=\":\n                    return lhs >= rhs;\n                case \"==\":\n                    return lhs == rhs;\n                case \"!=\":\n                    return lhs != rhs;\n                case \"has\":\n                    return lhs.includes(rhs);\n                case \"!has\":\n                    return !lhs.includes(rhs);\n                default:\n                    throw new TypeError(\"Unkown comparator \" + cmp);\n            }\n        },\n        all: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (!util.select.compare(dat[lhs], cmp, rhs))\n                    return false;\n            return true;\n        },\n        any: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs))\n                    return true;\n            return false;\n        },\n        atLeast: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter >= threshold)\n                        return true;\n                }\n            return false;\n        },\n        atMost: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter > threshold)\n                        return false;\n                }\n            return true;\n        }\n    },\n    debug: {\n        log: (arg) => {\n            console.log(arg);\n            return arg;\n        },\n        trace: (arg) => {\n            console.trace(arg);\n            return arg;\n        }\n    }\n};\n\nasync function getTasks(userID) {\n    return cRef(\"users\", userID, \"tasks\").get()\n    .then(snap => snap.docs\n        .map(doc => doc.id)\n    ).catch(err => {\n        console.error('Error getting documents', err);\n    });\n}\n\nasync function getTasksWithQuery(userID, query) {\n    let taskDocs = await cRef(\"users\", userID, \"tasks\")\n        .get()\n        .then(snap => snap.docs\n            .filter(query)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return taskDocs.map(doc => doc.id);\n}\n\nasync function getInboxTasks(userID) {\n    let inboxDocs = await cRef(\n        \"users\", userID,\n        \"tasks\")\n        //['project', '==', ''],\n        //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(util.select.all(['project', '==', ''], ['isComplete', '==', false]))\n            .sort((a,b) => a.data().order - b.data().order)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return inboxDocs.map(doc => doc.id);\n}\n\nasync function getDSTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(dsTime.getHours() + 24);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function dueTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(23,59,59,999);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function selectTasksInRange(userID, min=(new Date(1900, 1, 1)), max=(new Date(2100, 1, 1)), returnFull=false) {\n/*    let maxT = max;*/\n    //let minT = min;\n    //maxT.setHours(23, 59, 59, 999);\n    /*minT.setHours(0, 0, 0, 0);*/\n    let tasks = await cRef(\"users\", userID, \"tasks\")\n                    .get()\n                    .then(snap => snap.docs\n                        .filter(doc =>\n                            (doc.data().due ?\n                                (doc.data().defer ?\n                                    (new Date(doc.data().due.seconds*1000)) <= max && (new Date(doc.data().due.seconds*1000)) >= min && (new Date() >= (new Date(doc.data().defer.seconds*1000)))\n                                : false) \n                                : false)\n                        )\n                        .filter(doc => !doc.data().isComplete)\n                        .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n                    ).catch(console.error);\n    return returnFull ? tasks.map(doc => [doc.id, doc.data()]):tasks.map(doc => doc.id);\n}\n\nasync function getDSRow(userID, avaliable) {\n    console.warn(\"DEPERCATED: use instead selectTasksInRange\");\n    let ibt = await getInboxTasks(userID);\n    let d = new Date();\n    let dsTasks = [];\n    let prev = [];\n    for (let i=0; i<=7; i++) {\n        let content = (await dueTasks(userID, avaliable, d))\n        let cache = content;\n        dsTasks.push(content.filter(x => !prev.includes(x)));\n        prev = cache;\n        d.setDate(d.getDate() + 1)\n    }\n    return dsTasks.map(dst => dst.filter(x => ibt.indexOf(x) < 0));\n}\n\nasync function getInboxandDS(userID, avalibility) {\n    let ibt = await getInboxTasks(userID);\n    let dst = await getDSTasks(userID, avalibility);\n    let dstWithoutIbt = dst.filter(x => ibt.indexOf(x) < 0);\n    return [ibt, dstWithoutIbt]\n}\n\nasync function getTaskInformation(userID, taskID) {\n    let dat = (await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs\n            .filter(doc => doc.id === taskID))\n    )[0]\n    if (dat) return dat.data();\n}\n\nasync function removeParamFromTask(userID, taskID, paramName) {\n    let ti = await getTaskInformation(userID, taskID);\n    delete ti[paramName];\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .set(ti)\n        .catch(console.error);\n}\n\nasync function getTopLevelProjects(userID) {\n    let projectIdByName = {};\n    let projectNameById = {};\n    let projectsSorted = []; \n\n    let snap = (await cRef('users', userID, \"projects\")\n        .get());\n\n    snap.docs.forEach(proj => {\n        if (proj.exists && proj.data().top_level === true) {\n            projectNameById[proj.id] = proj.data().name;\n            projectIdByName[proj.data().name] = proj.id;\n            let projElem = {};\n            projElem.id = proj.id;\n            projElem.name = proj.data().name;\n            projElem.sortOrder = proj.data().order;\n            projectsSorted.push(projElem);\n        }\n    });\n\n    projectsSorted.sort((a,b) => a.sortOrder-b.sortOrder);\n    let ret = [projectNameById, projectIdByName, projectsSorted];\n    return ret;\n}\n\nasync function getTags(userID) {\n    let tags = [];\n\n    await cRef(\"users\", userID, \"tags\").get()\n        .then(snap => snap.docs.forEach( tag => {\n            if (tag.exists) {\n                tags.push(tag.data());\n            }\n        }\n    )).catch(console.error);\n    return tags;\n}\n\nasync function getProjectsandTags(userID) {\n    // NOTE: no longer console.error when  !project/tag.exists\n    let projectIdByName = {};\n    let projectNameById = {};\n    await cRef(\"users\", userID, \"projects\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(proj => {\n            if (proj.exists) {\n                projectNameById[proj.id] = proj.data().name;\n                projectIdByName[proj.data().name] = proj.id;\n            }\n        }))\n        .catch(console.error);\n\n    let tagIdByName = {};\n    let tagNameById = {};\n    await cRef(\"users\", userID, \"tags\").get()\n        .then(snap => snap.docs.forEach(tag => {\n            if (tag.exists) {\n                tagNameById[tag.id] = tag.data().name;\n                tagIdByName[tag.data().name] = tag.id;\n            }\n        }))\n        .catch(console.error);\n\n    return [[projectNameById, projectIdByName], [tagNameById, tagIdByName]];\n}\n\nasync function getPerspectives(userID) {\n    let pInfobyName = {};\n    let pInfobyID = {};\n    let ps = [];\n    await cRef(\"users\", userID, \"perspectives\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(pstp => {\n            if (pstp.exists) {\n                pInfobyID[pstp.id] = {name: pstp.data().name, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                pInfobyName[pstp.data().name] = {id: pstp.id, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                ps.push({id: pstp.id, ...pstp.data()});\n            }\n        }))\n        .catch(console.error);\n\n    ps.sort((a,b) => a.order-b.order);\n\n    return [pInfobyID, pInfobyName, ps];\n}\n\nasync function modifyProject(userID, projectID, updateQuery) {\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyTask(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyPerspective(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"perspectives\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function newTask(userID, taskObj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    if (taskObj.project === \"\") {\n        let ibtL = (await getInboxTasks(userID)).length;\n        taskObj.order = ibtL;\n    } else {\n        let projL = (await getProjectStructure(userID, taskObj.project)).children.length;\n        taskObj.order = projL;\n    }\n\n    // Perspectives cannot have empty defer dates\n    // But! We could set no defer to defer today.\n    if (!taskObj.defer)\n        taskObj.defer = new Date();\n\n    let taskID = (await cRef(\"users\", userID, \"tasks\").add(taskObj)).id;\n\n    return taskID;\n}\n\nasync function newProject(userID, projObj, parentProj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    let projL;\n    // Util func to get size of ob\n    Object.size = function(obj) {\n        var size = 0, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) size++;\n        }\n        return size;\n    };\n\n    if (parentProj) {\n        projL = (await getProjectStructure(userID, parentProj)).children.length;\n        projObj.parent = parentProj;\n    } else {\n        projL = Object.size((await getTopLevelProjects(userID))[0]);\n        projObj.parent = \"\";\n    }\n    projObj.order = projL;\n    projObj.children = {};\n\n    let pid = (await cRef(\"users\", userID, \"projects\").add(projObj)).id;\n    return pid;\n}\n\nasync function newPerspective(userID, pstObj) {\n    return (await cRef(\"users\", userID, \"perspectives\").add({order: (await getPerspectives(userID))[2].length, ...pstObj})).id;\n}\n\nasync function newTag(userID, tagName) {\n    return (await cRef(\"users\", userID, \"tags\").add({name: tagName})).id;\n}\n\nasync function completeTask(userID, taskID) {\n    await cRef(\"users\", userID, \"tasks\", taskID).update({\n        isComplete: true\n    });\n}\n\nasync function dissociateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[taskID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[taskID] = \"task\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[assosProjID] = \"project\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function dissociateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[assosProjID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function deleteTask(userID, taskID, willDissociateTask = true) {\n    let taskData = await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs.filter(doc => doc.id === taskID)[0].data()); // Fetch task data\n\n    if (taskData.project!== \"\" && willDissociateTask) {\n        await dissociateTask(userID, taskID, taskData.project);\n    }\n    await cRef(\"users\", userID, \"tasks\", taskID).delete()\n        .catch(console.error);\n}\n\nasync function deletePerspective(userID, perspectiveID) {\n    await cRef(\"users\", userID, \"perspectives\", perspectiveID).delete();\n}\n\nasync function deleteProject(userID, projectID) {\n    let struct = await getProjectStructure(userID, projectID)\n    for (let i of struct.children) {\n        if (i.type === \"project\") deleteProject(userID, i.content.id)\n        else modifyTask(userID, i.content, {project:\"\"});\n    }\n   \n    let cpLtTasks = await getCompletedTasks(userID);\n    const cpLt = [].concat(...cpLtTasks);\n    for (let t of cpLt)\n        if ((await getTaskInformation(userID, t)).project === projectID)\n            modifyTask(userID, t, {project:\"\"});\n\n    await cRef(\"users\", userID, \"projects\", projectID).delete()\n        .catch(console.error);\n}\n\nasync function deleteTag(userID, tagID) {\n    await cRef(\"users\", userID, \"tags\", tagID).delete()\n        .catch(console.error);\n}\n\nasync function getProjectStructure(userID, projectID, recursive=false) {\n    let children = [];\n\n    // absurdly hitting the cache with a very broad query so that the\n    // cache will catch all projects and only hit the db once\n\n    let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n    if (!project) {\n        return { id: projectID, children: [], is_sequential: false, sortOrder: 0, parentProj: 0};\n    }\n    for (let [itemID, type] of Object.entries(project.data().children)) {\n        if (type === \"task\") {  // TODO: combine if statements\n            let task = await getTaskInformation(userID, itemID);\n            if(task){\n                if (!task.isComplete) {\n                    children.push({type: \"task\", content: itemID, sortOrder: task.order});\n                }\n            }\n           \n        } else if (type === \"project\") {\n            if (recursive) {\n                let project = await getProjectStructure(userID, itemID);\n                if(project) children.push({type: \"project\", content: project, is_sequential: project.is_sequential, sortOrder: project.sortOrder}); \n            } else {\n                let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === itemID)[0];\n                if(project) children.push({type: \"project\", content: {id: itemID}, is_sequential: project.data().is_sequential, sortOrder: project.data().order}); \n            }\n        }\n    }\n    children.sort((a,b) => a.sortOrder-b.sortOrder); //  sort by ascending order of order, TODO: we should prob use https://firebase.google.com/docs/reference/js/firebase.firestore.Query#order-by\n    return { id: projectID, children: children, is_sequential: project.data().is_sequential, sortOrder: project.data().order, parentProj: project.data().parent};\n}\n\nasync function getItemAvailability(userID) {\n    let t = new Date();\n    let tlps = (await getTopLevelProjects(userID))[2];\n    let blockstatus = {};\n    let timea = new Date();\n    async function recursivelyGetBlocks(userID, projectID) {\n        let bstat = {};\n        let project = (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n        let projStruct = (await getProjectStructure(userID, projectID));\n        if (project.data().is_sequential) {\n            let child = projStruct.children[0];\n            if (child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }\n        } else {\n            let children = projStruct.children;\n            await Promise.all(children.map(async function(child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }));\n        }\n        return bstat;\n    };\n    await Promise.all(tlps.map(async function(p) {\n        blockstatus[p.id] = true;\n        let blocks = await recursivelyGetBlocks(userID, p.id);\n        Object.assign(blockstatus, blocks);\n    }));\n    await (await getInboxTasks(userID)).forEach((id) => blockstatus[id] = true);\n    return blockstatus;\n}\n\nasync function getCompletedTasks(userID) {\n    let completedTasks = await getTasksWithQuery(userID, util.select.all([\"isComplete\", \"==\", true]));\n    let taskItems = {};\n    await Promise.all(completedTasks.map(async function(tsk){\n        taskItems[tsk] = await getTaskInformation(userID, tsk);\n    }));\n    const cpSorted = completedTasks.sort(function(b,a) {\n        let taskA = taskItems[a];\n        let taskB = taskItems[b];\n        if (!taskA || !taskB) {\n            return 1;\n        }\n        return ((\n            (taskA.completeDate) ?\n                (taskA.completeDate.seconds) :\n                1\n        )-(\n            (taskB.completeDate) ?\n                (taskB).completeDate.seconds :\n                1\n        ));\n    });\n    let today = new Date();\n    let yesterday = new Date();\n    let thisWeek = new Date();\n    let thisMonth = new Date();\n    today.setHours(0,0,0,0);\n    yesterday.setDate(yesterday.getDate()-1);\n    yesterday.setHours(0,0,0,0);\n    thisWeek.setDate(thisWeek.getDate()-7);\n    thisWeek.setHours(0,0,0,0);\n    thisMonth.setMonth(thisMonth.getMonth()-1);\n    thisMonth.setHours(0,0,0,0);\n    let tasksToday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= today : false;\n    });\n    let tasksYesterday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= yesterday && new Date(tsks.completeDate.seconds * 1000) < today : false;\n    });\n    let tasksWeek = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisWeek && new Date(tsks.completeDate.seconds * 1000) < yesterday : false;\n    });\n    let tasksMonth = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisMonth && new Date(tsks.completeDate.seconds * 1000) < thisWeek : false;\n    });\n    let evenBefore = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) < thisMonth : true;\n    });\n    //console.log(tasksYesterday);\n    //console.log(tasksWeek);\n    //console.log(tasksMonth);\n    /*console.log(evenBefore);*/\n    return [tasksToday, tasksYesterday, tasksWeek, tasksMonth, evenBefore];\n}\n\nasync function onBoard(userID, tz, username, payload) {\n    // Inbox, in reverse cronological order\n    await newTask(userID, {\n            name: payload[0] + ` ${username}, ` + payload[1],\n            desc: payload[2],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[3],\n            desc: payload[4],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[5],\n            desc: payload[6],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n\n    let cdyrslf = await newProject(userID, {name: payload[7], top_level: true, is_sequential: false});\n    let npd = await newProject(userID, {name: payload[8], top_level: true, is_sequential: false});\n    let od = new Date();\n    let ds = new Date();\n    od.setHours(od.getHours() - 24);\n    ds.setHours(ds.getHours() + 20);\n    let odid = await newTask(userID, {\n            name: payload[9],\n            desc: payload[10],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: od,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let dsID = await newTask(userID, {\n            name: payload[11],\n            desc: payload[12],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: ds,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, odid, npd);\n    await associateTask(userID, dsID, npd);\n    ds.setHours(ds.getHours() + 2);\n    let checkoutID = await newTask(userID, {\n            name: payload[13],\n            desc: payload[14],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let nice = await newTask(userID, {\n            name: payload[15],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, nice, cdyrslf);\n    let sequential = await newTask(userID, {\n            name: payload[16],\n            desc: payload[17],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sequential, cdyrslf);\n    let blocked = await newTask(userID, {\n            name: payload[18],\n            desc: payload[19],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, blocked, cdyrslf);\n    let click = await newTask(userID, {\n            name: payload[20],\n            desc: payload[21],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, click, cdyrslf);\n    let pspDir = await newTask(userID, {\n            name: payload[22],\n            desc: payload[23],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, pspDir, cdyrslf);\n    let pspsp = await newProject(userID, {name: payload[24], top_level: true, is_sequential: false});\n    let tags = await Promise.all([newTag(userID, payload[25]), newTag(userID, payload[26]), newTag(userID, payload[27]), newTag(userID, payload[28])]);\n    let specific = await newTask(userID, {\n            name: payload[29],\n            desc: payload[30],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[2], tags[3]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, specific, pspsp);\n    let sp = await newTask(userID, {\n            name: payload[31],\n            desc: payload[32],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[0]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sp, pspsp);\n    await newPerspective(userID, {name: payload[33], query: payload[34]});\n    let promotion = await newProject(userID, {name: payload[35], top_level: true, is_sequential: false});\n    let online = await newTask(userID, {\n            name: payload[36],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, online, promotion);\n    let dis = await newTask(userID, {\n            name: payload[37],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, dis, promotion);\n    let patreon = await newTask(userID, {\n        name: payload[38],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, patreon, promotion);\n    let yiipee = await newTask(userID, {\n        name: payload[39],\n            desc: payload[40],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, yiipee, promotion);\n}\n\nexport default {util, getTasks, getTasksWithQuery, getInboxTasks, getDSTasks, getInboxandDS, removeParamFromTask, getTopLevelProjects, getProjectsandTags, getPerspectives, modifyProject, modifyTask, modifyPerspective, newProject, newPerspective, newTag, newTask, completeTask, dissociateTask, associateTask, associateProject, dissociateProject, deleteTask, deletePerspective, deleteProject, selectTasksInRange, getProjectStructure, getItemAvailability, getTaskInformation, getDSRow, deleteTag, getCompletedTasks, onBoard, getTags};\n\n","import dbObj from \"./ObjectManager\";\n\nconst perspectiveHandler = function(){\n    let cgs = {\n        taskFilter: /([^\\w\\d\\s\\[]{1,2}[\\w\\s]+)/gi,\n        taskCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\]/gi,\n        logicCaptureGroup: /(.*) *([<=>]) *(.*)/gi,\n        globalCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\](\\$\\w+)* *[<=>]* * *(\\$\\w+)*/gi,\n        clear: function() {\n            this.taskFilter.lastIndex = 0;\n            this.taskCaptureGroup.lastIndex = 0;\n            this.logicCaptureGroup.lastIndex = 0;\n            this.globalCaptureGroup.lastIndex = 0;\n        }\n    };\n\n    let getCaptureGroups = (str) => str.match(cgs.globalCaptureGroup);\n\n    let parseTaskCaptureGroup = (str) => (str.split(\"$\").map(i=>i.trim()));\n\n    let parseSpecialVariables = function(...val) {\n        let vr;\n        switch(val[0]) {\n           case \"today\":\n               vr = new Date();\n               break;\n        }\n        return vr;\n    };\n\n    let compileTask = async function(uid, str, pPaT, additionalFilter) {\n        let queries = additionalFilter ? [additionalFilter] : [];\n        let taskCache = [];\n        let antiCache = [];\n        await Promise.all(str.match(cgs.taskFilter).map(async function(e) {\n            e = e.trim();\n            if (e[0] !== \"!\") {\n                switch (e[0]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(1, e.length)];\n                        queries.push(['project', '==', pid]);\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                taskCache = [...taskCache, ...(await compileTask(uid, str.replace(e.slice(1, e.length), pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', 'has',  pPaT[1][1][e.slice(1, e.length)]]);\n                }\n            } else {\n                switch (e[1]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(2, e.length)];\n                        queries.push(['project', '!=', pid]);\n\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                antiCache = [...antiCache, ...(await compileTask(uid, str.replace(e, \".\"+pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', '!has',  pPaT[1][1][e.slice(2, e.length)]]);\n                }\n            }\n            queries.push(['isComplete', '==', false]);\n        }));\n        return [...taskCache, ...(await dbObj.getTasksWithQuery(uid, dbObj.util.select.all(...queries)))].filter(i=>(!antiCache.includes(i)));\n    };\n\n    let compileLogicCaptureGroup = async function(uid, tasks, cmp, value, ltr) {\n        let taskInfo = await Promise.all(tasks[0].map(async function(t){\n            return [await dbObj.getTaskInformation(uid, t), t];\n        }));\n        let taskCompValues;\n        // TODO: add more?\n        if (tasks[1].includes(\"due\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].due ? new Date((t[0].due.seconds)*1000) : undefined)]);\n        } else if (tasks[1].includes(\"defer\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].defer ? new Date((t[0].defer.seconds)*1000) : undefined)]);\n        }\n        let filteredResults;\n        let util_datesequal = function(dateA, dateB) {\n            return dateA.getFullYear() === dateB.getFullYear() && dateA.getMonth() === dateB.getMonth() && dateA.getDate() === dateB.getDate();\n        };\n        switch (cmp) {\n            case \"=\":\n                taskCompValues = taskCompValues.filter(t=>util_datesequal(t[1], value));\n                break;\n            case \">\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] > value) : taskCompValues = taskCompValues.filter(t => t[1] < value);\n                break;\n            case \"<\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] < value) : taskCompValues = taskCompValues.filter(t => t[1] > value);\n                break;\n            case \">=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] >= value) : taskCompValues = taskCompValues.filter(t => t[1] <= value);\n                break;\n            case \"<=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] <= value) : taskCompValues = taskCompValues.filter(t => t[1] >= value);\n                break;\n\n        }\n        return (taskCompValues.map(t => t[0]));\n    };\n\n    let getPerspectiveFromString = async function(uid, pStr, filter, order) {\n        let pPaT = await dbObj.getProjectsandTags(uid);\n        let pRes = await getCaptureGroups(pStr);\n        if (!pRes) {\n            return [];\n        }\n        let fquery; \n        switch (filter) {\n            case \"avail\":\n                fquery = [\"defer\", \"<\", ((new Date()).getTime())/1000];\n                break;\n            case \"flagged\":\n                fquery = [\"isFlagged\", \"==\", true];\n                break;\n        }\n        let tasks = await Promise.all(pRes.map(async function(i) {\n            cgs.clear();\n            let logicSort = cgs.logicCaptureGroup.exec(i);\n            let t;\n            if(logicSort) {\n                // handle logic group\n                let [, lhs, cmp, rhs] = logicSort;\n                [lhs, rhs] = [parseTaskCaptureGroup(lhs), parseTaskCaptureGroup(rhs)];\n                if (cgs.taskCaptureGroup.test(lhs)) {\n                    lhs = [await compileTask(uid, lhs[0], pPaT, fquery), lhs[1]];\n                    rhs = parseSpecialVariables(rhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, lhs, cmp, rhs, true)); // true (that is, left to right order)\n                } else {\n                    rhs = [await compileTask(uid, rhs[0], pPaT, fquery), rhs[1]];\n                    lhs = parseSpecialVariables(lhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, rhs, cmp, lhs, false)); // false (that is, right to left order)\n                }\n            } else {\n                // handle standard group\n                t = (await compileTask(uid, i, pPaT, fquery));\n            }\n            return t;\n        }));\n        tasks = [...new Set(tasks.flat(1))];\n        let taskObjs = await Promise.all(tasks.map(async function(t){\n            return {id: t, ...(await dbObj.getTaskInformation(uid, t))}\n        })).then(values=>values);\n        switch (order) {\n            case \"duas\":\n                taskObjs.sort((a,b)=>(a.due?a.due.seconds:10000000000)-(b.due?b.due.seconds:10000000000));\n                break;\n            case \"duds\":\n                taskObjs.sort((a,b)=>(b.due?b.due.seconds:1)-(a.due?a.due.seconds:1));\n                break;\n            case \"deas\":\n                taskObjs.sort((a,b)=>(a.defer?a.defer.seconds:10000000000)-(b.defer?b.defer.seconds:10000000000));\n                break;\n            case \"deds\":\n                taskObjs.sort((a,b)=>(b.defer?b.defer.seconds:1)-(a.defer?a.defer.seconds:1));\n                break;\n\n        }\n        // Final availability filter for sequential\n        let aval = await dbObj.getItemAvailability(uid);\n        if (filter === \"avail\") taskObjs = taskObjs.filter(it => (aval[it.id] !== undefined)); \n        return taskObjs.map(t=>t.id);\n    };\n\n    return {calc: getPerspectiveFromString};\n}();\n\nexport default perspectiveHandler;\n\n","import dbFuncs from \"./src/ObjectManager\"\nimport pspObj from \"./src/PerspectiveManager\"\nimport dbRefObj from \"./src/DBManager\"\n\n\nexport default {start:dbRefObj.__init__, use:dbRefObj.useDb, db: dbFuncs, perspective: pspObj, flush: dbRefObj.flush};\n\n","import { Plugins } from '@capacitor/core';\nimport { getPlatforms } from '@ionic/react';\n\nconst { parseFromTimeZone } = require('date-fns-timezone')\n\nconst { LocalNotifications, Permissions } = Plugins;\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\nclass Gruntman {\n\n    /*\n     * Hello human,\n     * good afternoon.\n     * I am gruntman.\n     *\n     * Register refreshers with me\n     * so I could handle refreshes.\n     *\n     * Do actions with me\n     * so I could reverse them.\n     *\n     * Undo happens from me\n     * refresh happens from me.\n     *\n     *\n     * @jemoka\n     *\n     */\n\n    constructor(engine) {\n        this.notifPermissionGranted = false;\n        Permissions.query({name: \"notifications\"}).then((async function (e) {\n            if (e.state === \"prompt\")\n                this.notifPermissionGranted = (await LocalNotifications.requestPermission()).granted;\n            else if (e.state === \"granted\")\n                this.notifPermissionGranted = true;\n\n            let platforms = getPlatforms();\n            if (this.notifPermissionGranted && !platforms.includes(\"mobileweb\") && !platforms.includes(\"desktop\")) {\n                // notification specific setup\n                //\n                // TODO TODO TODO TODO TODO TODO TODO TODO\n                //\n\n                //LocalNotifications.registerActionTypes({types: [{id: \"completeOrSnooze\", actions: [{id:\"complete\", title: \"LOCALIZE: Complete\", requiresAuthentication: \"true\", foreground: \"false\"}, {id:\"snooze\", title: \"LOCALIZE: Snooze\", requiresAuthentication: \"true\", foreground: \"false\"}]}]});\n            }\n            LocalNotifications.addListener(\"localNotificationActionPerformed\", this.handleNotificationAction);\n        }).bind(this));\n\n        this.hashCode = s => Math.abs(s.split('').reduce((a,b)=>{a=((a<<5)-a)+b.charCodeAt(0);return a&a},0));\n\n        this.e = engine;\n        this.refresher = ()=>{};\n        this.callbackRefresherReleased = true; // prevent live callback merge conflicts\n        this.conflictResolution = 1000; // 1000 ms = 1s worth of conflict time.\n        this.releaseTimeout = undefined;\n\n        this.doers = {\n            macro: {\n                applyOrder: async function (options) {\n                    // TODO undo handler?\n                    if (options.items.length !== options.order.length) \n                        console.error(\"Length of items and order length must be the same!\")\n                    await Promise.all(options.order.map((e,i) => {\n                        let item = options.items[e];\n                        if (item.type === \"task\") \n                            return engine.db.modifyTask(options.uid, item.content, {order: i});\n                        else if (item.type === \"project\")\n                            return engine.db.modifyProject(options.uid, item.content, {order: i});\n                            //await engine.db.modifyProject(options.uid, e.content, {order: options.order[i]});\n                    }));\n                    return {uid:options.uid}; // TODO HANDLE UNDO\n                }\n            },\n            tag: {\n                create: async function (options) {\n                    let newTag = await engine.db.newTag(options.uid, options.name);\n                    return {uid: options.uid, id: newTag};\n                }\n            },\n            task: {\n                create: async function (options) {\n                    let ntObject = {\n                        desc: \"\",\n                        isFlagged: false,\n                        isFloating: false,\n                        isComplete: false,\n                        project: options.pid?options.pid:\"\",\n                        tags: [],\n                        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n                        repeat: {rule: \"none\"},\n                        name: options.name?options.name:\"\",\n                    };\n\n                    if (options.due)\n                        ntObject.due = options.due\n                    if (options.defer)\n                        ntObject.defer = options.defer\n\n                    let ntID = await engine.db.newTask(options.uid, ntObject)\n\n                    if (options.pid && options.pid != \"\")\n                        engine.db.associateTask(options.uid, ntID, options.pid);\n\n                    return {uid: options.uid, tid: ntID};\n                },\n                update: async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, options.query)\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__project:  async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {project: options.project})\n\n                    if (options.oldProject)\n                        await engine.db.dissociateTask(options.uid, options.tid, options.oldProject);\n\n                    if (options.project !== \"\")\n                        await engine.db.associateTask(options.uid, options.tid, options.project);\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__uncomplete: async function (options) {\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: false, completeDate: new Date()});\n                    return {uid: options.uid, tid: options.tid, taskInfo};\n                },\n                update__complete: async function (options) {\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: true, completeDate: new Date()})\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    let due = (\n                        taskInfo.due ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.due.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.due.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ):\n                        undefined\n                    );\n                    let defer = (\n                        taskInfo.defer ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.defer.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.defer.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ): undefined\n                    );\n                    let repeat = taskInfo.repeat;\n                    if (repeat.rule !== \"none\" && due) {\n                        let rRule = repeat.rule;\n                        if (rRule === \"daily\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        } else if (rRule === \"weekly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let current = \"\";\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                    defer.setDate(defer.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let current = \"\";\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"monthly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let dow = due.getDate();\n                                let oDow = due.getDate();\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let dow = due.getDate();\n                                    let oDow = due.getDate();\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"yearly\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        }\n                    }\n                    return {message: \"Todo TODO TODO Todo: undo pack?\"}\n                }\n            },\n            project: {\n                create: async function (options) { // create project\n                    let projObj = {\n                        name: \"\",\n                        top_level: options.parent === undefined,\n                        is_sequential: false,\n                    };\n                    let npid = options.parent ? await engine.db.newProject(options.uid, projObj, options.parent) : await engine.db.newProject(options.uid, projObj) // make a project... with or without a parent\n                    if (options.parent) {\n                        engine.db.associateProject(options.uid, npid, options.parent);\n                    }// associate the two\n                    return {uid: options.uid, pid: npid}\n                },\n                delete: async function (options) {\n                    await engine.db.deleteProject(options.uid, options.pid);\n                    if (options.parent)\n                        engine.db.dissociateProject(options.uid, options.pid, options.parent);\n\n                    return {uid: options.uid, TODO: \"TODO\"} // TODO: how do we undelete a project?\n                },\n                update__name: async function (options) { // update the project name!\n                    let possibleProjects = await engine.db.getProjectsandTags(options.uid);\n                    // get all possible project\n                    let projectName = possibleProjects[0][0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {name: options.name});\n                    // return what we need to undo\n                    return {projectName, uid: options.uid}\n                },\n                update__pstate: async function (options) { // update the project name!\n                    let currentProject = await engine.db.getProjectStructure(options.uid, options.id, false); // get current project info\n                    // get all possible project\n                    let is_sequential = currentProject;\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {is_sequential: options.is_sequential});\n                    // return what we need to undo\n                    return {is_sequential, uid: options.uid}\n                },\n                associate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.associateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                },\n                dissociate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.dissociateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                }\n            },\n            perspective: {\n                create: async function(options) {\n                    let pObj = {\n                        name: \"\",\n                        avail: \"remain\",\n                        tord: \"duds\",\n                        query: \"\"\n                    }\n                    let npspid = await engine.db.newPerspective(options.uid, pObj);\n                    return {uid: options.uid, pid: npspid};\n                },\n                update__perspective: async function (options) { // update the perspective name!\n                    let possiblePerspectives = await engine.db.getPerspectives(options.uid);\n                    // get all possible perspectives\n                    let perspectiveObject = possiblePerspectives[0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the perspective\n                    await engine.db.modifyPerspective(options.uid, options.id, options.payload);\n\n                    // return what we need to undo\n                    return {perspectiveObject, uid: options.uid}\n                },\n\n                delete__perspective: async function (options) { // update the perspective name!\n                    console.log(\"perspective delete gruntman func\")\n                    // TODO: is this it? @jack\n                    await engine.db.deletePerspective(options.uid, options.id);\n                }\n            },\n        } // type:action:functionaction (return resources)\n        this.undoers = {\n            task: {\n                update: \"task.set\"\n            }\n        } // action: string\n        this.backlog = []; // actionID\n        this.undolog = []; // actionID\n        this.taskLog = {\n        } // actionID: [type, resources]\n        this.canUndo = {\n            task: {\n                update: true,\n            }\n        }\n        this.schedulers = {\n        } // util function onChange fixer-upper\n        this.updateLock = false;\n        this.updateInterval = undefined;\n\n        // @core-devs will not approve but I am secretly hiding\n        // a copy of localized strings in gruntman\n        this.secretLocalizedStrings = {};\n\n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    get localizations() {\n        return this.secretLocalizedStrings;\n    }\n\n    set localizations(value) {\n        this.secretLocalizedStrings = value;\n    }\n\n    halt() {\n        for (let key in this.schedulers)\n            clearTimeout(this.schedulers[key])\n        //this.refresher = ()=>{}; TODO TODO may cause memory leaks in _very_ narrow circumstances but uncomming will break project toggles due to refresher mounting too quickly\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    lockUpdates() {\n        this.updateLock = true;\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    unlockUpdates(interval=580) {\n        this.updateLock = false;\n        this.updateInterval = setTimeout(this.refresher, interval);\n    }\n\n    requestRefresh() {\n        if (!this.updateLock && this.callbackRefresherReleased)\n            this.refresher();\n    }\n\n    async scheduleNotification(id, uid, title, desc, time) {\n        return await LocalNotifications.schedule({\n            notifications: [\n                {\n                    title: title,\n                    body: desc,\n                    schedule: { at: time},\n                    sound: null,\n                    id: this.hashCode(id),\n                    attachments: [`${id}`, `${uid}`],\n                    extra: uid,\n                }\n            ]\n        });\n    }\n\n    async handleNotificationAction(action) {\n        let [taskID, userID] = action.notification.attachments;\n        switch (action.actionId) {\n            case \"complete\":\n                // TODO TODO\n                this.do(\"task.update__complete\", { uid: userID, tid: taskID}, true)\n                break;\n            case \"snooze\":\n                // TODO TODO\n                taskID = action.notification.attachments;\n                userID = action.notification.extra;\n                break;\n        }\n    }\n\n    async cancelNotification(id) {\n        return await LocalNotifications.cancel({notifications: [{id:`${this.hashCode(id)}`}]});\n    }\n\n    async checkNotification(id) {\n        let expectedID = this.hashCode(id);\n        let pending = await LocalNotifications.getPending();\n        let needed = pending.notifications.map(e=>e.id).filter(e=>e==expectedID); // two equal signs to ignore type\n        return needed.length > 0;\n    }\n\n    /*\n     * @param refresher: refresher function to refresh what you registered\n     */\n\n    registerRefresher(r) {\n        this.refresher = r;\n        // lock updates every time a new page loads to prevent MeRGE Conflicts\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n    }\n\n    registerScheduler(callback, identifier, wait=500) {\n        if (this.schedulers[identifier])\n            clearTimeout(this.schedulers[identifier]); // clear the timeout\n        this.schedulers[identifier] = setTimeout(callback, wait);\n    }\n\n    async do(actionName, options, bypassUpdates, isUndo, unsafe_FORCE_UPDATES) {\n        /*\n         * @param actionName => action directive like task.edit or project.create\n         * @param options => options\n         *\n         */\n\n        // Lock updates every time cacheRef is called to prevent mErGE ConFLIcTS\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n\n        let actionID = this.random();\n\n        let nodes = actionName.split(\".\");\n\n        let action = this.doers;\n        while (nodes.length > 0) {\n            action = action[nodes.shift()];\n        }\n\n        if (isUndo) this.undolog.push(actionID);\n        else this.backlog.push(actionID);\n\n        let resources = await action(options);\n\n        this.taskLog[actionID] = [actionName, resources];\n\n        if (!this.updateLock && !bypassUpdates)\n            this.refresher();\n\n        if (unsafe_FORCE_UPDATES)\n            this.refresher();\n\n        return await resources;\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n}\n\nexport default Gruntman;\n\n","import React, { Component } from 'react';\nimport { Plugins } from '@capacitor/core';\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\n\nimport $ from \"jquery\";\n\n\nimport './Auth.css';\n\n\nimport '../themefiles/condutiontheme-default.css';\nimport '../themefiles/condutiontheme-default-dark.css';\nimport '../themefiles/condutiontheme-default-light.css';\nimport '../themefiles/condutiontheme-default-adapter.css';\n\n\n\nconst autoBind = require('auto-bind/react');\n\n\nconst { Storage } = Plugins;\n\nclass Auth extends Component {\n    constructor(props) {\n        super(props);\n\n        let greetings = this.props.localizations.greetings_setB;\n\n        /*\n         * mode 0 = login in progress, \n         *      1 = new account in progress,\n         *      2 = recovery in progress, \n         *      3 = email unverified,\n         *      4 = email verified, proceed create\n         *      5 = recovery executed, shepeard them back\n         *\n         */\n\n        this.state = {\n            authMode: 0,\n            showExtra: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        autoBind(this);\n    }\n\n    doLogin() {\n        let view = this;\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            firebase.auth().signInWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).then(function() {\n                if (firebase.auth().currentUser.emailVerified)\n                     view.props.dispatch({service: \"firebase\", operation: \"login\"});\n                else\n                    view.setState({authMode: 3});\n            }).catch(function(error) {\n                    // Handle Errors here.\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log(error);\n                    $(\".auth-upf\").addClass(\"wrong\");\n            });\n        });\n    }\n\n    doCreate() {\n        // TODO: actually create the account\n        let view = this;\n        let problem = false;\n        firebase.auth().createUserWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).catch(function(error) {\n            view.setState({showExtra: true}, ()=>$('#need-verify').html(error.message));\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                firebase.auth().currentUser.sendEmailVerification();\n                firebase.auth().currentUser.updateProfile({displayName: $(\"#name\").val()});\n                view.setState({authMode: 4, showExtra: true});\n            }\n        })\n    }\n\n    dispatchCreate() {\n        firebase.auth().currentUser.reload().then(()=>{;\n            if (firebase.auth().currentUser.emailVerified)\n                this.props.dispatch({service: \"firebase\", operation: \"create\"});\n            else\n                $('#need-verify').html(\"Please double-check that you tapped the verification link in your email.\");\n        });\n    }\n\n    doRecover() {\n        let problem = false;\n        let view = this;\n        firebase.auth().sendPasswordResetEmail($(\"#email\").val()).catch(function(error) {\n            view.setState({showExtra: true});\n            $('#need-verify').html(error.message);\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                view.setState({authMode: 5});\n            }\n        })\n        // TODO: actually recover the account\n    }\n\n    doLocal() {\n        this.props.dispatch({service: \"json\", operation: \"login\"});\n    }\n\n    render() {\n        return (\n            <div id=\"auth-content-wrapper\">\n                <div id=\"auth-left-menu\">\n                    <div className=\"menu-area\" style={{height:\"100%\"}}>\n                        <div className=\"auth-component\"></div>\n                        <div className=\"auth-component\"></div>\n                        <span id=\"auth-image-credit\">Image by <span style={{fontWeight: 500}}>Tobias Keller/Paweł Czerwiński</span></span>\n                    </div>\n                </div>\n                <div id=\"authwall\">\n                    <h1 id=\"greeting-auth\">{this.state.greeting}</h1><span id=\"welcome-auth-msg\">{this.props.localizations.welcome_auth_msg}</span>\n                    <h3 className=\"greeting-auth-subtitle\" id=\"greeting-auth-normal\">{(()=>{\n                        switch (this.state.authMode) {\n                            case 2:\n                                return this.props.localizations.nowirres;\n                            default:\n                                return this.props.localizations.greeting_auth_normal;\n\n                        }\n                    })()}</h3> \n                    <input className=\"auth-upf\" id=\"name\" type=\"text\" autoComplete=\"off\" defaultValue=\"\" placeholder={this.props.localizations.what_should_we} style={{display: this.state.authMode === 1 ? \"block\" : \"none\"}}/>\n                    <input className=\"auth-upf\" id=\"email\" type=\"email\" autoComplete=\"off\" defaultValue=\"\" placeholder={this.props.localizations.email} />\n                    <input className=\"auth-upf\" id=\"password\" type=\"password\" autoComplete=\"off\" defaultValue=\"\" placeholder={this.props.localizations.password} style={{display: this.state.authMode !== 2 ? \"block\" : \"none\"}} onKeyPress={(event)=>{\n                        if (event.key === \"Enter\") {\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                                case 5: \n                                    this.doLogin();\n                                    break;\n                            }\n                        }\n                    }}/>\n                    {(() => {\n                        if (this.state.authMode === 3 || this.state.authMode ===  4 || this.state.authMode === 5 || this.state.showExtra) return <span id=\"need-verify\">\n                            {(()=>{\n                                switch(this.state.authMode){\n                                    case 3:\n                                        return this.props.localizations.need_and_do;\n                                    case 4:\n                                        return this.props.localizations.need_verify;\n                                    case 5:\n                                        return this.props.localizations.need_and_login;\n\n                            }})()}\n                        </span>\n                    })()}\n                    <span id=\"recover-password\" style={{display: this.state.authMode === 3 ? \"none\" : \"block\"}} onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 2});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return this.props.localizations.remembered;\n                                default:\n                                    return this.props.localizations.rec_pswd;\n\n                            }\n                        })()}</span>\n                    <div id=\"auth-actiongroup\">\n                        <div id=\"newuser\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 1});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return this.props.localizations.login;\n                                default:\n                                    return this.props.localizations.newuser;\n\n                            }\n                        })()}</div>\n                        <div id=\"login\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                            }\n                        }}>\n                            <i className=\"fas fa-snowboarding\" style={{paddingRight: \"5px\"}}></i><span id=\"login-text\">{(() => {\n                                switch(this.state.authMode) {\n                                    case 0:\n                                    case 3:\n                                        return this.props.localizations.lds;\n                                    case 1:\n                                        return this.props.localizations.verifem;\n                                    case 2:\n                                        return this.props.localizations.lerec;\n                                    case 4:\n                                        return this.props.localizations.proceed;\n                                    case 5:\n                                        return this.props.localizations.proceed;\n                                }\n                            })()}</span>\n                        </div>\n                        {(() => {\n                            if (this.state.authMode !== 2) return <div className=\"convert-src\" id=\"ulac\" onClick={this.doLocal}>{this.props.localizations.ulac}</div>\n                        })()}\n                    </div>\n                </div>\n            </div>\n      );\n    }\n}\n\nexport default Auth;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\nfunction Loader(props) {\n    return (\n        <div style={{width: \"100%\", height: \"100%\", position: \"absolute\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{marginRight: 20, maxWidth: 500}}>\n                <b>Condution v1.0.0-alpha.0</b> <br />\n\n                    <i>Like, why are you reading this?</i> <br />\n\n                    If there is something here [{props.error}], <br />\n                then talk to Jack or something. Or fix it. <br />\n                    INTERNAL USE ONLY. DO NOT DISTRIBUTE.\n            </div>\n            <div style={{marginLeft: 20, maxWidth: 500}}>\n                <br />\n\n                <pre style={{fontSize: 10}}>\n                    {`\n    Copyright (C) 2019-2020. Shabang Systems, LLC\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see https://www.gnu.org/licenses/.\n                    `}\n                </pre>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Loader;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\nfunction Onboarding(props) {\n    return (\n        <div style={{width: \"100%\", height: \"100%\", position: \"absolute\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", color:\"var(--content-normal-accent)\"}}>\n            <div style={{marginRight: 20, maxWidth: 500}}>\n                <b>Condution v1.0.0-alpha.0</b> <br />\n                <i>ONBOARDING VIEW!! Woo hoo!</i> <br /> \n                <span>Arn't you excited to get an account</span> <br /> \n                <span>at a random todo list app?</span> <br /> \n            </div>\n            <div style={{marginLeft: 20, maxWidth: 500}}>\n                <br />\n\n                <pre style={{fontSize: 10, color:\"var(--content-normal-alt)\"}}>\n                    {`\n    Copyright (C) 2019-2020. Shabang Systems, LLC\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see https://www.gnu.org/licenses/.\n                    `}\n                </pre>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Onboarding;\n\n","/* Global Imports */\nimport React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, IonMenu, setupConfig } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Themefiles */\nimport './themefiles/condutiontheme-default-adapter.css';\nimport './themefiles/condutiontheme-default.css';\nimport './themefiles/condutiontheme-default-dark.css';\nimport './themefiles/condutiontheme-default-light.css';\n//import './themefiles/condutiontheme-default-new.css';\nimport './themefiles/condutiontheme-black-n-red.css';\n\n/* Font awesome */\nimport './static/fa/scripts/all.min.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n/* Capacitor core plugins + jQuery */\nimport { Plugins } from '@capacitor/core';\nimport $ from \"jquery\";\n\n/* Our Lovley Core Engine */\nimport Engine from './backend/CondutionEngine';\nimport Gruntman from './gruntman';\n\n/* Firebase */\nimport * as firebase from \"firebase/app\";\n\n/* Auth and store modules */\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n/* Views that we need */\nimport Auth from './pages/Auth';\nimport Loader from './pages/Loader';\nimport Onboarding from './pages/Onboarding';\nimport Home from './pages/Home';\n\n/* Localization Toolkit */\nimport LocalizedStrings from 'react-localization';\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\n\n/* Storage Plugins */\nconst { Storage } = Plugins;\n\n\n/* \n * Hello human, good morning.\n *\n * Hope you are doing well. Thanks (why are you) visiting App.jsx?\n *\n * I manage global routing, auth handling, and all that jazz.\n * You should not touch me to change the interface.\n * But I guess I change the interface. So.\n *\n * I kind of change the interface?\n *\n * Anyways, I return one of Loader, Auth, or Home depending on auth state.\n *\n * And check for the auth state to determine which one to return\n *\n * It's not really a poem, isn't it.\n *\n * @Jemoka\n *\n */\n\nsetupConfig({ swipeBackEnabled: false, }); // globally disable swipe b/c we implemented our own\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        let localizations = new LocalizedStrings({\n            en: require(\"./static/I18n/en-US.json\"),\n            zh: require(\"./static/I18n/zh-CN.json\"),\n            de: require(\"./static/I18n/de-DE.json\"),\n        });\n\n        // TODO TODO remove this\n        //localizations.setLanguage(\"zh\");\n\n        // We start with setting our state. We don't know our user's UID (duh)\n        this.state = {authMode: \"loader\", uid: \"\", displayName: \"\", localizations};\n        \n        // We also set the theme based on the user's media query\n        if (window.matchMedia('(prefers-color-scheme:dark)').matches) {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-dark\");\n        }\n        else {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-light\");\n        }\n\n        // Make ourselves a nice gruntman\n        this.gruntman = new Gruntman(Engine);\n        this.gruntman.localizations = localizations;\n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    async componentDidMount() {\n        // This IS in fact the view\n        let view = this;\n\n        // Light the fire, kick the tires an instance \n        // of {firebase}, and initializing the firebase \n        // and json engines\n        await Engine.start({firebase}, \"firebase\", \"json\");\n\n\n        // ==Handling cached dispatch==\n        // So, do we have a condution_stotype? \n        Storage.get({key: 'condution_stotype'}).then((dbType) => {\n            switch (dbType.value) {\n                // If its firebase \n                case \"firebase\":\n                    // Check if we actually has a user\n                    firebase.auth().onAuthStateChanged(function(user) {\n                        if (!user)\n                            view.authDispatch({operation:\"logout\"});\n                        // If we have one, shift the engine into firebase mode\n                        else {\n                            Engine.use(\"firebase\", view.gruntman.requestRefresh);\n                            // Load the authenticated state, set authmode as \"firebase\" and supply the UID\n                            view.setState({authMode: \"firebase\", uid: user.uid, displayName: user.displayName});\n                        }\n                    })\n                    break;\n                // If its json\n                case \"json\":\n                    // Shift the engine into json mode\n                    Engine.use(\"json\", view.gruntman.requestRefresh);\n                    // Load the authenticated state, set the authmode as \"json\" and supply \"hard-storage-user\" as UID\n                    this.setState({authMode: \"json\", uid:\"hard-storage-user\"});\n                    break;\n                // If there is nothing, well, set the authmode as \"none\"\n                default:\n                    this.setState({authMode: \"none\", uid:undefined});\n                    break;\n            }\n        });\n    }\n\n    // authDispatch handles the dispatching of auth operations. {login, create, and logout}\n    authDispatch(mode) {\n        // TODO: that's a state machine! @zbuster05\n        let uid;\n        let name;\n        switch (mode.operation) {\n            // operation mode login\n            case \"login\":\n                // shift the engine into whatever mode we just logged into\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                // write the login state into cookies\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                // get the UID\n\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n                // load the authenicated state and supply the UID\n                this.setState({authMode: mode.service, uid, displayName: name});\n                break;\n            // operation mode create\n            case \"create\":\n                // setthe engine as whatever service\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n\n                // Here\n                this.setState({authMode: \"onboarding\", uid, displayName: name});\n                Engine.db.onBoard(uid, Intl.DateTimeFormat().resolvedOptions().timeZone, this.gruntman.localizations.getLanguage()===\"en\" ? \"there\": \"\", this.gruntman.localizations.onboarding_content).then(e=>this.setState({authMode: mode.service, uid, displayName: name}));\n                // TODO: be done with onboarding\n                // Set the storage type and write it into cookies\n                // load the authenicated state and TODO supply the UID\n                break;\n            case \"logout\":\n                // Set the storage type to nada and write it into cookies\n                Storage.set({key: 'condution_stotype', value: \"none\"});\n                // Sign out if we are signed in\n                firebase.auth().signOut();\n                // Load the auth view\n                this.setState({authMode: \"none\", name: \"\"});\n                break;\n        }\n    }\n\n    render() {\n        // Check for onboarding here\n        // then continue\n        // Which authmode?\n        switch (this.state.authMode) {\n            // if we are at the first-paint load mode, do this:\n            case \"loader\":\n                return <Loader />\n            // if we did not authenticate yet, load the auth view:\n            case \"none\":\n                return <Auth dispatch={this.authDispatch} localizations={this.state.localizations}/>;\n            // if we did auth, load it up and get the party going\n            case \"firebase\":\n            case \"json\":\n                return <Home engine={Engine} uid={this.state.uid} dispatch={this.authDispatch} gruntman={this.gruntman} displayName={this.state.displayName} localizations={this.state.localizations}/>;\n            // wut esta this auth mode? load the loader with an error\n            case \"onboarding\":\n                return <Onboarding />\n            default:\n                console.error(`CentralDispatchError: Wut Esta ${this.state.authMode}`);\n                return <Loader isError={true} error={this.state.authMode}/>\n        }\n    }\n}\n\nexport default App;\n//class App extends Component {\n    //render() {\n        //return (\n            //<IonApp>\n                //<Home />\n            //</IonApp>\n        //);\n    //}\n//}\n\n/*export default App;*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\nconst autoBind = require('auto-bind/react');\n\nclass Repeat extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            name: \"\", // task's name\n            rule: \"none\", // the repeat rule\n            advanced: false, // advanced or not\n            on: undefined, // advanced repeat rules\n        }\n    }\n\n    async loadTask() {\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n        this.setState({\n            name: taskInfo.name, // name is name\n            rule: taskInfo.repeat ? taskInfo.repeat.rule : \"none\", // rule is rule, if there's a rule\n            advanced: taskInfo.repeat ? (taskInfo.repeat.on !== undefined) : false, // on is on, if there's a rule\n            on: taskInfo.repeat ? taskInfo.repeat.on : undefined, // on is on, if there's a rule\n        });\n    }\n\n    componentDidMount() {\n        this.loadTask();\n    }\n\n    render() {\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}} cssClass={\"task-repeat \"+(()=>{\n                // Different repeat modes require different height modals\n                 switch (this.state.rule) {\n                      case \"none\":\n                          return \"task-repeat__default\";\n                      case \"daily\":\n                          return \"task-repeat__default\";\n                      case \"weekly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-weekly\" : \"task-repeat__default\");\n                      case \"monthly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-monthly\" : \"task-repeat__default\");\n                      case \"yearly\":\n                          return \"task-repeat__default\";\n                  }\n            })()}>\n                <div>\n                    {/* Header */}\n                    <div className=\"repeat-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\"}}>\n\t\t\t                <b className=\"bold-prefix\" >{this.props.gruntman.localizations.repeat_word}</b> \n\t\t\t                <div className=\"repeat-task-name\">{this.state.name}</div>\n\t\t\t            </span>\n                        {/* Close button */}\n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                    </div>\n                    <div>\n                        <div className=\"repeat-basic-row\">\n                            <div className=\"repeat-rule-selector\">\n                            <span>\n                                <i className=\"repeat-label fa fa-redo\"></i>\n                                <span className=\"repeat-label\">{this.props.gruntman.localizations.repeat_word}</span>\n                            </span>\n                            {/* The big select, force iOS style */}\n                            <IonSelect className=\"repeat-select\" interface=\"popover\" value={this.state.rule} mode=\"ios\" onIonChange={e=>{\n                                    // Set the repeat\n                                    this.props.gruntman.do(\n                                        \"task.update\", \n                                        { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: e.detail.value}}}\n                                    )\n\n                                    // Set the state too!\n                                    this.setState({rule: e.detail.value, advanced: false, on: undefined});\n \n                                }}>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"none\">@NEEDLOC None</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"daily\">{this.props.gruntman.localizations.repeat_every_day}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"weekly\">{this.props.gruntman.localizations.repeat_every_week}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"monthly\">{this.props.gruntman.localizations.repeat_every_month}</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"yearly\">{this.props.gruntman.localizations.repeat_every_year}</IonSelectOption>\n                            </IonSelect>\n                            </div>\n                                {\n                                    \n                                <a style={{color: \"var(--decorative-light-alt)\", float: \"right\", cursor: \"pointer\", display: [\"weekly\", \"monthly\"].includes(this.state.rule) ? \"inline\" : \"none\" }} className={\"fas \" + (this.state.advanced ? \"fa-caret-down\":\"fa-caret-up\")} onClick={()=> {\n                                    if (this.state.advanced) {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule}}}\n                                        ) // undo advanced \n                                        this.setState({rule: this.state.rule, advanced: false, on: undefined}); // set the state too!\n                                    } else {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: []}}}\n                                        ) // do advanced \n                                        this.setState({rule: this.state.rule, advanced: true, on: []}); // set the state too!\n                                    }\n                                }}></a>\n                                }\n                        </div>\n                    </div>\n                    <div style={{margin: \"10px 20px\", color: \"var(--content-normal-alt)\"}}>\n                        {(()=>{\n                            if (this.state.advanced)\n                                switch (this.state.rule) {\n                                    case \"weekly\":\n                                        return (\n                                            <div className=\"repeat-weekgrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {/* [\"originalString\", \"localizedString\"] <= localize in this way */}\n                                                {[[\"M\", this.props.gruntman.localizations.repeat_datework_weekname_m], [\"T\", this.props.gruntman.localizations.repeat_datework_weekname_tu], [\"W\",  this.props.gruntman.localizations.repeat_datework_weekname_w], [\"Th\",  this.props.gruntman.localizations.repeat_datework_weekname_th], [\"F\",  this.props.gruntman.localizations.repeat_datework_weekname_f], [\"S\",  this.props.gruntman.localizations.repeat_datework_weekname_sa], [\"Su\",  this.props.gruntman.localizations.repeat_datework_weekname_su]].map(e => <a key={e} className={\"repeat-weekgrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e[0]) ? \"repeat-weekgrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e[0])) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e[0]);\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e[0]);\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e[1]}</a>)}\n                                            </div>\n                                        )\n                                    case \"monthly\":\n                                        return (\n                                            <div className=\"repeat-dategrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"Last\"].map(e => <a key={e} className={\"repeat-dategrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e.toLowerCase()) ? \"repeat-dategrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e.toLowerCase())) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e.toLowerCase());\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e.toLowerCase());\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e}</a>)}\n                                            </div>\n                                        );\n                                }\n                        })()}\n                    </div>\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default Repeat;\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport './TagEditor.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n/*\n * Although I do not agree\n * Jack told me to make this feat\n * I did not make this carefree\n * yet this is far from elite\n *\n * I resolved to give it a try\n * and encountered this very strange bug\n * This thing makes me want to cry\n * Front-end is far from a drug\n *\n * I may be exageratting\n * Maybe this bug wasn't so bad\n * But still I cannot add padding\n * and it still makes me very sad\n *\n * React may feel like a drug\n * Until you find the next bug\n *\n * by @zbuster05\n * */\n\nconst autoBind = require('auto-bind/react');\n\nclass TagEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tagList: []\n        }\n    }\n\n   async setTagState() {\n        this.state.tagList = await this.props.engine.db.getTags(this.props.uid);\n    }\n   // TODO BADDD \n    componentDidMount() {\n        this.setTagState()\n    }\n\n    tagClicked() {\n        console.log(\"Tag Clicked!\")\n    }\n\n    render() {\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidPresent={() => {this.setTagState()}} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5, border: \"1px solid red\"}} cssClass={\"tag-editor\"}>\n\n                {/*Text Header*/}\n                <div className=\"TagEditor-header\">\n                    <span style={{display: \"inline-flex\", alignItems: \"center\"}}>\n\t\t\t            <b className=\"bold-prefix\" >Tags</b> \n\t\t\t        </span>\n\n                    {/*Close Button*/}\n                    <a className=\"TagEditor-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                </div>\n                \n                {/*Like actual tag setting stuff*/}\n                <div className=\"tag-pane-container\">\n                    <div className=\"tag-list\">\n                        {this.state.tagList.map(tag => {\n                            return (\n                                <div className=\"tag-in-list\" /*onClick={this.tagClicked()}*/>\n                                    <div className=\"tag-name\">\n                                        {tag.name}\n                                    </div>\n                                    <a className=\"TagEditor-close\" /*onClick={console.log(\"x clicked\")}*/><i className=\"fa fa-times\"></i></a>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div className=\"tag-settings\"></div>\n                </div>\n            </IonModal>\n        )\n    }\n}\n\nexport default TagEditor\n","// A whole lotta imports\n\n// Ionic components\nimport { IonItem, IonInput, IonContent, IonGrid, IonRow, IonCol, IonSegment, IonLabel, IonButton, IonPopover } from '@ionic/react';\n\n// Detect whether is mobile\nimport { getPlatforms } from '@ionic/react';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// React Spring animation packages\nimport { Spring, animated, Keyframes } from 'react-spring/renderprops'\n\n// Cool components \nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable';\n\n// Our very own repeat UI\nimport Repeat from './Repeat';\n\n// Our very own tag editor UI\nimport TagEditor from './TagEditor';\n\n// Our very own calendar popover\nimport CalendarPopover from './CalendarPopover';\n\n// Our very own CSS\nimport './Task.css';\n\n// Oooips\nimport ReactTooltip from 'react-tooltip';\n\n// FNS date parcing utils\nconst { parseFromTimeZone } = require('date-fns-timezone')\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\n\n/*\n *\n * Hello human,\n *\n * I am a task.\n *\n * You seriously are reading the help poem about this?\n *\n * @jemoka\n *\n */\n\n\n// Our very own custom animatinos\nconst AnimationFactory = Keyframes.Spring({\n    // Open->close animation\n    hide: {\n        to: {\n            taskHeight:38, \n            taskMargin: \"2px 8px\", \n            taskBackground:\"\", \n            taskPadding: 3,\n            taskEditOpacity: 0,\n            taskEditMaxHeight: 0,\n            taskOpacity: 1,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskDisplay: \"\",\n            taskMaxHeight: 40,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n\n    },\n    // Close->open animation\n    show: {\n        to: {\n            taskHeight:38, \n            taskMargin:\"15px 25px\", \n            taskBackground:\"var(--task-selected)\", \n            taskPadding: 10,\n            taskEditOpacity: 1,\n            taskDisplay: \"\",\n            taskOpacity: 1,\n            taskEditMaxHeight: 300,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskMaxHeight: 500,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n    },\n    // Incomplete->complete animation\n    complete: [\n        {\n            to: {\n                taskMargin: \"14px 8px\", \n                taskNameDecoration: \"line-through\",\n                taskOpacity: 1,\n                taskPosition: \"\",\n            },\n            config: {\n                tension: 200,\n                friction: 25,\n                mass: 1\n            },\n\n        }, \n        {\n            to: {\n                taskMaxHeight: 0,\n                taskHeight:0, \n                taskOpacity: 0,\n                taskMargin: \"0px 8px\", \n                taskPadding: 0,\n                taskPosition: \"absolute\",\n            },\n            config: {\n                tension: 800,\n                friction: 50,\n                mass: 1\n            },\n        }\n    ],\n})\n\n// Aww sheat, here we go\nclass Task extends Component {\n\n    constructor(props) {\n        // Invoke React's constructor\n        super(props);\n\n        // Bind it good!\n        autoBind(this);\n\n        this.state = { \n            expanded: false, // are we expanded?\n            deferDate: undefined, // what's our defer date?\n            dueDate: undefined, // what's our due date?\n            name: \"\", // what's our name string?\n            desc: \"\",  // what's our description string?\n            isFlagged: false, // are we flagged?\n            isFloating: false, // are we floating? or just eating jello?\n            project:\"\", // what's our project ID?\n            tags: [], // what are the IDs of our tags?\n            decoration: \"\",  // are we \"od\" \"ds\" or just just good ol' \"\"?\n            availability: true, // are we avaliable? or are we deferred or blocked (in which case it'd be false.)\n            isComplete: false, // are we completed?\n            showRepeat: false, // is our repeat UI shown?\n            showTagEditor: false, // is our TagEditor UI shown?\n            deferPopoverShown: false, // is the defer calendar popover shown?\n            duePopoverShown: false, // is the due calendar popover shown?\n            startingCompleted: this.props.startingCompleted, // disable immediate onComplete animation for completed\n            possibleTags: this.props.datapack[0], // tags will need to be dynamically added, so\n            haveBeenExpanded: (this.props.startOpen !== undefined && this.props.startOpen !== false), // did we render the edit part yet? optimization\n            notificationPopoverShown: [false, null], // is our notification popover shown?\n            notificationCalendarShown: false, // is the notification calendar shown?\n            hasNotification: false // do we have a notification scheudled?\n        }\n        this.initialRenderDone = false; // wait for data to load to make animation decisions\n        this.me = React.createRef(); // who am I? what am I?\n        this.repeater = React.createRef(); // what's my repeater?\n        this.checkbox = React.createRef(); // what's my pseudocheck\n        this.TagEditorRef = React.createRef(); // what's my tag editor\n        this.actualCheck = React.createRef(); // what's my (actual, non-seen) checkmark\n        this.duePopover = React.createRef(); // what's my due popover?\n        this.deferPopover = React.createRef(); // what's my defer popover?\n        this.notificationPopover = React.createRef(); // what's my notification popover?\n        this.notificationCalender = React.createRef(); // what's my notification calandar?\n    }\n\n    showRepeat() {this.setState({showRepeat: true})} // util func for showing repeat\n    hideRepeat() {this.setState({showRepeat: false})} // util func for hiding repeat\n\n    showTagEditor() {this.setState({showTagEditor: true})} // function for showing tag editor\n    showTageEditor() {this.setState({showTageEditor: false})}  // function for hiding tag editor\n\n    showNotificationPopover(e) {\n        if (this.state.hasNotification)\n            this.setState({notificationPopoverShown: [true, e.nativeEvent]})\n        else \n            this.setState({notificationCalendarShown: true})\n    }\n\n    // Monster function to query task info TODO TODO #cleanmeup\n    async loadTask() {\n\n        // Obviously we need this, the task info\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n\n        // Setting state to update the rest of them elements\n        this.setState({\n            name: taskInfo.name, // Set name field\n            desc: taskInfo.desc, // Set task description\n            project: taskInfo.project,  // Set project ID\n            tags: taskInfo.tags, // Set tag ID array\n            isFloating: taskInfo.isFloating, // Set isFloating bool\n            isFlagged: taskInfo.isFlagged, // Set is Flagged bool\n            isComplete: taskInfo.isComplete, // Set is complete style\n            dueDate: (\n                taskInfo.due ? // If we have a due date\n                (taskInfo.isFloating ? // and if we are floating\n                    new Date(taskInfo.due.seconds*1000) : // then the due date in just... the due date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.due.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ):\n                undefined \n            ), \n            deferDate: (\n                taskInfo.defer ? // If we have a defer date\n                (taskInfo.isFloating ?  // and if we are floating\n                    new Date(taskInfo.defer.seconds*1000) : // then the defer date is just... the defer date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.defer.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ): undefined\n            ),\n            hasNotification: await this.props.gruntman.checkNotification(this.props.tid),\n        });\n        this.refreshDecorations(); // flush and generate them decorations!\n        this.initialRenderDone = true;\n    }\n\n    refreshDecorations() {\n        if (this.state.dueDate) // if we gotta due date\n            if (this.state.dueDate-(new Date()) < 0) // and this kid has not done his homework\n                this.setState({decoration: \"od\"}); // give 'em a red badge\n        else if (this.state.dueDate-(new Date()) < 24*60*60*1000) // or if this kid has not done his homework a day earlier\n            this.setState({decoration: \"ds\"}); // give 'em an orange badge\n        else \n            this.setState({decoration: \"\"}); // give 'em an nothing badge\n\n        if (this.state.deferDate) // if we gotta defer date\n            if (this.state.deferDate-(new Date()) > 0) // and this kid is trying to start early\n                this.setState({availability: false}); // tell 'em it's not avaliable\n        else if (this.props.availability === true) //  otherwise, if this thing's avaliable\n            this.setState({availability: true}); // set it to be so!\n        else if (!this.props.availability) // or if my props make me disabled\n            this.setState({availability: false}); // well then you gotta follow them props, no?\n    }\n\n    componentDidMount() {\n        this.loadTask(); // load the task when we mount   \n        document.addEventListener('mousedown', this.detectOutsideClick, false); // and listen for clicks everywhere\n    }\n\n    componentWillUnmount = () => document.removeEventListener('mousedown', this.detectOutsideClick, false); // remove the listener... no memory leaks plez\n\n    toggleTask = () => this.setState(state => ({expanded: !state.expanded})); // util function to toggl a task\n    \n    closeTask() {\n        this.setState({expanded: false});\n    }\n    //closeTask = () => this.setState({expanded: false}); // util function to close a task\n\n    openTask() {\n        if (this.state.haveBeenExpanded)\n            this.setState({expanded: true});\n        else \n            this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }// util function to open a task\n\n    _explode() {\n        // You should probably be calling openTask()\n        this.initialRenderDone = true;\n        this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }\n\n    detectOutsideClick(e) {\n\n        if (this.me.current) // if we are mounted\n            if (this.me.current.contains(e.target)) // if we are clicking me\n                return; //click inside\n\n        if (this.repeater.current) // if our repeater is a thing that mounted\n            if (this.repeater.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.duePopover.current) // if our due popover is a thing that mounted\n            if (this.duePopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.deferPopover.current) // if our defer popover is a thing that mounted\n            if (this.deferPopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.notificationPopover.current) // if our notification popover is a thing that mounted\n            if (this.notificationPopover.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n\n        if (this.notificationCalender.current) // if our notification calendar is a thing that mounted\n            if (this.notificationCalender.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n        \n        if (this.TagEditorRef.current) // if our repeater is a thing that mounted\n            if (this.TagEditorRef.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n        \n        //if (this.props.envelope) // if we have a drag envelope\n            //if (this.props.envelope.current) // if we have a drag envelope\n                //if (this.props.envelope.current.contains(e.target)) // and we are clicking inside that\n                    {/*return; //click inside*/}\n\n        // DRAG ENVELOPES ARE SUPPOSED TO PROTECT AGAINST DRAGGING, AND ARE UNIVERSAL ACROSS ALL TASKS\n        // UNCOMMENTING THIS WILL MAKE MULTIPLE TASKS OPEN AT ONCE ON UPCOMING\n\n        if (document.getElementById(\"parking-lot\").contains(e.target))\n            return;\n\n        if (this.props.onModal)\n            if (document.getElementById(\"airplane-hanger\").contains(e.target))\n                return;\n\n        if (this.state.showRepeat) // if we are showing our repeat\n            return; //click inside\n\n        if (this.state.showTagEditor) // if we are showing TagEditor\n            return; // click inside\n\n        //otherwise,\n        this.closeTask();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevState.deferDate !== this.state.deferDate) // if we updated the defer date\n            this.refreshDecorations();\n        if (prevState.dueDate !== this.state.dueDate) // if we updated the due date\n            this.refreshDecorations();\n        if (prevState.expanded !== this.state.expanded && this.state.expanded === true) {// if we opened a task for updating\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"none\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(false); // disable drag\n            this.props.gruntman.lockUpdates(); // tell gruntman to chill\n        }\n        else if (prevState.expanded !== this.state.expanded && this.state.expanded === false) { // if we closed a task\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"block\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(true); // enable drag\n            this.props.gruntman.unlockUpdates(); // tell gruntman to... grunt!\n        }\n        if (prevProps.startOpen !== this.props.startOpen && this.props.startOpen) // we are newly starting open\n            this.openTask(); // open task\n    }\n\n\n    // ready fo this?\n\n    render() {\n\n        return (\n            <div>\n\n                {/*animation factory to orchistrate animations*/}\n\n                <AnimationFactory\n\n                    native  \n\n                    state = {\n                        this.initialRenderDone ?\n                            (this.state.isComplete? // if we are complete \n                                (this.state.startingCompleted? // and we start complete \n                                    (this.state.expanded? // and we are expanded \n                                        \"show\":\"hide\") // show, otherwise, hide \n                                        :\"complete\") // if we are complete,  and don't start completed, complete. \n                                        : // if we arnt complete, \n                                this.state.startingCompleted ?  // and we start complete \n                                \"complete\" :\n                                (this.state.expanded? \"show\":\"hide\")):\"hide\"\n                    } // if we are incomplete, and we start incomplete, then show or hide based on expanded \n\n                >\n                    {animatedProps => {\n                        return (\n                            // Actual task container, now\n                            <animated.div \n                                onClick={(e)=>{\n                                    if(!this.state.expanded && e.target !== this.checkbox.current && e.target !== this.actualCheck.current && !this.props.freeze && !(this.state.isComplete&&!this.state.startingCompleted)) { \n                                        this.openTask(); // open the task\n                                    }\n                                }}\n                                className={\"task \"+(this.state.expanded?\"expanded\":\"collapsed\")} \n\n                                ref={this.me} \n\n                                style={{\n                                    minHeight: animatedProps.taskHeight, \n                                    maxHeight: animatedProps.taskMaxHeight, \n                                    margin: animatedProps.taskMargin, \n                                    background:animatedProps.taskBackground, \n                                    opacity:animatedProps.taskOpacity, \n                                    overflow: \"hidden\",\n                                    display: animatedProps.taskDisplay,\n                                    position: animated.taskPosition,\n                                    padding: animatedProps.taskPadding}}\n                            >\n\n                                {/* Chapter 0: Utility Components */}\n\n                                {/* Gotta get those on hover tips */}\n                                {/* And load up + hide the repeat UI, too! */}\n                                <Repeat tid={this.props.tid} reference={this.repeater} isShown={this.state.showRepeat} onDidDismiss={this.hideRepeat} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                {/* As well as load up + hide the tag editor!*/}\n                                <TagEditor reference={this.TagEditorRef} isShown={this.state.showTagEditor} onDidDismiss={()=>this.setState({showTagEditor: false})} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                \n                                {/* Chapter 1: Task Checkmark */}\n                                {/* Who could have thought so much code goes into a checkbox? */}\n                                <div style={{display: \"inline-block\", transform: \"translateY(-3px)\"}}>\n                                    {/* First, an invisible checkmark */}\n                                    <input \n                                        type=\"checkbox\" \n\n     ref={this.actualCheck}\n                                        id={\"task-check-\"+this.props.tid} \n                                        className=\"task-check\"\n                                        defaultChecked={this.props.startingCompleted}\n                                        onChange={()=>{\n\n                                            // If we are uncompleting a task (that is, currently task is complete) \n                                            if (this.state.isComplete) {\n                                                this.props.gruntman.lockUpdates();\n                                                // Well, first, uncomplete it\n                                                this.setState({isComplete: false})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__uncomplete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                // Whatever this is\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                            // If we are completing a task (that is, currently task is incomplete)\n                                            else if (!this.state.isComplete) {\n                                                // Lock updates so that animation could finish\n                                                this.props.gruntman.lockUpdates();\n                                                // Complete it\n                                                this.setState({isComplete: true})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__complete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                //TODO wait for animation to finish before state update??\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                        }} \n                                        style={{opacity: this.state.availability?1:0.35}}\n                                    />\n\n                                    {/* Oh yeah, that checkmark above you can't actually see */}\n                                    {/* Here's what the user actually clicks on, the label! */}\n                                    <label ref={this.checkbox} className={\"task-pseudocheck \"+this.state.decoration} id={\"task-pseudocheck-\"+this.props.tid} htmlFor={\"task-check-\"+this.props.tid}>&zwnj;</label>\n                                </div>\n\n                                {/* The animated input box */}\n                                <animated.input \n                                    defaultValue={this.state.name} \n                                    onChange={\n                                        (e)=>{\n                                            // THIS. REFER TO THIS. YOU ARE HERE. STOP SEARCHING.\n                                            // :point down: is FANCYCHANGE\n\n                                            // If somebody dares to do the complicated action of task name change\n                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n\n                                            // Register a scheduler to watch for more changes\n                                            // because dang react calls onChange on every freaking change\n                                            // TODO TODO destruct all schedulers on view change\n                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                \"task.update\", // the scheduler actually updates the task\n                                                {\n                                                    uid: this.props.uid, \n                                                    tid: this.props.tid, \n                                                    query:{name: e.target.value} // setting the name to the name\n                                                }\n                                            ), `task-name-${this.props.tid}-update`) // and we will schedule it as this\n                                        }\n                                    } \n\n                                    onFocus={(e)=>{ \n                                        // open the task if its not open already\n                                        if(!this.state.expanded) { \n                                            //this.openTask(); // open the task\n                                            if (getPlatforms().includes(\"mobile\")) e.target.blur(); // blur, only if mobile to fix bugs where even in attempted readonly the cursor blurs\n                                        }\n                                    }} \n                                    className={\"task-name \"+(this.state.expanded?\"\":\"no-select\")} \n                                    readOnly={(!this.state.expanded)} \n                                    type=\"text\" \n                                    autoComplete=\"off\" \n                                    placeholder={this.props.gruntman.localizations.nt} \n                                    style={{opacity: this.state.availability?1:0.35, textDecoration: animatedProps.taskNameDecoration}} />\n\n                                {/* Task edit. The thing that slides open on edit. */}\n                                {(() => {\n                                    if (this.state.haveBeenExpanded===true)\n                                        return(\n                                            <animated.div className=\"task-edit\" style={{opacity: animatedProps.taskEditOpacity, overflow: \"hidden\",maxHeight: animatedProps.taskEditMaxHeight}}>\n\n                                                {/* First, task description field */}\n                                                <textarea \n                                                    placeholder={this.props.gruntman.localizations.desc} \n                                                    className=\"task-desc\" \n                                                    style={{marginBottom: 10}} \n                                                    defaultValue={this.state.desc}\n                                                    onChange={\n                                                        (e)=>{\n                                                            // Register a scheduler to deal with React's onChange\n                                                            // Search for the word FANCYCHANGE to read my spheal on this\n                                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                                \"task.update\", \n                                                                {\n                                                                    uid: this.props.uid, \n                                                                    tid: this.props.tid, \n                                                                    query:{desc: e.target.value}\n                                                                }\n                                                            ), `task-desc-${this.props.tid}-update`)\n                                                        }\n                                                    }\n                                                >\n                                                </textarea>\n\n                                                {/* Task icon set. TODO delete task */}\n                                                <div style={{display: \"inline-block\", marginBottom: 6, transform: \"translateY(-5px)\"}}>\n                                                    {/* Flagged icon */}\n                                                    <a data-tip={this.props.gruntman.psp_flg} className=\"task-icon\" style={{borderColor: this.state.isFlagged ? \"var(--task-icon-ring-highlighted)\":\"var(--task-icon-ring)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the flagged state to the opposite of whatever it is\n                                                        // Both on the db...\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFlagged: !this.state.isFlagged}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFlagged: !this.state.isFlagged});\n\n                                                    }}><i className=\"fas fa-flag\" style={{margin: 3, color: this.state.isFlagged ? \"var(--task-icon-highlighted)\" : \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Floating icon */}\n                                                    <a data-tip=\"LOCALIZE: Floating\" className=\"task-icon\" style={{borderColor: this.state.isFloating? \"var(--task-icon-ring-highlighted)\":\"var(--task-icon-ring)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the floating state to the opposite of whatever it is\n                                                        // Both on the db... TODO flush the timezone too?\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFloating: !this.state.isFloating}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFloating: !this.state.isFloating});\n\n                                                    }}><i className=\"fas fa-globe-americas\" style={{margin: 3, color: this.state.isFloating? \"var(--task-icon-highlighted)\" : \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Repeat icon that, on click, shows repeat */}\n                                                    <a onClick={this.showRepeat} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}} data-tip=\"LOCALIZE: Repeat\"><i className=\"fas fa-redo\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}} ></i></a>\n\n                                                    {/* Notification icon that, on click, shows notify popover */}\n                                                    <CalendarPopover  gruntman={this.props.gruntman} reference={this.notificationCalender} uid={this.props.uid} disableOnclick engine={this.props.engine} isShown={this.state.notificationCalendarShown} onDidDismiss={()=>this.setState({notificationCalendarShown: false})} useTime initialDate={this.state.dueDate} onDateSelected={(d)=>{\n                                                        this.props.gruntman.cancelNotification(this.props.tid).then(()=>{\n                                                            this.props.gruntman.scheduleNotification(this.props.tid, this.props.uid, this.state.name, this.state.desc, d);\n                                                            this.setState({hasNotification: true});\n                                                        });\n                                                    }}/>\n                                                    <IonPopover\n                                                        showBackdrop={false}\n                                                        isOpen={this.state.notificationPopoverShown[0]}\n                                                        cssClass='notif-popover'\n                                                        mode=\"md\" \n                                                        onDidDismiss={e => this.setState({notificationPopoverShown: [false, null]})}\n                                                        event={this.state.notificationPopoverShown[1]}\n                                                        ref={this.notificationPopover}\n                                                    >\n                                                        <div>\n                                                            <div className=\"notification-popover-item\" onClick={()=>{\n                                                                this.props.gruntman.cancelNotification(this.props.tid)\n                                                                this.setState({hasNotification: false, notificationPopoverShown: [false, null]});\n                                                            }}>Cancel Notification</div>\n                                                            <div className=\"notification-popover-item\" onClick={()=>this.setState({notificationCalendarShown: true, notificationPopoverShown:[false, null]})}>Change Notification</div>\n                                                        </div>\n                                                    </IonPopover>\n                                                    {(()=>{\n                                                        if (this.props.gruntman.notifPermissionGranted && !(getPlatforms().includes(\"mobileweb\") || getPlatforms().includes(\"desktop\")))\n                                                            return <a onClick={this.showNotificationPopover} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", cursor: \"pointer\"}} data-tip=\"LOCALIZE: Repeat\"><i className=\"fas fa-bell\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(7px, 5.5px)\"}} ></i></a>\n                                                    })()}\n\n                                                    {/* TagEditor icon that shows TagEditor on click*/}\n                                                    <a onClick={this.showTagEditor} className=\"task-icon\" style={{borderColor: \"var(--task-icon-ring)\", marginRight: 20, cursor: \"pointer\"}} data-tip=\"LOCALIZE: Freaking TagEditor\"><i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-icon-text)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}}></i></a>\n                                                    {/*<div className=\"task-icon\" style={{borderColor: \"var(--task-checkbox-feature-alt)\", marginRight: 20}}><a className=\"fas fa-globe-americas\" style={{margin: 3, color: \"var(--task-textbox)\", fontSize: 13, transform: \"translate(2.5px, -0.5px)\"}}></a></div>*/}\n                                                </div>\n\n\n                                                {/* Task date set */}\n                                                <div style={{display: \"inline-block\", marginBottom: 8}}>\n\n                                                    {/* Defer date container */}\n                                                    <div style={{display: \"inline-block\", marginRight: 10, marginBottom: 5, marginLeft: 6}}>\n                                                        {/* The. Defer. Date. */}\n                                                        <i className=\"fas fa-play\" data-tip=\"LOCALIZE: Defer Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        <CalendarPopover  gruntman={this.props.gruntman} reference={this.deferPopover} uid={this.props.uid} engine={this.props.engine} isShown={this.state.deferPopoverShown} onDidDismiss={()=>this.setState({deferPopoverShown: false})} useTime initialDate={this.state.deferDate} onDateSelected={(d)=>{\n                                                            this.props.gruntman.do(\n                                                                \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                            )\n                                                            this.setState({deferDate: d});\n\n                                                        }}/>\n                                                        {(() => {\n                                                            {/* The. Defer. Date. Input. */}\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\"))} defaultValue={value}  onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // DATEHANDLING is here too. If you are looking for that, stop searching\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value); // NLP that date!\n                                                                            if (d) this.setState({deferDate: d}); // we we got a valid date, update the calendar UI\n                                                                            if (d) // and update the database too!\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n                                                                        }, `task-defer-${this.props.tid}-update`)\n                                                                    }} onFocus={(e) => {\n                                                                        if (getPlatforms().includes(\"mobile\"))\n                                                                            this.setState({deferPopoverShown: true})\n                                                                        else {\n                                                                            onClick();\n                                                                            e.target.focus();\n                                                                        }\n\n                                                                    }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // TIMEHANDLING is here. If you are searching for that, it's here.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds()); // TODO make this with the onChange API\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.deferDate}\n                                                                    portalId={this.props.onModal?\"airplane-hanger\":\"parking-lot\"}\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({deferDate: date});\n\n                                                                        // No longer needed. State updates handle decoration udpates. Kept here for decorative purposes:\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                    showTimeInput\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n\n                                                    <div style={{display: \"inline-block\", marginBottom: 5, marginLeft: 6}}>\n                                                        <i className=\"fas fa-stop\" data-tip=\"LOCALIZE: Due Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        {/* Due date popover */}\n                                                        <CalendarPopover  gruntman={this.props.gruntman} reference={this.duePopover} uid={this.props.uid} engine={this.props.engine} isShown={this.state.duePopoverShown} onDidDismiss={()=>this.setState({duePopoverShown: false})} useTime initialDate={this.state.dueDate} onDateSelected={(d)=>{\n                                                            this.props.gruntman.do(\n                                                                \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                            )\n                                                            this.setState({dueDate: d});\n\n                                                        }}/>\n                                                        {(() => {\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\")) ? true : false} defaultValue={value} onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // Search for the word DATEHANDLING for what the heck the code actually does\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value);\n                                                                            if (d) this.setState({dueDate: d});\n                                                                            if (d)\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n\n                                                                        }, `task-due-${this.props.tid}-update`)\n                                                                    }\n                                                                        } onFocus={(e) => {\n                                                                            if (getPlatforms().includes(\"mobile\"))\n                                                                                this.setState({duePopoverShown: true})\n                                                                            else {\n                                                                                onClick();\n                                                                                e.target.focus();\n                                                                            }\n                                                                        }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // Search for TIMEHANDLING for notes on time handling.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds());\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.dueDate}\n                                                                    portalId={this.props.onModal?\"airplane-hanger\":\"parking-lot\"}\n                                                                    onChange={date => this.setState({dueDate: date})}\n                                                                    showTimeInput\n                                                                    isClearable\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({dueDate: date});\n\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    {/* Task project container */}\n                                                    <span className=\"task-project-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-list-ul\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, marginRight: 5, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Project select */}\n                                                        <Select \n                                                            options={this.props.datapack[1]}\n                                                            className='task-project'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            styles={{\n                                                                // Fixes the overlapping problem of the component\n                                                                menuPortal: provided => ({ ...provided, zIndex: \"99999 !important\" })\n                                                            }}\n                                                            menuPortalTarget={document.body}\n                                                            value={this.props.datapack[1].filter(option => option.value === this.state.project)}\n                                                            onChange={(e)=>{\n                                                                {/* :point up: filter for only options with this project and set that to be the value */}\n                                                                {/* Actually update the project */}\n                                                                this.props.gruntman.do(\"task.update__project\", { uid: this.props.uid, tid: this.props.tid, oldProject: this.state.project===\"\"?undefined:this.state.project, project: (e?e.value:\"\")})\n                                                                {/* And set the state, too! */}\n                                                                this.setState({project:(e?e.value:\"\")});\n                                                            }}\n                                                        />\n                                                    </span>\n                                                    {/* Task tag container */}\n                                                    <span className=\"task-tag-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Tag select */}\n                                                        <CreatableSelect\n                                                            options={this.props.datapack[0]}\n                                                            className='task-tag'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            isMulti\n                                                            styles={{ menuPortal: base => ({ ...base, zIndex: \"99999 !important\" }) }}\n                                                            menuPortalTarget={document.body}\n                                                            value={this.props.datapack[0].filter(option => this.state.tags.includes(option.value))}\n                                                            onChange={(newValue, actionMeta) => {\n                                                                let view = this;\n                                                                let tids = newValue?newValue.map(async function (e) { // for each tag\n                                                                    if (e.__isNew__) { // if it's a new tag\n                                                                        let tagID = (await view.props.gruntman.do( // create it!\n                                                                            \"tag.create\",\n                                                                            {\n                                                                                uid: view.props.uid,\n                                                                                name: e.label,\n                                                                            }, \n                                                                        )).id;\n                                                                        let originalTags = view.state.possibleTags; // get tags\n                                                                        originalTags.push({label: e.label, value: tagID}); // add our new tag\n                                                                        view.setState({possibleTags: originalTags}); // sax-a-boom!\n                                                                        return tagID;\n                                                                    } else\n                                                                        return e.value;\n                                                                }):[]; // find the correct tags sets, or set it to an empty set\n                                                                Promise.all(tids).then(tagIDs => {\n                                                                    this.setState({tags: tagIDs}); // set the state\n                                                                    this.props.gruntman.do(\n                                                                        \"task.update\", \n                                                                        {\n                                                                            uid: this.props.uid, \n                                                                            tid: this.props.tid, \n                                                                            query:{tags: tagIDs} // set a taskID\n                                                                        }\n                                                                    )\n                                                                });\n                                                            }}\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </animated.div>\n                                        )\n                                })()}\n                            </animated.div>\n                        )}\n                    } \n                </AnimationFactory>\n            </div >\n\n\n        )\n    }\n}\n\nexport default Task;\n\n","//\"use strict\";\n\n// Initialize Firebase Application\n// TODO TODO TODO !!!! Change this on deploy\n\nlet storageType;\nlet sqliteDB;\nlet memoryDB;\nlet firebaseDB, fsRef;\nlet requestRefresh;\n\nconst { FilesystemDirectory, FilesystemEncoding, Plugins } = require('@capacitor/core');\nconst { Device, Filesystem } = Plugins;\n\nlet readiness;\n\nconst initStorage = (payload, ...features) => {\n /*   // Firebase App (the core Firebase SDK) is always required and*/\n    //// must be listed before other Firebase SDKs\n    // const firebase = require(\"firebase/app\");\n\n    let loaders = [];\n\n    if (features.includes(\"firebase\")) {\n        const obj = require(\"./../secrets.json\");\n        if (process.env.NODE_ENV === \"development\")\n            payload.firebase.initializeApp(obj.dbkeys.debug);\n        else if (process.env.NODE_ENV === \"production\")\n            payload.firebase.initializeApp(obj.dbkeys.deploy);\n        [ firebaseDB, fsRef ] = [payload.firebase.firestore(), payload.firebase.firestore];\n        firebaseDB.enablePersistence({synchronizeTabs: true}).catch(console.error);\n        loaders.push(new Promise(function(resolve) {\n            return resolve(fsRef);\n        }));\n    } \n\n    if (features.includes(\"sqlite\")) {\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        // TODO: TODO: SQLITE 3!!\n        //const sqlite3 = require('sqlite3').verbose();   // see https://www.sqlitetutorial.net/sqlite-nodejs/connect/\n        const { FilesystemDirectory, Plugins } = require('@capacitor/core');\n        const { Device } = Plugins;\n        loaders.push((async function() {\n            const isMobile = (await Device.getInfo()).platform !== \"web\";\n            const dbRoot = isMobile ? FilesystemDirectory.Data : process.resourcesPath;\n            const dbPath = '/condution.db'; // TODO: use capacitor storage api\n            //sqliteDB = new sqlite3.Database(dbRoot+dbPath, (e)=>{if(e) console.error(e)});\n            return sqliteDB;\n        })());\n    } \n\n    if (features.includes(\"json\")) {\n        loaders.push((async function() {\n            const dbRoot = FilesystemDirectory.Data;\n            const dbPath = 'condution.json'; // TODO: use capacitor storage api\n            let contents;\n            try {\n                contents = (await Filesystem.readFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    encoding: FilesystemEncoding.UTF8\n                })).data;\n            } catch(e) {\n                contents = \"{}\";\n                await Filesystem.writeFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    data: JSON.stringify({}),\n                    encoding: FilesystemEncoding.UTF8\n                })\n            }\n            //contents = `{\"users\":{\"hard-storage-user\":{\"projects\":{\"asenuoth239p8\":{\"name\":\"bontehu\",\"is_sequential\":false,\"order\":0,\"parent\":\"\",\"top_level\":true, \"children\": []}}}}}`;\n            memoryDB = JSON.parse(contents);\n        })());\n    }\n\n    readiness = Promise.all(loaders);\n    return readiness;\n};\n\nconst useDb = (db, refresher=()=>{}) => {\n    storageType = db;\n    requestRefresh = refresher; // generate fresh refresher\n    return readiness;\n};\n\nconst [cRef, flush] = (() => {\n    //const { Plugins } = require('@capacitor/core');\n    //const { Network } = Plugins;\n\n    let cache = new Map();\n    let unsubscribeCallbacks = new Map();\n\n\n    function flush() {\n        /*\n         * Nukes the cache\n         *\n         * Used to log people out\n         *\n         * @return none\n         *\n         */\n        cache = new Map();\n        unsubscribeCallbacks = new Map();\n    }\n\n    function getFirebaseRef(path) {\n        /*\n         * Get a database reference.\n         *\n         * @param   path        A valid path array, see below.\n         * @return  reference   The generated reference\n         *\n         * Examples of valid path arrays:\n         *  [`collection/${docName}`] => DocumentReference\n         *  [\"collection\", \"docName\"] => DocumentReference\n         *  [\"collection\", \"docName\", \"collection\"] => CollectionReference\n         *  [\"collection\", [\"query\", \"params\"], [\"more\", \"params\"]] => Query\n         *  [\"collection\", [\"query\", \"params\"], \"docname\"] => DocumentReference\n         */\n        let ref = firebaseDB;\n        // special handling for first collection from root\n        console.assert(typeof path[0] === 'string');\n        if (path[0].includes('/'))\n            ref = ref.collectionGroup(path[0]);\n        else\n            ref = ref.collection(path[0]);\n        // generic handling\n        for (let nav of path.slice(1)) {\n            if (typeof nav === 'string') {\n                if (ref instanceof fsRef.DocumentReference) {\n                    ref = ref.collection(nav);\n                } else if (ref instanceof fsRef.Query) {\n                    ref = ref.doc(nav);\n                } else {\n                    throw new Error(\"Unknown reference\", ref.toString());\n                }\n            } else if (Array.isArray(nav)) {                // query, TODO shouldn't need to query\n                if (ref instanceof fsRef.Query) {\n                    ref = ref.where(...nav);\n                } else {\n                    throw new Error(\"Cannot query with\", nav.toString());\n                }\n                console.assert(ref instanceof fsRef.Query)\n            } else {\n                throw new Error(\"Cannot parse\", nav.toString());\n            }\n        }\n        return ref;\n    }\n\n    function generateRandomString() {\n        /*\n         * Generates a random string. Used for Ids.\n         * THIS IS NOT CRYPTOGRAPHICALLY SECURE\n         *\n         * @return  string  The random string\n         *\n         */\n\n        return Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2);\n    }\n\n    async function cachedRead(path) {   // TODO: make this also use hard storage, dupe for cachedSet\n        /*\n         * Get a snapshot from the cache.\n         *\n         * @param   path    The valid path to the reference\n         * @return  any     The result of calling `.get()` on the database reference\n         *\n         * Logic:\n         *  If the path is cached, return from cache.\n         *  Else, register a snapshot listener to update the cache\n         *      and return the newly cached value.\n         */\n        const TODOstring = JSON.stringify(path);        //  strigify to hash array\n        if (!cache.has(TODOstring)) {                   //  if path string isn't cached\n            // TODO: comment this out someday \\/\n            const ref = getFirebaseRef(path);           //  get the reference from the database\n            cache.set(TODOstring, ref.get());           //  save result in cache\n            unsubscribeCallbacks.set(TODOstring,        //  TODO: comment this code, someday\n                ref.onSnapshot({\n                    error: console.trace,\n                    next: (snap) => {\n                        cache.set(TODOstring, snap);\n                        requestRefresh();\n                    }\n                })\n            );\n        }\n        return await cache.get(TODOstring);\n    }\n\n    let diskJSONDB = function() {\n        const dbRoot = FilesystemDirectory.Data;\n        const dbPath = 'condution.json'; // TODO: use capacitor storage api\n        let read = async function() {\n            let contents = (await Filesystem.readFile({\n                path: dbPath,\n                directory: dbRoot,\n                encoding: FilesystemEncoding.UTF8\n            })).data;\n            memoryDB = JSON.parse(contents);\n        }\n\n        let write = async function() {\n            await Filesystem.writeFile({\n                path: dbPath,\n                directory: dbRoot,\n                data: JSON.stringify(memoryDB),\n                encoding: FilesystemEncoding.UTF8\n            })\n        }\n\n        return {read, write};\n    }()\n\n    async function storageRead(path) { \n        /*\n         * Read value in storage\n         *\n         * @param   path    The path to a reference\n         * @return  DocumentSnapshot    A snapshot of documents\n         *\n         */\n\n\n        let pointer;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Get an object pointer that's an option that\n             * looks like a noSQL object.  See JSON implimentation \n             * for tips and tricks.\n             *\n             */\n\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.some(i => {\n                pointer = pointer[i];\n                return (pointer === undefined); // https://stackoverflow.com/questions/2641347/short-circuit-array-foreach-like-calling-break\n            });\n        }\n\n        let parsed = (function parsePointer(pointer) {\n            /*\n             * Parse a dbPointerObject\n             *\n             * @param    pointer   A Javascript Object containing data\n             * @return   DocumentSnapshot   A Firebase-like Doc Snapshot\n             *\n             * TODO: also make this work for single documents, not just collections\n             */\n\n            let docRefs = [];\n            for (const docID in pointer) \n                docRefs.push({id: docID, data: ()=>Object.assign({}, pointer[docID]), exists: true}); // TODO TODO Better way to make JS objects immutable?\n            return {docs: docRefs}\n        })(pointer)\n        return parsed;\n    }\n\n    async function storageAdd(path, payload) {\n        /* \n         * Add a value\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            id = generateRandomString();\n            while (pointer[id]) id = generateRandomString();\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[id] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageDel(path) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @return  none\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            delete pointer[task];\n            await diskJSONDB.write();\n        }\n    }\n\n    async function storageSet(path, payload) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[task] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageUpdate(path, payload) {\n        /* \n         * Object.assigns the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer = Object.assign(pointer, payload);\n            await diskJSONDB.write();\n        }\n        return Object.assign(payload, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n\n\n    //async function storageSet(path, value) {\n        /*\n         * Set a value in the storage.\n         *\n         * @param   path    The valid path to reference\n         * @param   value   The value to set it to\n         * @return  none\n         */\n    //    const TODOstring = JSON.stringify(path);    // stringify array, please change someday\n    //    // update storage\n    //    if (decideWhetherToUseHardStorage())\n    //\n    //    // maintain the cache\n    //    if (!cache.has(TODOstring)) {\n    //        cache.set();\n    //    }\n    //    const ref = getFirebaseRef(path);\n    //    ref.set(value);\n    //    cache.set(stringPath, value)\n    //}\n\n    function cacheRef(path) {\n        /*\n         * Get a reference wrapper that forces cache hits.\n         * This function will be exposed to the outside world.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(getFirebaseRef(path));\n        \n        \n        return Object.assign(\n            getFirebaseRef(path),               //  default methods from firebase reference\n            { get: () => cachedRead(path) }     //  read on get, read from cache if available\n        );\n    }\n    function TODO() { console.error('bad news bears'); }\n    function storageRef(path) {\n        /*\n         * Get a reference wrapper that acts as a database blackbox.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(ref.add, ref.doc, ref.docs);\n        return {\n            id: TODO,\n            add: (payload) => storageAdd(path, payload),\n            //doc: not here, right?,\n            //docs: not here, rgiht?, // TODO: docs.filter\n            get: () => storageRead(path),\n            set: (payload) => storageSet(path, payload),\n            update: (payload) => storageUpdate(path, payload),\n            delete: () => storageDel(path),\n        };\n    }\n\n    function dispatch(...path) {\n        /* \n         * Get the currently initialized storageRef\n         *\n         * @return  storageRef/CacheRef\n         *\n         */\n\n        switch (storageType) {\n            case \"firebase\":\n                return cacheRef(path);\n            default:\n                return storageRef(path);\n        }\n    }\n\n    return [dispatch, flush];\n})();\n\nexport default {__init__:initStorage, cRef, flush, useDb};\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport '../Calendar.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\n\nfunction CalendarPopover(props) {\n    let [dateSelected, setDateSelected] = useState(props.initialDate ? props.initialDate : new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    \n    let [heat, setHeat] = useState({});\n    \n \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    \n    useEffect(()=>{\n        (async function() {\n            let map = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([_, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n            });\n            let values = Array.from(map.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]=hexes[i]});\n            }\n            setHeat(hm);\n        })();\n    },[dateSelected, props.initialDate]);\n\n    // @NEEDLOC days of the week\n    return (\n        <IonModal ref={props.reference} isOpen={props.isShown} onDidDismiss={() => {if(props.onDidDismiss) props.onDidDismiss()}} style={{borderRadius: 5}} cssClass=\"calendar-popover\">\n            <div id=\"calendar-page-calendar-wrapper\" style={{display: \"inline-block\", ...props.style}}>\n                <div id=\"calendar-wrapper-popover\">\n                    <div id=\"calendar-daterow\">\n                        <span className=\"calendar-daterow-item\">Sun</span>\n                        <span className=\"calendar-daterow-item\">Mon</span>\n                        <span className=\"calendar-daterow-item\">Tues</span>\n                        <span className=\"calendar-daterow-item\">Wed</span>\n                        <span className=\"calendar-daterow-item\">Thu</span>\n                        <span className=\"calendar-daterow-item\">Fri</span>\n                        <span className=\"calendar-daterow-item\">Sat</span>\n                    </div>\n                    <div id=\"calendar-container\">\n                        {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                        <span className={`calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                            backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                                `#${heat[i.content]}` :\n                                \"inherit\"),\n                            border:  (i.type === \"actual\" && i.content === dateSelected.getDate()) ? \n                            \"2px solid var(--decorative-light)\" :\n                            \"0\"}} \n\n                            onClick={(e)=>{\n\n                                let date;\n                                if (i.type === \"pre\")\n                                    date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                                if (i.type === \"actual\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                                if (i.type === \"post\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                                setDateSelected(date);\n                                if (props.onDateSelected && !props.disableOnclick)\n                                    props.onDateSelected(date);\n                            }}>{i.content}</span>\n                        )}\n                    </div>\n                    <div id=\"calendar-infopanel\">\n                    <div className=\"calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                    <div className=\"calendar-infopanel-datename\">{dateSelected.toLocaleString('en-us', {  weekday: 'long' })}</div>\n                    <div className=\"calendar-infopanel-month\">{dateSelected.toLocaleString('en-us', { month: 'long' })}</div>\n                    <div className=\"calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                    </div>\n                    {(()=>{\n                        if (props.useTime)\n                            return <div className=\"calendar-timeunit\">   \n                                <span className=\"calendar-time\">\n                                    Time\n                                </span>\n                                <input\n                                    className=\"calendar-timebox\"\n                                    defaultValue={dateSelected.toLocaleTimeString()}\n                                    onKeyPress={e => {\n                                        // TIMEHANDLING is here. If you are searching for that, it's here.\n                                        // But anyway, on change, parse the time\n                                        let d = chrono.parseDate(e.target.value); //TODO bad?\n                                        // ...and throw away the date \n                                        if (d && e.key === \"Enter\") {\n                                            let newDate = new Date(dateSelected.getFullYear(), dateSelected.getMonth(), dateSelected.getDate(), d.getHours(), d.getMinutes(), d.getSeconds());\n                                            setDateSelected(newDate); // TODO make this with the onChange API\n                                            e.target.value = newDate.toLocaleTimeString();\n                                            if (props.onDateSelected && !props.disableOnclick)\n                                                props.onDateSelected(newDate);\n\n                                        }\n                                    }}\n                                />\n                            </div>\n                    })()}\n                    <div id=\"calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(new Date());\n\n                    }}>{props.gruntman.localizations.clbtd}</div>\n                        <div className=\"calendar-today\" style={{marginRight: 10, float: \"right\"}} onClick={()=>{\n                            if (dateSelected)\n                                props.onDateSelected(dateSelected);\n                            props.onDidDismiss()\n                        }}>Done</div>\n                </div>\n                </div>\n            </div>\n        </IonModal>\n    )\n}\n\nfunction CalendarUnit(props) {\n    let [dateSelected, setDateSelected] = useState(props.initialDate ? props.initialDate : new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    \n    let [heat, setHeat] = useState({});\n    \n \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    \n    useEffect(()=>{\n        (async function() {\n            let map = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([_, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n            });\n            let values = Array.from(map.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]=hexes[i]});\n            }\n            setHeat(hm);\n        })();\n    },[dateSelected, props.initialDate]);\n    return (\n        <div id=\"calendar-page-calendar-wrapper\" style={{display: \"inline-block\", ...props.style}}>\n            <div id=\"calendar-wrapper-popover\">\n                <div id=\"calendar-daterow\">\n                    <span className=\"calendar-daterow-item\">Sun</span>\n                    <span className=\"calendar-daterow-item\">Mon</span>\n                    <span className=\"calendar-daterow-item\">Tues</span>\n                    <span className=\"calendar-daterow-item\">Wed</span>\n                    <span className=\"calendar-daterow-item\">Thu</span>\n                    <span className=\"calendar-daterow-item\">Fri</span>\n                    <span className=\"calendar-daterow-item\">Sat</span>\n                </div>\n                <div id=\"calendar-container\">\n                    {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                    <span className={`calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                        backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                            `#${heat[i.content]}` :\n                            \"inherit\"),\n                        border:  (i.type === \"actual\" && i.content === dateSelected.getDate()) ? \n                        \"2px solid var(--decorative-light)\" :\n                        \"0\"}} \n\n                        onClick={(e)=>{\n\n                            let date;\n                            if (i.type === \"pre\")\n                                date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                            if (i.type === \"actual\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                            if (i.type === \"post\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                            setDateSelected(date);\n                            if (props.onDateSelected && !props.disableOnclick)\n                                props.onDateSelected(date);\n                        }}>{i.content}</span>\n                    )}\n                </div>\n                <div id=\"calendar-infopanel\">\n                    <div className=\"calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                    <div className=\"calendar-infopanel-datename\">{dateSelected.toLocaleString(props.gruntman.localizations.getLanguage(), {  weekday: 'long' })}</div>\n                    <div className=\"calendar-infopanel-month\">{dateSelected.toLocaleString(props.gruntman.localizations.getLanguage(), { month: 'long' })}</div>\n                    <div className=\"calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                </div>\n                {(()=>{\n                    if (props.useTime)\n                        return <div className=\"calendar-timeunit\">   \n                            <span className=\"calendar-time\">\n                                Time\n                            </span>\n                            <input\n                                className=\"calendar-timebox\"\n                                defaultValue={dateSelected.toLocaleTimeString()}\n                                onKeyPress={e => {\n                                    // TIMEHANDLING is here. If you are searching for that, it's here.\n                                    // But anyway, on change, parse the time\n                                    let d = chrono.parseDate(e.target.value); //TODO bad?\n                                    // ...and throw away the date \n                                    if (d && e.key === \"Enter\") {\n                                        let newDate = new Date(dateSelected.getFullYear(), dateSelected.getMonth(), dateSelected.getDate(), d.getHours(), d.getMinutes(), d.getSeconds());\n                                        setDateSelected(newDate); // TODO make this with the onChange API\n                                        e.target.value = newDate.toLocaleTimeString();\n                                        if (props.onDateSelected && !props.disableOnclick)\n                                            props.onDateSelected(newDate);\n\n                                    }\n                                }}\n                            />\n                        </div>\n                })()}\n                <div id=\"calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected && !props.disableOnclick)\n                            props.onDateSelected(new Date());\n\n                    }}>{props.gruntman.localizations.clbtd}</div>\n                    <div className=\"calendar-today\" style={{marginRight: 10, float: \"right\"}} onClick={()=>{\n                        if (dateSelected)\n                            props.onDateSelected(dateSelected);\n                        props.onDidDismiss()\n                    }}>Done</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\n\nexport default CalendarPopover;\nexport { CalendarUnit };\n\n"],"sourceRoot":""}