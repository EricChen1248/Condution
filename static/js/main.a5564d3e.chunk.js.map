{"version":3,"sources":["pages/Components/Sortable.jsx","pages/Home.jsx","pages/Upcoming.jsx","pages/Calendar.jsx","pages/Components/CalendarPopover.jsx","pages/Completed.jsx","pages/Perspectives.jsx","pages/Components/PerspectiveEditor.jsx","pages/Projects.jsx","pages/Components/FloatingActionButton.jsx","pages/Components/QuickSwitcher.jsx","pages/Components/KeybindManager.jsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","backend/src/ObjectManager.js","backend/src/PerspectiveManager.js","backend/CondutionEngine.js","gruntman.js","pages/Auth.jsx","pages/Loader.jsx","App.jsx","serviceWorker.ts","index.jsx","pages/Components/Repeat.jsx","pages/Components/TagEditor.jsx","pages/Components/Task.jsx","backend/src/DBManager.js"],"names":["SortableTaskList","props","useState","activelyDragging","setActivelyDragging","order","useRef","moveApplied","currentIndex","dragEnvelope","dragEnabled","setDragEnabled","objRefs","list","map","_","React","createRef","getAnimationDestinationFromIndex","activeIndex","mY","currentOrder","noAnim","down","indx","y","indexOf","zIndex","config","tension","friction","mass","clamp","immediate","useSprings","length","current","springs","set","useEffect","i","uid","bind","useDrag","a","args","index","movement","movementY","first","last","tap","includes","onSortStart","sorted","sortedID","moveBy","Math","floor","abs","newIndex","splice","setTimeout","filter","x","gruntman","do","items","type","content","onSortEnd","newOrder","drag","delay","filterTaps","enabled","id","anim","ref","e","div","className","style","borderRadius","position","cursor","transform","interpolate","onClickCapture","stopPropagation","tid","key","prefix","datapack","engine","availability","envelope","SortableProjectList","item","activeTaskID","activeTaskRef","opacity","onClick","paginate","history","push","display","possibleProjects","autoBind","require","isPlatform","createHashHistory","createBrowserHistory","Home","to","setState","itemSelected","state","projects","perspectives","undefined","abtibRef","url","URL","document","uri","pathname","split","hash","this","refresh","prevProps","prevState","snapshot","sends","db","getTopLevelProjects","tlp","getPerspectives","psp","Router","IonReactHashRouter","IonReactRouter","keybindRef","abtib","noBounce","forceOverscroll","contentId","mode","window","navigator","platform","process","fontSize","icon","chevronForwardCircle","checkmarkCircle","calendar","npid","pid","f","paddingRight","name","proj","listOutline","dispatch","operation","reference","render","exact","path","displayName","match","params","menuRefresh","options","create","Component","Upcoming","tomorrow","Date","setDate","getDate","greetings","inbox","dueSoon","possibleTags","possibleProjectsRev","possibleTagsRev","projectSelects","tagSelects","projectDB","timeline","timelineShown","greeting","random","updatePrefix","registerRefresher","getItemAvailability","avail","getInboxandDS","pandt","getProjectsandTags","pPandT","projectList","tagsList","value","label","views","pdb","topLevels","getProjectStructure","buildSelectString","p","level","children","selectTasksInRange","prototype","isSameDateAs","pDate","getFullYear","getMonth","refrenceDate","tcontent","task","due","seconds","halt","toString","overflow","onTouchMove","preventDefault","marginLeft","color","toLocaleString","weekday","fontWeight","marginRight","overflowY","flexGrow","marginTop","timelineItem","toLocaleDateString","year","month","day","paddingLeft","paddingTop","CalPageBigOllendar","__util_calculate_gradient","left","right","gradientAmount","color1","color2","ratio","hex","r","ceil","parseInt","substring","g","b","dateSelected","setDateSelected","currentMonth","currentYear","firstDayMonth","lastDayMonth","lastDayLastMonth","firstDayDayname","getDay","daysBefore","Array","daysAfter","contentDays","heat","setHeat","max","apply","Map","names","ids","hm","forEach","val","date","setHours","time","has","get","values","from","nameList","idList","getComputedStyle","body","hexes","getPropertyValue","trim","slice","keys","height","width","backgroundColor","onDateSelected","marginBottom","Calendar","today","currentDate","taskList","popoverIsVisible","repeater","showEdit","endDate","effect","offset","top","isMobile","isShown","onDidDismiss","d","getTime","class","withGetScreen","mobileLimit","tabletLimit","shouldListenOnResize","CalendarPopover","isOpen","cssClass","border","TaskObject","contents","Completed","tasksShown","taskCats","rendering","taskArr","getCompletedTasks","full","cat","startingCompleted","handleFetchMore","Perspectives","perspectiveName","perspectiveQuery","perspectiveAvail","perspectiveTord","possiblePerspectives","perspectiveObject","perspective","calc","query","tord","registerScheduler","payload","target","then","hideEdit","updateName","startHighlighted","onChange","persist","data-tip","borderColor","margin","handleDelete","withRouter","PerspectiveEdit","inputEvent","focus","console","log","alert","onWillPresent","lockUpdates","unlockUpdates","alignItems","whiteSpace","defaultValue","minWidth","placeholder","handleQueryChange","interface","onIonChange","detail","handleHelp","Projects","parent","is_sequential","currentProject","activeTask","cProject","parentProj","overflowX","result","_explode","ABTIB","isExpanded","setisExpanded","isSaving","setisSaving","useSpring","input","readOnly","onFocus","event","onBlur","onKeyUp","taskName","dateInfo","chrono","defer","end","start","replace","text","npobj","blur","QuickSwitcher","searchRef","firstItem","direction","prop_store","searcher","processItems","setFocus","searchTerm","toLowerCase","o","filterItems","goBack","goForward","dismiss","qs_show","animated","autoFocus","onDidPresent","focusRef","spellcheck","debounce","onSubmit","onKeyDown","handleSubmit","Keybinds","bindings","sidebar_switcher","sidebar_list","sidebar_incrimentor","focusElement","globalBindings","manageQs","sidebar_index","that","num","loca","combo","Mousetrap","bindGlobal","unbind","webpackAsyncContext","req","__webpack_require__","Promise","resolve","Error","code","Object","module","exports","cRef","dbManager","util","select","compare","lhs","cmp","rhs","TypeError","all","requirements","doc","dat","data","any","atLeast","threshold","counter","atMost","debug","arg","trace","userID","snap","docs","catch","err","error","getTasksWithQuery","taskDocs","getInboxTasks","sort","inboxDocs","getDSTasks","available","wrt","dsTime","getHours","isComplete","dsDocs","dueTasks","min","returnFull","tasks","avaliable","warn","ibt","dsTasks","prev","cache","dst","avalibility","dstWithoutIbt","getTaskInformation","taskID","paramName","ti","projectIdByName","projectNameById","projectsSorted","exists","top_level","projElem","sortOrder","ret","tagIdByName","tagNameById","tag","pInfobyName","pInfobyID","ps","pstp","projectID","updateQuery","update","modifyTask","newTask","taskObj","project","ibtL","projL","add","newProject","projObj","size","obj","hasOwnProperty","newPerspective","pstObj","newTag","tagName","dissociateTask","dump","t","originalChildren","associateTask","assosProjID","willDissociateTask","taskData","delete","perspectiveID","deleteProject","struct","cpLtTasks","cpLt","concat","tagID","recursive","itemID","entries","recursivelyGetBlocks","bstat","projStruct","child","assign","tlps","blockstatus","blocks","completedTasks","taskItems","tsk","cpSorted","taskA","taskB","completeDate","yesterday","thisWeek","thisMonth","setMonth","tasksToday","tsks","tasksYesterday","tasksWeek","tasksMonth","evenBefore","tz","username","desc","isFlagged","isFloating","tags","timezone","repeat","rule","cdyrslf","npd","od","ds","odid","dsID","nice","sequential","blocked","click","pspDir","pspsp","specific","sp","promotion","online","dis","patreon","yiipee","getTasks","removeParamFromTask","modifyProject","modifyPerspective","completeTask","associateProject","dissociateProject","deleteTask","deletePerspective","getDSRow","deleteTag","onBoard","perspectiveHandler","cgs","taskFilter","taskCaptureGroup","logicCaptureGroup","globalCaptureGroup","clear","lastIndex","parseTaskCaptureGroup","str","parseSpecialVariables","vr","compileTask","pPaT","additionalFilter","queries","taskCache","antiCache","dbObj","pS","compileLogicCaptureGroup","ltr","taskInfo","taskCompValues","util_datesequal","dateA","dateB","pStr","pRes","fquery","logicSort","exec","test","Set","flat","taskObjs","aval","it","dbRefObj","__init__","use","useDb","dbFuncs","pspObj","flush","parseFromTimeZone","Gruntman","refresher","callbackRefresherReleased","conflictResolution","releaseTimeout","doers","macro","applyOrder","ntObject","Intl","DateTimeFormat","resolvedOptions","timeZone","ntID","tInfo","update__project","oldProject","update__uncomplete","update__complete","toISOString","rRule","defDistance","rOn","on","dow","oDow","setFullYear","message","TODO","update__name","projectName","update__pstate","associate","dissociate","pObj","npspid","update__perspective","delete__perspective","undoers","backlog","undolog","taskLog","canUndo","schedulers","updateLock","updateInterval","clearTimeout","interval","callback","identifier","wait","actionName","bypassUpdates","isUndo","unsafe_FORCE_UPDATES","actionID","nodes","action","shift","resources","Auth","Plugins","Storage","authMode","showExtra","view","firebase","setPersistence","Persistence","LOCAL","signInWithEmailAndPassword","$","currentUser","emailVerified","service","addClass","problem","createUserWithEmailAndPassword","html","sendEmailVerification","updateProfile","reload","sendPasswordResetEmail","autoComplete","onKeyPress","doLogin","doCreate","doRecover","dispatchCreate","doLocal","Loader","justifyContent","maxWidth","setupConfig","swipeBackEnabled","App","matchMedia","matches","removeClass","Engine","dbType","onAuthStateChanged","user","requestRefresh","authDispatch","signOut","isError","Boolean","location","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","Repeat","advanced","loadTask","float","newOn","elem","oldOn","TagEditor","AnimationFactory","Keyframes","Spring","hide","taskHeight","taskMargin","taskBackground","taskPadding","taskEditOpacity","taskEditMaxHeight","taskOpacity","taskNameDecoration","taskPosition","taskDisplay","taskMaxHeight","reset","show","complete","Task","componentWillUnmount","removeEventListener","detectOutsideClick","toggleTask","expanded","deferDate","dueDate","decoration","showRepeat","showTagEditor","haveBeenExpanded","startOpen","initialRenderDone","me","checkbox","TagEditorRef","actualCheck","showTageEditor","refreshDecorations","addEventListener","contains","closeTask","getPlatforms","openTask","native","animatedProps","freeze","minHeight","maxHeight","background","padding","hideRepeat","hideTagEditor","defaultChecked","htmlFor","textDecoration","DateInput","TimeInput","getMinutes","getSeconds","selected","portalId","showTimeInput","dateFormat","customTimeInput","customInput","isClearable","classNamePrefix","styles","menuPortal","provided","menuPortalTarget","option","isMulti","base","newValue","actionMeta","tids","__isNew__","originalTags","tagIDs","storageType","memoryDB","firebaseDB","fsRef","readiness","FilesystemDirectory","FilesystemEncoding","Filesystem","Device","unsubscribeCallbacks","getFirebaseRef","assert","collectionGroup","collection","nav","DocumentReference","Query","isArray","where","generateRandomString","TODOstring","JSON","stringify","onSnapshot","next","diskJSONDB","dbRoot","Data","read","readFile","directory","encoding","UTF8","parse","write","writeFile","pointer","some","parsed","docRefs","docID","round","pop","cacheRef","cachedRead","storageRef","storageAdd","storageRead","storageSet","storageUpdate","storageDel","loaders","features","initializeApp","dbkeys","deploy","firestore","enablePersistence","synchronizeTabs","getInfo","resourcesPath","sqliteDB","dbPath"],"mappings":"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S,KACtChX,MAAO,CAAC8D,KAAKhI,MAAMsH,aAAcU,KAAKhI,MAAMqH,UAC5Cf,SAAU0B,KAAKhI,MAAMsG,e,GAvHA0E,aA+HR+L,gBAAW6E,I,0DC5I1B,IAAI/a,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAAS+b,EAAoBC,GAC5B,IAAIC,EAAoBjC,EAAEha,EAAKgc,GAC9B,OAAOE,QAAQC,UAAU3G,M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","file":"static/js/main.a5564d3e.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useDrag } from 'react-use-gesture'\nimport { useSprings, animated, interpolate } from 'react-spring'\n\nimport '../Projects.css';\n\nimport Task from './Task';\n\n\n\n/*\n *\n * Hello human,\n * good afternoon.\n *\n * I am clumsy sortable!\n *\n * Use me to sort things\n * and make sortable task lists\n *\n * TODO => put actual documentation here\n *\n * So there.\n *\n * @jemoka\n *\n */\n\nconst SortableTaskList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:\"task\", content:i}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((id, i) => {\n        let anim = springs[i];\n        return (\n            <div ref={(e)=>{dragEnvelope.current=e}}>\n            <animated.div \n                {...bind(i)} \n                className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                style={{\n                    borderRadius: 7,\n                    position: \"relative\",\n                    cursor: \"pointer\",\n                    zIndex: anim.zIndex,  // z-index is 1000 during drag\n                    transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                }} \n                onClickCapture={(e)=>{\n                    if (activelyDragging.includes(i)){ // if we are still dragging\n                        e.stopPropagation(); // no clicky!\n                    }\n                }}\n            >\n                <Task ref={objRefs[i]} tid={id} key={id+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[id]} envelope={dragEnvelope} setDragEnabled={setDragEnabled} />\n            </animated.div>\n            </div>\n    )\n    });\n}\n\nconst SortableProjectList = (props)=>{\n\n    const itemHeight = 42; // height of single item to calculate animation\n\n    const [activelyDragging, setActivelyDragging] = useState([]); // we are actively dragging...\n\n    const order = useRef();\n    const moveApplied = useRef();\n    const currentIndex = useRef();\n    const dragEnvelope = useRef();\n    const [dragEnabled, setDragEnabled] = useState(true);\n\n\n    let objRefs = props.list.map(_ => React.createRef());\n\n    const getAnimationDestinationFromIndex = (activeIndex, mY, currentOrder, noAnim, down) => (indx) => {\n        return activeIndex === indx ?  {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight + (down ? mY-((currentOrder.indexOf(indx)-indx)*itemHeight):0), // number of tasks the index is out of place * height of task + cursor movement => correct dragged position offset\n                zIndex:1000, \n                config: {tension: 100, friction: 2, mass: 1, clamp: true},\n            immediate:noAnim\n        } : {\n                y: ((currentOrder.indexOf(indx) !== -1 ? currentOrder.indexOf(indx) : indx)-indx)*itemHeight,  // number of tasks the index is out of place * height of task => correct adjustment to position\n                zIndex:0, \n            immediate:noAnim\n        }; // if the index is the one that's being dragged, move up by howevermuch needed\n    }\n\n\n    //const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n    const [springs, set, stop] = useSprings(props.list.length, getAnimationDestinationFromIndex(-1, 0, order.current, true))\n\n    // initialize presistant refs\n    useEffect(() => {\n        order.current = props.list.map((_, i)=>i);\n        moveApplied.current = 0; // moves applied\n        currentIndex.current = 0; // currentIndex\n        set(getAnimationDestinationFromIndex(-1, 0, order.current, true)) // initialize the animation function\n    }, [props.list, props.uid]);\n\n    // Set the drag hook and define component movement based on gesture data\n    const bind = useDrag( (async function ({ args: [index], down, movement: [_, movementY] , first, last, tap}) {\n\n        if (first) {\n            currentIndex.current = index;\n\n            if (!activelyDragging.includes(index))\n                setActivelyDragging([...activelyDragging, index]);\n\n            if (props.onSortStart)\n                props.onSortStart({sorted: index, sortedID: props.list[index], list: props.list});\n        }\n\n        let moveBy = Math.floor(movementY/itemHeight) // the amount of tasks the active task moved over\n        moveBy = moveBy <= -index ? -index : (moveBy >= (props.list.length-index) ? props.list.length-1 : moveBy); // clip moveby by the total task it could possibly move over\n\n        if (Math.abs(moveBy) > 0 && moveBy!==moveApplied.current) {\n            // @enquierer crushing @jemoka's hopes and dreams\n            let newIndex = index+moveBy;\n            order.current.splice(currentIndex.current, 1); // splice element out\n            order.current.splice(newIndex, 0, index); // splice the index in, noting that we just took something out\n            moveApplied.current = moveBy;\n            currentIndex.current = newIndex;\n        }\n\n        //if (!tap) { // TODO THIS LINE IS EVIL\n            set(getAnimationDestinationFromIndex(index, movementY, order.current, false, down)) // set the animation function\n        //} // TODO CANNOT UNCOMMENT, OR YOU RISK BREAKING THE DATEPICKER\n        // As to why something in Sortable checking for taps breaks the datepicker, I blame Chuck Norris. Why not?\n\n\n        if (last) {// if we are done dragging\n            setTimeout(()=> setActivelyDragging(activelyDragging.filter(x=>x!==index)), 100); // wait for the lovely event bubble and say we are done\n            moveApplied.current = 0; // moves applied\n            currentIndex.current = 0; // currentIndex\n            await props.gruntman.do( // call a gruntman function\n                \"macro.applyOrder\", { \n                    uid: props.uid, // pass it the things vvv\n                    order: order.current, \n                    items: props.list.map(i=>{return {type:i.type, content:i.type===\"project\"?i.content.id:i.content}}),\n                }\n            );\n\n            if (props.onSortEnd)\n                props.onSortEnd({sorted: index, sortedID: props.list[index], newOrder: order.current, movementY, moveBy, list:props.list});\n\n        }\n\n\n    }).bind(this), {drag:{delay:100}, filterTaps: true, enabled: dragEnabled})\n\n    return props.list.map((item, i) => {\n        let anim = springs[i];\n        if (item.type === \"task\")\n            return (\n                <div ref = {dragEnvelope}>\n                    <animated.div \n                        {...bind(i)} \n                        className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                        style={{\n                            borderRadius: 7,\n                            position: \"relative\",\n                            cursor: \"pointer\",\n                            zIndex: anim.zIndex,  // z-index is 1000 during drag\n                            transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                        }} \n                        onClickCapture={(e)=>{\n                            if (activelyDragging.includes(i)){ // if we are still dragging\n                                e.stopPropagation(); // no clicky!\n                            }\n                        }}\n                    >\n                        <Task ref={props.activeTaskID===item.content ? props.activeTaskRef : objRefs[i]} tid={item.content} key={item.content+\"-\"+props.prefix} datapack={props.datapack} uid={props.uid} engine={props.engine} gruntman={props.gruntman} availability={props.availability[item.content]} envelope={dragEnvelope} setDragEnabled={setDragEnabled}/>\n                    </animated.div>\n                </div>\n            )\n        else if (item.type === \"project\") {\n            return (\n            <div ref={dragEnvelope}>\n                <animated.div \n                    {...bind(i)} \n                    className={activelyDragging.includes(i) ? \"drag-envelope dragging\" : \"drag-envelope\"}\n                    style={{\n                        borderRadius: 7,\n                        position: \"relative\",\n                        cursor: \"pointer\",\n                        zIndex: anim.zIndex,  // z-index is 1000 during drag\n                        transform: interpolate([anim.y], (y) => `translate3d(0,${y}px,0)`), // interpolate the transform, b/c that's, uh, the dragging part\n                    }} \n                    onClickCapture={(e)=>{\n                        if (activelyDragging.includes(i)){ // if we are still dragging\n                            e.stopPropagation(); // no clicky!\n                        }\n                    }}\n                >\n                    <a className=\"subproject\" style={{opacity:props.availability[item.content.id]?\"1\":\"0.35\"}} onClick={()=>{props.paginate(\"projects\", item.content.id);props.history.push(`/projects/${item.content.id}`)}}><div><i className=\"far fa-arrow-alt-circle-right subproject-icon\"/><div style={{display: \"inline-block\"}}>{props.possibleProjects[item.content.id]}</div></div></a>\n                </animated.div>\n            </div>\n            )\n        }\n    });\n}\n\nexport { SortableTaskList, SortableProjectList };\n\n\n\n","// A whole lotta imports\n\n// Ionic components\nimport { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, isPlatform } from '@ionic/react';\nimport { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, calendar } from 'ionicons/icons';\n\n// Routing\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// Cool components that we need\nimport Upcoming from './Upcoming';\nimport Calendar from './Calendar';\nimport Completed from './Completed';\nimport Perspectives from './Perspectives';\nimport Projects from './Projects';\nimport ABTIB from './Components/FloatingActionButton';\nimport Keybinds from './Components/KeybindManager';\n\n// Our very own CSS\nimport './Home.css';\n\n// Tootips\nimport ReactTooltip from 'react-tooltip';\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\nconst history = isPlatform(\"electron\") ? createHashHistory() : createBrowserHistory();\n\n/* \n *\n * Hello, human\n * Good morning\n * Read me please.\n *\n * Use the **state**'s itemSelected \n *     to manage the menu\n * use the **React Router URL** \n *     to manage the page\n *\n * Otherwise, unreload-reload won't work.\n *\n * Thanks. @jemoka.\n *\n */\n\n// Welp. The Home.\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects:[], // list of top level projects\n            perspectives:[], // list of perspectives\n            itemSelected:{item:\"upcoming\", id:undefined}, // so what did we actually select\n        };\n        // AutoBind!\n        autoBind(this);\n\tthis.abtibRef = React.createRef();\n    }\n\n    paginate = (to, id) => this.setState({itemSelected:{item:to ,id}}) // Does not actually paginate; instead, it... uh... sets the highlighting of the menu\n\n    componentDidMount() {\n        // This is, indeed, the view\n        // Get the current URI to set which view is selected\n        let url = (new URL(document.URL))\n        let uri = url.pathname.split(\"/\");\n        let hash = url.hash.split(\"/\");\n        if (uri[1] === \"\")\n            this.setState({itemSelected:{item:\"upcoming\", id:\"\"}});\n        else if (isPlatform(\"electron\"))\n            this.setState({itemSelected:{item:hash[1], id:hash[2]}});\n        else\n            this.setState({itemSelected:{item:uri[1], id:uri[2]}});\n\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.to !== this.state.to && this.state.to !== undefined)\n             this.setState({sends:{to:undefined, id:undefined}})\n    }\n\n    async refresh() {\n        // Load the top level projects and perspectives\n        // to set into the state and to add to the menu\n        let tlp = await this.props.engine.db.getTopLevelProjects(this.props.uid);\n        let psp = await this.props.engine.db.getPerspectives(this.props.uid);\n\n        this.setState({projects: tlp[2], perspectives:psp[2]});\n    }\n\n\n\n\n    render() {\n        const Router = isPlatform(\"electron\") ? IonReactHashRouter : IonReactRouter; // Router workaround for electron\n        return (\n            <IonPage>\n                {/* The central router that controls the routing of views */}\n                <Router history={history}>\n\t\t    <Keybinds \n\t\t\tpaginate={this.paginate} \n\t\t\tref={this.keybindRef} \n\t\t\tperspectives={this.state.perspectives}\n\t\t\tprojects={this.state.projects}\n\t\t\tabtib={this.abtibRef}\n\t\t    />\n                    {/* OoIp */}\n                    <ReactTooltip />\n                    {/* App container */}\n                    <IonContent noBounce forceOverscroll={false}>\n                        {/* Menu pane to control mobile view splitting */}\n                        <IonSplitPane id=\"main-split\" contentId=\"main\" mode=\"md\">\n                            {/* The left: menu! */}\n                            <IonMenu id=\"main-menu\" contentId=\"main\">\n                                <br />\n                                <IonContent id=\"menu-content\" className={(()=>{\n                                    if (!isPlatform(\"electron\")) // if we are not running electron\n                                        return \"normal\"; // normal windowing proceeds\n                                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                                        return \"darwin\"; // frameless setup\n                                    }\n                                    else if (process.platform === \"win32\") // windows\n                                        return \"windows\"; // non-frameless\n\n                                })()}>\n                                    {/* === Built Ins: upcoming + completed == */}\n                                    {/* Upcoming button + link */}\n                                    <Link to=\"/upcoming\" onClick={()=>this.setState({itemSelected:{item:\"upcoming\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Upcoming button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"upcoming\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20}} icon={chevronForwardCircle} />Upcoming</div>\n                                    </Link>\n\n                                    {/* Completed button + link */}\n                                    <Link to=\"/completed\" onClick={()=>this.setState({itemSelected:{item:\"completed\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Completed button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"completed\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={checkmarkCircle} />Completed</div>\n                                    </Link>\n\n                                    {/* Calendar button + link */}\n                                    <Link to=\"/calendar\" onClick={()=>this.setState({itemSelected:{item:\"calendar\", id:undefined}})}> {/* Link to trigger router */}\n                                        {/* Calendar button */}\n                                        <div className={\"menu-item \"+(this.state.itemSelected.item === \"calendar\" ? \"menu-item-selected\" : \"\")} style={{fontSize: 18}}><IonIcon style={{fontSize: 20, transform: \"translateY(3.5px)\"}} icon={calendar} />Calendar</div>\n                                    </Link>\n\n                                    {/* === Perspectives == */}\n                                    <div className=\"menu-sublabel menu-decoration\">Perspectives <a onClick={()=>{\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"perspective.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/perspectives/${npid}/do`);\n                                            this.paginate(\"perspectives\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n\n                                    {/* === Perspective button + link == */}\n                                    {this.state.perspectives.map((psp) => {\n                                        return (\n                                            <Link key={psp.id} to={`/perspectives/${psp.id}`} onClick={()=>this.setState({itemSelected:{item:\"perspectives\", id:psp.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"perspectives\" && this.state.itemSelected.id === psp.id ? \"menu-item-selected\" : \"\")}><i className=\"fas fa-layer-group\" style={{paddingRight: 2}}></i> {psp.name}</div> \n                                            </Link>\n                                        )\n                                    })}\n\n\n                                    {/* === Projects == */}\n                                    <div className=\"menu-sublabel menu-decoration\">Projects <a onClick={()=>{\n                                        let f = (async function() { // minification breaks double-called anonomous functions, so we must declare them explicitly\n                                            let npid = (await this.props.gruntman.do(\n                                                \"project.create\", {\n                                                    uid: this.props.uid,\n                                                },\n                                            )).pid;\n                                            history.push(`/projects/${npid}/do`);\n                                            this.paginate(\"projects\", npid);\n                                            this.refresh();\n                                        }).bind(this);\n                                        f();\n\n                                    }} className=\"fa fa-plus add\"></a></div>\n                                    {/* === Project Contents == */}\n                                    {this.state.projects.map((proj) => {\n                                        return (\n                                            <Link key={proj.id} to={`/projects/${proj.id}`} onClick={()=>this.setState({itemSelected:{item:\"projects\", id:proj.id}})}> {/* Link to trigger router */}\n                                                {/* Perspective button */}\n                                                <div className={\"menu-item \"+(this.state.itemSelected.item === \"projects\" && this.state.itemSelected.id === proj.id ? \"menu-item-selected\" : \"\")}><IonIcon icon={listOutline}/>{proj.name}</div></Link> \n                                        )                            \n                                    })}\n\n                                </IonContent>\n\n                                {/* Logout button */}\n                                <div className=\"menu-item\" id=\"logout\" onClick={()=>{history.push(`/`);this.props.dispatch({operation: \"logout\"})}}><i className=\"fas fa-snowboarding\" style={{paddingRight: 5}} />Logout</div>\n                            </IonMenu>\n                            <IonPage id=\"main\">\n                                {/* the add button to inbox button*/}\n                                <ABTIB reference={this.abtibRef} uid={this.props.uid} gruntman={this.props.gruntman} />\n                                {/* the portal root for DOM elements to park */}\n                                <div id=\"parking-lot\"></div>\n                                {/* The actual page */}\n                                <IonRouterOutlet>\n                                    {/* empty => /upcoming*/}\n                                    <Route render={() => <Redirect to=\"/upcoming\"/>}/>\n                                    {/* / => /upcoming */}\n                                    <Route exact path=\"/\" render={() => <Redirect to=\"/upcoming\" />} />\n                                    {/* and the perspective switch */}\n                                    <Switch>\n                                        {/* upcoming renders upcoming */}\n                                        <Route path=\"/upcoming\" exact render={()=><Upcoming engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} displayName={this.props.displayName} />} />\n                                        {/* completed renders completed */}\n                                        <Route path=\"/calendar\" exact render={()=><Calendar engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} />} />\n\n                                        {/* completed renders completed */}\n                                        <Route path=\"/completed\" exact render={()=><Completed engine={this.props.engine} uid={this.props.uid} gruntman={this.props.gruntman} />} />\n\n                                        {/* perspective renders perspectives */}\n                                        <Route path=\"/perspectives/:id/:create?\" render={({match})=><Perspectives engine={this.props.engine} paginate={this.paginate} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh}  options={match.params.create}/>}  />\n\n                                        {/* project renders perspectives */}\n                                        <Route path=\"/projects/:id/:create?\" render={({match})=><Projects engine={this.props.engine} id={match.params.id} uid={this.props.uid}  gruntman={this.props.gruntman}  menuRefresh={this.refresh} paginate={this.paginate} options={match.params.create}/>}  />\n                                        {/* TODO projects */}\n                                    </Switch>\n                                </IonRouterOutlet>\n                            </IonPage>\n                        </IonSplitPane>\n                    </IonContent>\n                </Router>\n            </IonPage>\n        );\n    }\n};\n\nexport default Home;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform, IonInfiniteScroll, IonInfiniteScrollContent } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Upcoming.scss';\nimport './Pages.css';\n\nimport { SortableTaskList } from './Components/Sortable';\n\nimport Task from './Components/Task';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\n/* \n * The lack of a poem here is scathing\n * so I thought\n * I'd contribute.\n *\n * The homepage needs no introduction\n * For it explains itself in production.\n *\n * But alas,\n * I still write this.\n *\n * What for?\n *\n * @Jemoka\n *\n */\n\n\nclass Upcoming extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        let tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate()+1);\n\n        let greetings = [\"Hello,\", \"Hey,\", \"Heyo,\", \"Aloha,\", \"Yo!\"];\n\n        this.state = {\n            inbox: [], // define the inbox\n            dueSoon: [], // whats due soon? \n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            timeline: [],\n            timelineShown: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        autoBind(this);\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pandt = await this.props.engine.db.getInboxandDS(this.props.uid, avail) // get inbox and due soon \n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.updatePrefix = this.random();\n\n        let timeline = await this.props.engine.db.selectTasksInRange(this.props.uid, new Date(), new Date(2100, 1, 1), true);\n        \n                            //timeline.push({type: \"label\", content: timelineRenderedUntil});\n                        //for (let task of fTasks)\n                            //timeline.push({type:\"task\", content:task});\n\n                        //this.setState({timelineRenderedUntil, timelineSoFar: timeline});\n        // Date same date check https://stackoverflow.com/questions/4428327/checking-if-two-dates-have-the-same-date-info\n        timeline = timeline.filter((x)=>!pandt[1].includes(x[0]))\n        Date.prototype.isSameDateAs = function(pDate) {\n          return (\n            this.getFullYear() === pDate.getFullYear() &&\n            this.getMonth() === pDate.getMonth() &&\n            this.getDate() === pDate.getDate()\n          );\n        }\n\n        let refrenceDate = new Date();\n        let tcontent = [];\n        for (let task of timeline) {\n            let due = new Date(task[1].due.seconds*1000);\n            if (!due.isSameDateAs(refrenceDate)) {\n                tcontent.push({type:\"label\", content: due});\n                refrenceDate = due;\n            }\n            tcontent.push({type:\"task\", content: task[0]});\n        }\n\n        this.setState({inbox: pandt[0], dueSoon: pandt[1], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, timeline: tcontent});\n    }\n\n    componentDidMount() {\n        this.refresh();\n\n        //// Jack and the Misadventures of Hiding the Scrollbar\n        //const content = this.pageRef.current;\n        //const styles = document.createElement('style');\n        //styles.textContent = `\n            //.scroll-y::-webkit-scrollbar {\n                //display: none;\n            //}\n        //`;\n        {/*content.shadowRoot.appendChild(styles);*/}\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n\n    render() {\n\n        return (\n            <IonPage>\n                <div style={{overflow: \"hidden\"}}>\n\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n                        <div className=\"header-container\" onTouchMove={(e)=>e.preventDefault()}>\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle><i className=\"fas fa-bars\" style={{marginLeft: 20, color: \"var(--decorative-light-alt\"}} /></IonMenuToggle> <h1 className=\"page-title\"><i style={{paddingRight: 10}} className=\"fas fa-chevron-circle-right\"></i>Upcoming</h1> \n\n                                    \n                            <div className=\"greeting-datewidget\">\n                                <div style={{display: \"inline-block\"}} className=\"greeting-date\">{(new Date()).getDate()}</div>\n                                <div style={{display: \"inline-block\"}} className=\"greeting-datename\">{new Date().toLocaleString('en-us', {  weekday: 'long' })}</div>\n                            </div>\n                            \n\n\n                                <div className=\"greeting-container\"><span id=\"greeting\">{this.state.greeting}</span> <span id=\"greeting-name\" style={{fontWeight: 600}}>{this.props.displayName}</span></div>\n                            </div>\n                        </div>\n                        <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", flexGrow: 5}}>\n                            <div>\n                                {(()=>{\n                                    if (this.state.inbox.length > 0)\n                                        return <div className=\"page-label\">Unsorted<IonBadge className=\"count-badge\">{this.state.inbox.length}</IonBadge></div>\n                                })()}\n                                <SortableTaskList list={this.state.inbox} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                            </div>\n                            <div>\n                                {(()=>{\n                                    if (this.state.dueSoon.length > 0)\n                                        return <div className=\"page-label\">Due Soon<IonBadge className=\"count-badge\">{this.state.dueSoon.length}</IonBadge></div>\n                                })()}\n                                {this.state.dueSoon.map(id => (\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                            </div>\n                            <div>\n                                <div className=\"timeline-button\">\n                                    <a \n                                        onClick={()=>\n                                                this.setState({timelineShown: !this.state.timelineShown})} \n                                        // for some reason, css classes don't work, so we have to style here\n                                        // @jack? why don't they? well, styling here's fine anyways. most likely b/c they are overrode by className=timeline-button\n                                        style={{\n                                            marginLeft: 15,\n                                            marginTop: 20, \n                                            display: \"inline-block\", \n                                            fontWeight: 600, \n                                            fontSize: 13, \n                                            //color: \"var(--decorative-light-alt)\", \n                                            cursor: \"pointer\"}}\n                                    >\n                                        <i \n                                            className=\"fas fa-calendar-week\" \n                                            style={{paddingRight: 5}}\n                                        ></i> {this.state.timelineShown? \"Hide\" : \"Show\"} timeline</a>\n                                </div> \n                                {\n                                    (()=>{\n                                        if (this.state.timelineShown)\n                                            return this.state.timeline.map(timelineItem => {\n                                                if (timelineItem.type === \"task\")\n                                                    return <Task tid={timelineItem.content} key={timelineItem.content+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[timelineItem.content]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                                        else if (timelineItem.type === \"label\")\n                                                    return <div className=\"timeline-box\"><div className=\"timeline-line-container\"><div className=\"timeline-line\">&nbsp;</div></div><div className=\"timeline-text\"><span className=\"timeline-weekname\">{timelineItem.content.toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</span></div></div>\n\n\n                                            })\n                                    })()\n                                }\n                                {\n                                    (()=>{\n                                            if (this.state.timelineShown)\n                                            return <span style={{fontSize: 8, color:\"var(--decorative-light-alt)\", paddingLeft:10, paddingTop:10}}>Commit ID: {process.env.REACT_APP_COMMIT_HASH}</span>\n                                    })()\n                                }\n                            </div>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\n// Hiding scrollbar, a journey\n\n\n\nexport default Upcoming;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport {withGetScreen} from 'react-getscreen'\nimport './Calendar.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport CalendarPopover from './Components/CalendarPopover';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n *\n * Apparently,\n * People like calendars.\n *\n * WHY?\n *\n * People don't respect \n * the existance \n * of the whole idea of GTD.\n *\n * Seriously.\n *\n * Why. A calendar?! in a GTD app.\n *\n * FINE. Here's your calendar.\n *\n * @jemoka\n *\n *\n */\n\n\nfunction CalPageBigOllendar(props) {\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let [dateSelected, setDateSelected] = useState(new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    let [heat, setHeat] = useState({});\n    \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    useEffect(()=>{\n        (async function() {\n            let map = new Map();\n            let names = new Map();\n            let ids = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([id, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n                if(names.has(time))\n                    names.set(time, [...names.get(time), val.name]);\n                else\n                    names.set(time, [val.name]);\n                if(ids.has(time))\n                    ids.set(time, [...ids.get(time), id]);\n                else\n                    ids.set(time, [id]);\n\n            });\n            let values = Array.from(map.values());\n            let nameList = Array.from(names.values());\n            let idList = Array.from(ids.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]={color:hexes[i], value:values[i], names:nameList[i], ids: idList}});\n            }\n            setHeat(hm);\n        })();\n    },[dateSelected]);\n\n    return (\n        <div id=\"calendar-page-bigol-calendar-wrapper\" style={{display: \"inline-block\", height: \"85%\", width: \"95%\", ...props.style}}>\n            <div id=\"bigol-calendar-wrapper\">\n                <div id=\"bigol-calendar-daterow\">\n                    <span className=\"bigol-calendar-daterow-item\">Sun</span>\n                    <span className=\"bigol-calendar-daterow-item\">Mon</span>\n                    <span className=\"bigol-calendar-daterow-item\">Tues</span>\n                    <span className=\"bigol-calendar-daterow-item\">Wed</span>\n                    <span className=\"bigol-calendar-daterow-item\">Thu</span>\n                    <span className=\"bigol-calendar-daterow-item\">Fri</span>\n                    <span className=\"bigol-calendar-daterow-item\">Sat</span>\n                </div>\n                <div id=\"bigol-calendar-container\">\n                    {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                    <span className={`bigol-calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                        backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                            `#${heat[i.content].color}` :\n                            \"inherit\")\n                    }}\n                        onClick={(e)=>{\n                            let date;\n                            if (i.type === \"pre\")\n                                date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                            if (i.type === \"actual\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                            if (i.type === \"post\") \n                                date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                            setDateSelected(date);\n                            if (props.onDateSelected)\n                                props.onDateSelected(date);\n                        }}><div className=\"calendar-date-text\">{i.content}<span className=\"calendar-date-value\">{heat[i.content]?`${heat[i.content].value} Tasks`:null}</span></div><div style={{marginLeft: 6, marginRight: 5, marginBottom: 2}}>{(heat[i.content]?heat[i.content].names:[]).map((name)=><span className=\"calendar-date-taskname\"><div className=\"calendar-task-circle\">&nbsp;</div>{name}</span>)}</div></span>\n                    )}\n                </div>\n                <div id=\"bigol-calendar-infopanel\">\n                    <div className=\"bigol-calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                    <div className=\"bigol-calendar-infopanel-datename\">{dateSelected.toLocaleString('en-us', {  weekday: 'long' })}</div>\n                    <div className=\"bigol-calendar-infopanel-month\">{dateSelected.toLocaleString('en-us', { month: 'long' })}</div>\n                    <div className=\"bigol-calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                <div id=\"bigol-calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected)\n                            props.onDateSelected(new Date());\n\n                    }}>Today</div>\n\n\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nclass Calendar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let today = new Date();\n        today.setHours(0,0,0,0);\n\n        this.state = {\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            currentDate: (today), // new date\n            taskList: [],\n            popoverIsVisible: false,\n\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        let endDate = new Date(this.state.currentDate);\n        endDate.setHours(23,59,59,60);\n        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, this.state.currentDate, endDate);\n\n        this.setState({\n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB, \t\t\t      // and the project db \n            taskList\n        }); // once we finish, set the state\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                {/* the perspective editor! */}\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--decorative-light-alt\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-calendar-alt\">\n                                    </i>\n                                    Calendar\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                            </div> \n                        </div>\n                    </div>\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", height: \"100%\"}}>\n                        Hey there folks, still not done with big-ol lendar. If you think this is broken, it is. Use the mobile version by resizing your window smaller. At least that's working.\n                        <div id=\"calendar-page-wrapper\">\n                            {(()=>{\n                                if (this.props.isMobile())\n                                    return <CalendarPopover uid={this.props.uid} engine={this.props.engine} isShown={this.state.popoverIsVisible} onDidDismiss={()=>this.setState({popoverIsVisible: false})}  onDateSelected={(async function(d){\n                                        let endDate = new Date(d.getTime());\n                                        endDate.setHours(23,59,59,60);\n                                        let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, d, endDate);\n                                        this.setState({currentDate: d, taskList});\n                                    }).bind(this)}/>\n                                else \n                                    return <CalPageBigOllendar  uid={this.props.uid} engine={this.props.engine} />\n{/*                                    return <CalPagelendar uid={this.props.uid} engine={this.props.engine} onDateSelected={(async function(d){*/}\n                                        //let endDate = new Date(d.getTime());\n                                        //endDate.setHours(23,59,59,60);\n                                        //let taskList = await this.props.engine.db.selectTasksInRange(this.props.uid, d, endDate);\n                                        //this.setState({currentDate: d, taskList});\n                                    {/*}).bind(this)}/>*/}\n                            })()}\n                            {(()=>{\n                                if (this.props.isMobile())\n                            return <div id=\"calendar-page-taskpage-wrapper\">\n                                <span id=\"calendar-page-header\">\n                                    <div class=\"calendar-page-count\">{this.state.taskList.length}</div>\n                                    <div class=\"calendar-page-title\">tasks due on</div>\n                                    <div class=\"calendar-page-date\" onClick={()=>this.setState({popoverIsVisible: true})}>{this.state.currentDate.toLocaleString('en-us', {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'  })}</div>\n                                </span>\n                                {this.state.taskList.map(id=>(\n                                    <Task tid={id} key={id+\"-\"+this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability[id]} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]}/>\n                                ))}\n                                {(()=>{\n                                    if (this.props.isMobile() && this.state.taskList.length == 0)\n                                        return <span class=\"calendar-page-select\">Hint: tap the date above to change date!</span>\n                                })()}\n\n                            </div>\n                            })()}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\nexport default withGetScreen(Calendar, {mobileLimit: 720, tabletLimit:768, shouldListenOnResize: true});\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component, useState, useEffect } from 'react';\nimport '../Calendar.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\n\nfunction CalendarPopover(props) {\n    let [dateSelected, setDateSelected] = useState(new Date());\n\n    let currentMonth = dateSelected.getMonth();\n    let currentYear = dateSelected.getFullYear();\n\n    let firstDayMonth = new Date(currentYear, currentMonth, 1);\n    let lastDayMonth = new Date(currentYear, currentMonth+1, 0);\n    let lastDayLastMonth = new Date(currentYear, currentMonth, 0);\n\n    let firstDayDayname = firstDayMonth.getDay()+1;\n\n    function __util_calculate_gradient(left, right, gradientAmount) {\n        let color1 = left;\n        let color2 = right;\n        let ratio = gradientAmount;\n        let hex = function(x) {\n            x = x.toString(16);\n            return (x.length == 1) ? '0' + x : x;\n        };\n\n        let r = Math.ceil(parseInt(color1.substring(0,2), 16) * ratio + parseInt(color2.substring(0,2), 16) * (1-ratio));\n        let g = Math.ceil(parseInt(color1.substring(2,4), 16) * ratio + parseInt(color2.substring(2,4), 16) * (1-ratio));\n        let b = Math.ceil(parseInt(color1.substring(4,6), 16) * ratio + parseInt(color2.substring(4,6), 16) * (1-ratio));\n\n        return hex(r) + hex(g) + hex(b);\n    }\n\n    let daysBefore = [...new Array(firstDayDayname-1)].map((_, i)=>{return {type: \"pre\", content: i+lastDayLastMonth.getDate()-(firstDayDayname-1)+1}});\n\n    let daysAfter = [...new Array((6-lastDayMonth.getDay()===-1)?6:6-lastDayMonth.getDay())].map((_, i)=>{return {type:\"post\", content:i+1}});\n\n    let contentDays = [...new Array(lastDayMonth.getDate())].map((_, i)=>{return {type:\"actual\", content:i+1}});\n\n    \n    let [heat, setHeat] = useState({});\n    \n \n    Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n    };\n\n    \n    useEffect(()=>{\n        (async function() {\n            let map = new Map();\n            let hm = {};\n            let taskList = await props.engine.db.selectTasksInRange(props.uid, firstDayMonth, lastDayMonth, true);\n            taskList.forEach(([_, val])=>{\n                let date = new Date(val.due.seconds*1000);\n                date.setHours(0, 0, 0, 0);\n                let time = date.getDate();\n                if(map.has(time))\n                    map.set(time, map.get(time)+1);\n                else\n                    map.set(time, 1);\n            });\n            let values = Array.from(map.values());\n            if (values.length > 0) {\n                let max = values.max();\n                let style = getComputedStyle(document.body);\n                let hexes = values.map(e=>__util_calculate_gradient(style.getPropertyValue('--heatmap-darkest').trim().slice(1), style.getPropertyValue('--heatmap-lightest').trim().slice(1), e/max));\n                Array.from(map.keys()).forEach((e, i)=>{hm[e]=hexes[i]});\n            }\n            setHeat(hm);\n        })();\n    },[dateSelected]);\n\n    return (\n        <IonModal ref={props.reference} isOpen={props.isShown} onDidDismiss={() => {if(props.onDidDismiss) props.onDidDismiss()}} style={{borderRadius: 5}} cssClass=\"calendar-popover\">\n            <div id=\"calendar-page-calendar-wrapper\" style={{display: \"inline-block\", ...props.style}}>\n                <div id=\"calendar-wrapper-popover\">\n                    <div id=\"calendar-daterow\">\n                        <span className=\"calendar-daterow-item\">Sun</span>\n                        <span className=\"calendar-daterow-item\">Mon</span>\n                        <span className=\"calendar-daterow-item\">Tues</span>\n                        <span className=\"calendar-daterow-item\">Wed</span>\n                        <span className=\"calendar-daterow-item\">Thu</span>\n                        <span className=\"calendar-daterow-item\">Fri</span>\n                        <span className=\"calendar-daterow-item\">Sat</span>\n                    </div>\n                    <div id=\"calendar-container\">\n                        {[...daysBefore,...contentDays,...daysAfter].map(i =>\n                        <span className={`calendar-container-item calendar-container-item-${i.type} calendar-container-item-${i.content}`} style={{\n                            backgroundColor: ((heat[i.content]&&i.type === \"actual\") ? \n                                `#${heat[i.content]}` :\n                                \"inherit\"),\n                            border:  (i.type === \"actual\" && i.content === dateSelected.getDate()) ? \n                            \"2px solid var(--decorative-light)\" :\n                            \"0\"}} \n\n                            onClick={(e)=>{\n\n                                let date;\n                                if (i.type === \"pre\")\n                                    date = new Date(lastDayLastMonth.getFullYear(), lastDayLastMonth.getMonth(), i.content);\n                                if (i.type === \"actual\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth(), i.content);\n                                if (i.type === \"post\") \n                                    date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, i.content);\n                                setDateSelected(date);\n                                if (props.onDateSelected)\n                                    props.onDateSelected(date);\n                            }}>{i.content}</span>\n                        )}\n                    </div>\n                    <div id=\"calendar-infopanel\">\n                    <div className=\"calendar-infopanel-dateselected\">{dateSelected.getDate()}</div>\n                    <div className=\"calendar-infopanel-datename\">{dateSelected.toLocaleString('en-us', {  weekday: 'long' })}</div>\n                    <div className=\"calendar-infopanel-month\">{dateSelected.toLocaleString('en-us', { month: 'long' })}</div>\n                    <div className=\"calendar-infopanel-year\">{dateSelected.getFullYear()}</div>\n                </div>\n                <div id=\"calendar-tools\">\n                    <a className=\"fas fa-caret-left calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()-1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <a className=\"fas fa-caret-right calendar-button\" onClick={()=>{\n                        let date = new Date(firstDayMonth.getFullYear(), firstDayMonth.getMonth()+1, 1);\n                        setDateSelected(date);\n                        if (props.onDateSelected)\n                            props.onDateSelected(date);\n\n                    }}></a>\n                    <div className=\"calendar-today\" onClick={()=>{\n                        setDateSelected(new Date());\n                        if (props.onDateSelected)\n                            props.onDateSelected(new Date());\n\n                    }}>Today</div>\n\n                </div>\n                </div>\n            </div>\n        </IonModal>\n    )\n}\n\n\n\nexport default CalendarPopover;\n\n","// IMPORTS\nimport { IonContent, IonPage, IonMenuToggle, isPlatform } from '@ionic/react'; \nimport React, { Component, useEffect } from 'react';\nimport './Completed.css';\nimport './Pages.css';\nimport Task from './Components/Task';\nconst autoBind = require('auto-bind/react'); // autobind is a lifesaver\n\n/*\n\n * Sometimes we complete.\n *\n * This is not always correct,\n *\n * so we have this page! \n *\n * @enquirer\n\n*/\n\n// construtor for rendered object\nfunction TaskObject(type, contents) {\n    this.type = type; // set the type to the type (label or task)\n    this.contents = contents; // set the contents to the contents (title or id)\n}\n\n// define the main component!\nclass Completed extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // the objects we render\n            tasksShown: 1, // track the number of times we have fetched more\n            taskCats: [\"Today\", \"Yesterday\", \"This Week\", \"This Month\", \"Even Before\"], // define task categories (cats!)\n            rendering: true, // define whether or not the element is rendering \n            possibleProjects:{}, // see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n        };\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    async refresh() {\n        let taskArr = []; // define temp array\n        let full = await this.props.engine.db.getCompletedTasks(this.props.uid); // get the tasks from the database \n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n        // loop through the tasks, converting to objects and inserting labels between each cat\n        full.forEach((cat, i) => {\n            taskArr.push(new TaskObject(\"label\", this.state.taskCats[i])) // each iteration, push the next label to the temp arr\n            cat.forEach(task => { // this loops through each cat\n                taskArr.push(new TaskObject(\"task\", task)) // convert each task to an object then push it to the temp arr\n            })\n        });\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.setState({taskList: taskArr, rendering: false, possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB}); // once we finish, set the state\n        // also set rendering to false. \n        // This is a hacky solution instead of creating an entirely new async function.\n    }\n\n    async componentDidMount() {\n        this.refresh(); // refresh when the component mounts\n    }\n\n    handleFetchMore() {\n        this.setState({rendering: true}) // trigger loading screen\n        const loader =  setTimeout(() => { // set a timeout to set the rendering to false \n            this.setState({rendering: false})\n\n        }, 2);\n\n        const updateTasks =  setTimeout(() => { // set another timeout for the actual task update\n            this.setState({tasksShown: this.state.tasksShown+1}) \n            // increment tasksShown by one whenever fetch more is clicked\n            // this renders 10 more items \n            this.setState({rendering: false}) // set rendering to false\n        }, 1)\n\n        // disclaimer: I do not understand how this works. I was just messing around trying to debug and this happened to work.\n        // if it ain't broke, dont fix it? \n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n                <div style={{overflowY: \"scroll\"}}>\n                    <div className={\"page-invis-drag \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>&nbsp;</div>\n                    <div className={\"page-content \" + (()=>{\n                        if (!isPlatform(\"electron\")) // if we are not running electron\n                            return \"normal\"; // normal windowing proceeds\n                        else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                            return \"darwin\"; // frameless setup\n                        }\n                        else if (process.platform === \"win32\") // windows\n                            return \"windows\"; // non-frameless\n\n                    })()}>\n\n                        <div className=\"header-container\">\n                            <div style={{display: \"inline-block\"}}>\n                                <IonMenuToggle>\n                                    <i class=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--decorative-light-alt\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-check-circle\">\n                                    </i>\n                                    Completed\n                                </h1> \n                            </div>\n                        </div>\n                        {/* loop through the taskList ten times, multiplyed by the times we have fetched more */}\n                        {/* if the cat is empty or the final item rendered is a label, don't render it */}\n                        {/* otherwise, render a task */}\n                        {/* for the fetch more, if we are currently rendering, render a loading animation. */}\n                        {/* Otherwise, render a fetch more.*/}\n                        <div style={{overflowY: \"scroll\"}}>\n                            {this.state.taskList.slice(0, 10*this.state.tasksShown).map((content, i) => (\n                                <div style={{marginLeft: 10, marginRight: 10}}>\n                                    {(content.type == \"label\")?  \n                                            (this.state.taskList[i+1] ? \n                                                ((this.state.taskList[i+1].type == \"label\" || this.state.taskList.slice(0, 10*this.state.tasksShown).length == i+1) ? \n                                                \"\" : <p className=\"page-label\" style={{marginBottom:0}}>{content.contents}</p>) : \"\") : \n                                                <Task \n                                                    tid={content.contents} \n                                                    startingCompleted={true}\n                                                    key={content.contents+\"-\"+this.updatePrefix} \n                                                    uid={this.props.uid} \n                                                    engine={this.props.engine} \n                                                    gruntman={this.props.gruntman} \n                                                    availability={this.state.availability[content.contents]} \n                                                    datapack={[this.state.tagSelects,\n                                                        this.state.projectSelects, \n                                                        this.state.possibleProjects, \n                                                        this.state.possibleProjectsRev, \n                                                        this.state.possibleTags, \n                                                        this.state.possibleTagsRev]}\n                                                />\n                                    }\n                                </div>\n                            ))}\n\n                        <div className=\"fetch-more\" > \n                            {/* define the fetch more button */}\n                            {this.state.rendering? <p className=\"loader\" >Loading...</p> : <p onClick={this.handleFetchMore}>Fetch more...</p>}\n                        </div> \n                    <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default Completed;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Perspectives.css'\nimport './Pages.css';\nimport ReactTooltip from 'react-tooltip';\nimport { withRouter } from \"react-router\";\n\nimport Task from './Components/Task';\nimport PerspectiveEdit from './Components/PerspectiveEditor';\n\nconst autoBind = require('auto-bind/react');\n\n\n\n/* \n * To sort, we give our tasks tags\n *\n * We can also give them flags\n * \n * With perspectives we filter,\n *\n * To keep our tasks in kilter,\n *\n * Then refactor the code if it lags!\n *\n *\n * @enquirer\n *\n */\n\n\nclass Perspectives extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [], // what tasks should we display? \n            perspectiveName: \"\", // whats the perspective name? \n\t    perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n\t    perspectiveAvail: {}, // whats the perspective availability? \n\t    perspectiveTord: {},  // whats the perspective ordering?\n\t    // not truth or dare. jack doent even know what that is! ^^ \n            showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n            possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n            possibleTags:{}, \n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [], \n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {}\n\n        };\n\n\n        this.updatePrefix = this.random();\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n        this.repeater = React.createRef(); // what's my repeater? | i.. i dont know what this does...\n\n\n        // AutoBind!\n        autoBind(this);\n    }\n    showEdit() {\n        this.setState({showEdit: true})\n    } // util func for showing repeat\n    hideEdit() {\n        this.setState({showEdit: false});\n    } // util func for hiding repeat\n\n    componentWillUnmount() {\n        this.props.gruntman.halt(); // when we unmount, halt gruntman? idk what this does  \n    }\n\n    async refresh() {\n        let possiblePerspectives = await this.props.engine.db.getPerspectives(this.props.uid); // get all possible perspectives\n        let perspectiveObject = possiblePerspectives[0][this.props.id] // get the one we want based on page id \n        let taskList = await this.props.engine.perspective.calc(this.props.uid, perspectiveObject.query, perspectiveObject.avail, perspectiveObject.tord) // then get the tasks from that perspective\n\n\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) // tag nd project stuff \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n\n        projectDB.map(proj=>buildSelectString(proj));\n\n        this.setState({\n            taskList: taskList,                           // set the tasklist, \n            perspectiveName: perspectiveObject.name,     // set the perspective name \n\t    perspectiveQuery: perspectiveObject.query,  // set the perspective query \n\t    perspectiveAvail: perspectiveObject.avail, // set the perspective avail \n\t    perspectiveTord: perspectiveObject.tord,  // set the perspective tord \n            possibleProjects: pPandT[0][0],\t     // set the project stuff\n            possibleTags: pPandT[1][0],\t\t    // set the tag stuff  \n            possibleProjectsRev: pPandT[0][1],\t   // set more projects stuff  \n            possibleTagsRev: pPandT[1][1],\t  // set more tags stuff  \n            availability: avail,\t\t // set the avail\n            projectSelects: projectList,\t// set the project list  \n            tagSelects: tagsList,\t       // set the tag list\n            projectDB \t\t\t      // and the project db \n        }); // once we finish, set the state\n    }\n\n    updateName(e) {\n        if (e) { // if the name if defined, \n            this.props.gruntman.registerScheduler(() => {\n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n\t\t\t// pass it the things \n                        uid: this.props.uid, // the user id \n                        id: this.props.id,  // the perspective id \n                        payload: {name: e.target.value} // the action, setting name to the new value \n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n            this.setState({perspectiveName: e.target.value}) // set the perspectiveName\n        }\n    } \n\n\n    handleDelete() {\n        this.props.history.push(\"/upcoming\"); // go back\n        this.props.paginate(\"upcoming\"); // idk man \n        this.props.gruntman.do( // call a gruntman function\n            \"perspective.delete__perspective\", { \n                uid: this.props.uid, // pass it the user id \n                id: this.props.id, // and the current id \n            }\n        ).then(()=>{\n            this.props.menuRefresh(); // refresh menubar\n\n        }) // call the homebar refresh\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) { // if we updated the defer date\n            this.setState({\n                taskList: [], // what tasks should we display? \n                perspectiveName: \"\", // whats the perspective name? \n                perspectiveQuery: \"\", // whats the perspective query (whats in the text box)?\n                perspectiveAvail: {}, // whats the perspective availability? \n                perspectiveTord: {},  // whats the perspective ordering?\n                // not truth or dare. jack doent even know what that is! ^^ \n                showEdit: this.props.options === \"do\", // are we showing? on do, we are.\n                possibleProjects:{}, // stuff for tasks and projects to work: see jacks comments in upcoming \n                possibleTags:{}, \n                possibleProjectsRev:{}, \n                possibleTagsRev:{}, \n                availability: [], \n                projectSelects:[], \n                tagSelects: [], \n                projectDB: {}\n\n            });\n\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n        }\n        // so we want to refresh the perspective that's rendered\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.setState({showEdit: true});\n\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    render() {\n        return (\n            <IonPage>\n\t\t{/* the perspective editor! */}\n                <PerspectiveEdit \n                    reference={this.repeater} \n                    isShown={this.state.showEdit} \n                    onDidDismiss={this.hideEdit}\n                    uid={this.props.uid} \n                    engine={this.props.engine} \n                    gruntman={this.props.gruntman}\n                    id={this.props.id}\n                    perspectiveName={this.state.perspectiveName}\n                    query={this.state.perspectiveQuery}\n                    avail={this.state.perspectiveAvail}\n                    tord={this.state.perspectiveTord}\n                    menuRefresh={this.props.menuRefresh}\n                    updateName={this.updateName}\n                    startHighlighted={this.props.options === \"do\"}\n                />\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n\t\t    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--decorative-light-alt\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    <i style={{paddingRight: 10}} \n                                        className=\"fas fa-layer-group\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.perspectiveName} // TODO: jack this is hecka hacky\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n\n                                <div className=\"greeting-container\" style={{marginLeft: 11, marginTop: 7}}>\n                                    <a \n                                        onClick={this.showEdit} \n                                        data-tip=\"LOCALIZE: Edit\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-checkbox-feature-alt)\", cursor: \"pointer\"}}>\n                                        <i className=\"fas fa-edit\" \n                                            style={{margin: 3, color: \"var(--task-textbox)\", \n                                                fontSize: 10, \n                                                transform: \"translate(2px, -2px)\"}} \n                                        ></i>\n                                    </a>\n\n                                    <a \n                                        onClick={this.handleDelete} \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-checkbox-feature-alt)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-textbox)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}>\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\"}}>\n\n                        {this.state.taskList.map(id => (\n                            <Task \n                                tid={id}\n                                key={id+\"-\"+this.updatePrefix} \n                                uid={this.props.uid} \n                                engine={this.props.engine} \n                                gruntman={this.props.gruntman} \n                                availability={this.state.availability[id]} \n                                datapack={[\n                                    this.state.tagSelects, \n                                    this.state.projectSelects, \n                                    this.state.possibleProjects, \n                                    this.state.possibleProjectsRev, \n                                    this.state.possibleTags, \n                                    this.state.possibleTagsRev\n                                ]}\n                            />\n                        ))}\n                        <div className=\"bottom-helper\">&nbsp;</div>\n                    </div>\n                </div>\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Perspectives);\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\nimport '../Perspectives.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\nconst autoBind = require('auto-bind/react');\n\n\n/* \n * perspectives are amazing \n *\n * dab on them haters \n *\n * I just said the cringiest thing ever\n *\n * oh my god huxley i swear to god \n *\n * i will rebase your commits \n *\n *\n * - @zbuster05, recorded by @enquirer\n *\n */\n\nclass PerspectiveEdit extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            inputEvent: \"\", // define our input event for the perspective title \n        }\n\n        this.name = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.startHighlighted) // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    handleQueryChange(e) {\n        if (e) { // if the event is defined \n            this.props.gruntman.registerScheduler(() => { \n                //Register a scheduler to deal with React's onChange\n                //check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"perspective.update__perspective\", { \n                        // pass it the things \n                        uid: this.props.uid, // pass it the uid \n                        id: this.props.id,  // pass it the perspective id \n                        payload: {query: e.target.value} // pass it the action, updating the query\n                    }\n                )\n            }, `perspective.this.${this.props.id}-update`) // give it a custom id\n        } else {console.log(e)}\n    }\n\n    handleHelp() { // TODO TODO TODO: jack what do u want here? \n        alert(\"You really think we have documentation ready? I mean, if they are there, they are at docs.condution.com\")\n        console.log(\"no one is here to help. grow up.\")\n    }\n\n    render() {\n        return (\n            <IonModal \n                ref={this.props.reference} \n                isOpen={this.props.isShown} \n                onWillPresent={() => {this.props.gruntman.lockUpdates();}}\n                onDidDismiss={() => {\n                    this.props.gruntman.unlockUpdates(); \n                    this.props.updateName(this.state.inputEvent);\n                    if (this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}\n                } \n                cssClass={\"perspective-modal\"}\n            > \n\n                <div>\n                    {/* Header */}\n                    <div className=\"perspective-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\", whiteSpace: \"nowrap\"}}>\n                            <b className=\"bold-prefix\" >Let&#39;s build &nbsp;</b> \n                            <input className=\"editable-title pbuilder-pname\" \n                                ref={this.name}\n                                defaultValue={this.props.perspectiveName} \n                                onChange={(e)=> {e.persist(); this.props.updateName(e); this.setState({inputEvent: e})}}\n                                style={{minWidth: 0}}\n                                placeholder=\"Tap to set name\"\n                            />\n\n                            <div className=\"repeat-task-name\">{this.state.name}</div>\n                        </span>\n                        {/* Close button */} \n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss} style={{transform: \"translate(-10px, 3px)\"}}><i className=\"fa fa-times\"></i></a>\n\n                    </div>\n                    <div className=\"build-input\">\n                        <span className=\"bold-prefix\" style={{minWidth: \"70px\", marginTop: \"4px\"}}>Filter by</span>\n                        <input \n                            className=\"build-input-edit\"\n                            defaultValue={this.props.query}\n                            onChange={(e)=> {e.persist(); this.handleQueryChange(e)}}\n                            placeholder=\"LOCALIZE: perspective query\"\n                        >\n                        </input> \n                    </div>\n\n\n                    <div className=\"perspective-basic-row\">\n                        <span className=\"pbasic-container\" style={{marginRight: \"25px\"}}>\n                            <span>\n                                <i className=\"repeat-label fas fa-exchange-alt\"></i>\n                                <span className=\"perspective-label\">Include</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.avail} // TODO: make a database hit \n                                mode=\"ios\"\n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the user id \n                                            id: this.props.id,  // pass it the perspective id\n                                            payload: {avail: e.detail.value} // set the availability \n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"remain\">Remaining</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"avail\">Available</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"flagged\">Flagged</IonSelectOption>\n                            </IonSelect>\n                        </span>\n\n                        <span className=\"pbasic-container\">\n                            <span>\n                                <i className=\"repeat-label fas fa-sort-amount-down-alt\"></i>\n                                <span className=\"perspective-label\">Order</span>\n                            </span>\n\n                            <IonSelect \n                                className=\"perspective-select\" \n                                interface=\"popover\" \n                                value={this.props.tord} \n                                mode=\"ios\" \n                                onIonChange={e=>{\n                                    this.props.gruntman.do( // call a gruntman function\n                                        \"perspective.update__perspective\", { \n                                            uid: this.props.uid, // pass it the things, you know the drill \n                                            id: this.props.id, \n                                            payload: {tord: e.detail.value}\n                                        }\n                                    )\n                                }}\n                            >\n\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duas\">Ascend by Due</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"duds\">Descend by Due</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deas\">Ascend by Defer</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"deds\">Descend by Defer</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"alph\">Alphabetical</IonSelectOption>\n                            </IonSelect>\n                            <div className=\"help-icon\" onClick={this.handleHelp}>\n                                <i \n                                    className=\"far fa-question-circle\" \n                                ></i>\n                            </div>\n                        </span>\n\n\n                    </div> \n\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default PerspectiveEdit;\n\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet, IonMenuToggle, IonBadge, isPlatform } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Projects.css';\nimport './Pages.css';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport Task from './Components/Task';\n\nimport { withRouter } from \"react-router\";\n\nimport { SortableProjectList } from './Components/Sortable';\n\nconst autoBind = require('auto-bind/react'); // autobind things! \n\nclass Projects extends Component { // define the component\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '', // project name\n            possibleProjects:{}, // what are the possible projects? \n            possibleTags:{},  // what are the possible tags?\n            possibleProjectsRev:{}, \n            possibleTagsRev:{}, \n            availability: [],  // whats available\n            projectSelects:[], \n            tagSelects: [], \n            projectDB: {},\n            parent: \"\",\n            is_sequential: false,\n            currentProject: {children:[]},\n            activeTask: \"\"\n        };\n\n        this.updatePrefix = this.random();\n\n        this.props.gruntman.registerRefresher((this.refresh).bind(this));\n\n        this.activeTask = React.createRef();\n\n        this.name = React.createRef();\n\n        autoBind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.gruntman.halt();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevProps.id !== this.props.id) // if we updated the defer date\n            this.refresh(); // switching between perspectives are a prop update and not a rerender\n\n        if (prevProps.id !== this.props.id && this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    async refresh() {\n        let avail = await this.props.engine.db.getItemAvailability(this.props.uid) // get availability of items\n        let pPandT = await this.props.engine.db.getProjectsandTags(this.props.uid); // get projects and tags\n\n        let projectList = []; // define the project list\n        let tagsList = []; // define the tag list\n\n        for (let pid in pPandT[1][0]) \n            tagsList.push({value: pid, label: pPandT[1][0][pid]});\n        let views = this;\n        let projectDB = await (async function() {\n            let pdb = [];\n            let topLevels = (await views.props.engine.db.getTopLevelProjects(views.props.uid))[0];\n            for (let key in topLevels) {\n                pdb.push(await views.props.engine.db.getProjectStructure(views.props.uid, key, true));\n            }\n            return pdb;\n        }());\n\n        let buildSelectString = function(p, level) {\n            if (!level)\n                level = \"\"\n            projectList.push({value: p.id, label: level+pPandT[0][0][p.id]})\n            if (p.children)\n                for (let e of p.children)\n                    if (e.type === \"project\")\n                        buildSelectString(e.content, level+\":: \");\n        };\n        projectDB.map(proj=>buildSelectString(proj));\n        this.updatePrefix = this.random();\n        let cProject = (await views.props.engine.db.getProjectStructure(this.props.uid, this.props.id, false));\n        this.setState({name:pPandT[0][0][this.props.id], possibleProjects: pPandT[0][0], possibleTags: pPandT[1][0], possibleProjectsRev: pPandT[0][1], possibleTagsRev: pPandT[1][1], availability: avail, projectSelects: projectList, tagSelects: tagsList, projectDB, currentProject: cProject, is_sequential: cProject.is_sequential, parent: cProject.parentProj});\n    }\n\n    componentDidMount() {\n        this.refresh();\n        if (this.props.options === \"do\") // if we are trying to create\n            this.name.current.focus(); // focus the name\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n\n    updateName(e) {\n        if (e) {\n            this.props.gruntman.registerScheduler(() => { \n                // Register a scheduler to deal with React's onChange\n                // check out the FANCYCHANGE in task.jsx\n                this.props.gruntman.do( // call a gruntman function\n                    \"project.update__name\", { \n                        uid: this.props.uid, // pass it the things vvv\n                        id: this.props.id, \n                        name: e.target.value\n                    }\n                ).then(this.props.menuRefresh) // call the homebar refresh\n            }, `project.this.${this.props.id}-update`) // give it a custom id\n            this.setState({name: e.target.value})\n        } else { console.log(e)}\n    } \n\n    render() {\n        return (\n            <IonPage>\n                <div className={\"page-invis-drag \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>&nbsp;</div>\n                <div className={\"page-content \" + (()=>{\n                    if (!isPlatform(\"electron\")) // if we are not running electron\n                        return \"normal\"; // normal windowing proceeds\n                    else if (window.navigator.platform.includes(\"Mac\")){ // macos\n                        return \"darwin\"; // frameless setup\n                    }\n                    else if (process.platform === \"win32\") // windows\n                        return \"windows\"; // non-frameless\n\n                })()}>\n\n                    <div className=\"header-container\" >\n                        <div style={{display: \"inline-block\"}}>\n                            <div> \n                                <IonMenuToggle>\n                                    <i className=\"fas fa-bars\" \n                                        style={{marginLeft: 20, color: \"var(--decorative-light-alt\"}} />\n                                </IonMenuToggle> \n                                <h1 className=\"page-title\">\n                                    {(()=> {\n                                        if (this.state.parent !== \"\")\n                                            return <a className=\"fas fa-chevron-left backbutton\" onClick={()=>{this.props.paginate(\"projects\", this.state.parent);this.props.history.push(`/projects/${this.state.parent}`)}} />\n                                    })()}\n                                    <i style={{paddingRight: 4}} \n                                        className=\"fas fa-tasks\">\n                                    </i>\n                                    <input className=\"editable-title\" \n                                        onChange={(e)=> {e.persist(); this.updateName(e)}}\n                                        value={this.state.name} // TODO: jack this is hecka hacky\n                                        style={{transform: \"transformY(-2px)\"}}\n                                        ref={this.name}\n                                    />\n                                </h1> \n                                <ReactTooltip effect=\"solid\" offset={{top: 3}} backgroundColor=\"black\" className=\"tooltips\" />\n                                <div className=\"greeting-container\" style={{marginLeft: 5, marginTop: 7}}>\n                                    <a \n                                        onClick={()=> {\n                                            this.setState({is_sequential: !this.state.currentProject.is_sequential}, () => {\n                                                this.props.gruntman.do( // call a gruntman function\n                                                    \"project.update__pstate\", { \n                                                        uid: this.props.uid, // pass it the things vvv\n                                                        id: this.props.id, \n                                                        is_sequential: this.state.is_sequential\n                                                    }\n                                                );\n                                            }); // change the icon\n                                        }} \n                                        data-tip=\"LOCALIZE: Sequencial/Paralellel\"\n                                        className=\"perspective-icon\" \n                                        style={{borderColor: \"var(--task-checkbox-feature-alt)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className={this.state.is_sequential ? \"fas fa-arrows-alt-v\":\"fas fa-arrows-alt-h\"}\n                                            style={{margin: 3, color: \"var(--task-textbox)\", \n                                                fontSize: 13, transform: this.state.is_sequential ? \"translate(3.5px, -1px)\" : \"translate(0.25px, -1px)\"}}>\n                                        </i>\n                                    </a>\n                                    <a \n                                        data-tip=\"LOCALIZE: Delete\"\n                                        className=\"perspective-icon\" \n                                        onClick={()=>{\n                                            this.props.gruntman.do( // call a gruntman function\n                                                \"project.delete\", { \n                                                    uid: this.props.uid, // pass it the things vvv\n                                                    pid: this.props.id, \n                                                    parent: (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent\n                                                }\n                                            ).then(()=>{\n                                                this.props.menuRefresh(); // refresh menubar\n                                                this.props.history.push((this.state.parent === \"\" || this.state.parent === undefined) ? \"/upcoming/\" : `/projects/${this.state.parent}`); // go back\n                                                this.props.paginate((this.state.parent === \"\" || this.state.parent === undefined) ? \"upcoming\" : `projects`, (this.state.parent === \"\" || this.state.parent === undefined) ? undefined : this.state.parent);\n                                            }) // call the homebar refresh\n                                        }}\n                                        style={{borderColor: \"var(--task-checkbox-feature-alt)\", \n                                            cursor: \"pointer\", marginLeft: 5}}>\n                                        <i className=\"fas fa-trash\"\n                                            style={{margin: 3, color: \"var(--task-textbox)\", \n                                                fontSize: 10, transform: \"translate(2px, -2px)\"}}\n                                        >\n                                        </i>\n                                    </a>\n\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div style={{marginLeft: 10, marginRight: 10, overflowY: \"scroll\", overflowX: \"hidden\"}}>\n\n                        <SortableProjectList list={this.state.currentProject.children} prefix={this.updatePrefix} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman} availability={this.state.availability} datapack={[this.state.tagSelects, this.state.projectSelects, this.state.possibleProjects, this.state.possibleProjectsRev, this.state.possibleTags, this.state.possibleTagsRev]} possibleProjects={this.state.possibleProjects} history={this.props.history} paginate={this.props.paginate} activeTaskRef={this.activeTask} activeTaskID={this.state.activeTask}/>\n\n                        <div style={{marginTop: 10}}>\n                            <a className=\"newbutton\" onClick={()=>{\n                                this.props.gruntman.do( // call a gruntman function\n                                    \"task.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        pid: this.props.id, \n                                    },\n                                    true // bypass updates to manually do it + make it quicker\n                                ).then((result)=>{\n                                    let cProject = this.state.currentProject; // get current project\n                                    let avail = this.state.availability; // get current availibilty\n                                    avail[result.tid] = true; // set the current one to be available, temporarily so that people could write in it\n                                    cProject.children.push({type: \"task\", content:result.tid}); // add our new task\n                                    this.setState({activeTask:result.tid, currentProject: cProject, availability: avail}, () =>  this.activeTask.current._explode() ) // wosh!\n                                }) // call the homebar refresh\n                            }}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>Add a Task</div></div></a>\n                            <a className=\"newbutton\" onClick={async function() {\n                                let npid = (await this.props.gruntman.do( // call a gruntman function\n                                    \"project.create\", { \n                                        uid: this.props.uid, // pass it the things vvv\n                                        parent: this.props.id, \n                                    },\n                                )).pid;\n                                this.props.history.push(`/projects/${npid}/do`);\n                            }.bind(this)}><div><i className=\"fas fa-plus-circle subproject-icon\"/><div style={{display: \"inline-block\", fontWeight: 500}}>Add a Project</div></div></a>\n                            <div className=\"bottom-helper\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n\n            </IonPage>\n        )\n    }\n}\n\nexport default withRouter(Projects);\n\n","//import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport React, { useState } from 'react';\nimport './FloatingActionButton.css';\nimport * as chrono from 'chrono-node';\nimport {useSpring, animated} from 'react-spring'\n\n\n/*\n * Hello human,\n * You know I'm not Jack because my pen has no nib\n * You know I'm not Huxley because I can't adlib\n * If I said I could do frqnt end, I'd be telling a fib\n * And now, as punishment, I've lost a rib\n * But alas, here is abtib ^-^\n *\n * ~~@Exr0n~~\n * @Ex-rib\n *\n */\n\nconst defaultValue = \"Add something to the inbox?\";\n\nfunction handleABTIBInput(value) {\n    console.log('abtib reportin to handle input ^-^');\n    console.log(value);\n    // TODO: nlp it\n    // TODO: create the task\n}\n\nfunction ABTIB(props) {\n    const [isExpanded, setisExpanded] = useState(false);\n    const [isSaving, setisSaving] = useState(false);\n\n    const anim = useSpring({\n\tto: \n\t    (isSaving ? \n\t\t{\n\t\t    width: 280, \n\t\t    color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd-success)\"\n\t\t} \n\n\t\t: \n\n\t\t{\n\t\t    width: isExpanded ? 280:250, \n\t\t    color:\"var(--quickadd-text)\", \n\t\t    //color:\"var(--quickadd-successtext)\", \n\t\t    backgroundColor: \"var(--quickadd)\",\n\t\t    //backgroundColor: \"var(--quickadd-success)\"\n\t\t}\n\t    )\n    })\n\n    return <animated.input \n\t\tid=\"abtib\" \n\t\treadOnly={false} \n\t\ttype=\"text\" \n\t\tdefaultValue={\"\"} \n\t\tstyle={anim} \n\t\tclassName=\"attib\"\n\t\tref={props.reference}\n\n        onFocus={\n            (event) => {\n                event.target.value = \"\";\n                setisExpanded(true);\n            }\n        }\n        onBlur={e=>{\n            setisExpanded(false);\n            setisSaving(false);\n            e.target.value = \"\";\n        }}\n        onKeyUp={\n            (event) => {\n                if (event.key === 'Enter') {\n                    event.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                    setisSaving(true);\n                    let taskName = event.target.value;\n                    let dateInfo = chrono.parse(taskName);\n                    let due = undefined;\n                    let defer = undefined;\n                    if (dateInfo.length > 0) {\n                        // we got a date!\n                        if (dateInfo[0].end) {\n                            // both start (defer) and end (due)\n                            // get end (due) date\n                            due = dateInfo[0].end.date();\n                            defer = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n\n                        }\n                        else {\n                            // only start (due)\n                            due = dateInfo[0].start.date();\n                            // strip the due date string\n                            taskName = taskName.replace(dateInfo[0].text, \"\").trim();\n                        }\n                    }\n                    let npobj = { \n                            uid: props.uid, // pass it the things vvv\n                            pid: \"\",\n                            due,\n                            defer,\n                            name: taskName\n                    };\n                    props.gruntman.do( // call a gruntman function\n                        \"task.create\", npobj,\n                    ).then(()=>{\n                        event.target.blur();\n                    });\n                }\n            }\n        }\n        placeholder={ defaultValue + ((Math.random()*128 < 1) ? \" ^-^\" : \"\")}\n     />;\n}\n\nexport default ABTIB;\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport { IonModal, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonSearchbar, IonFooter } from '@ionic/react';\nimport './QuickSwitcher.css'\nimport '../Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\n\n\nclass QuickSwitcher extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    searchRef: '',\n\t    items: [],\n\t    query: '',\n\t    firstItem: '',\n\t    direction: true, \n\t    prop_store: '',\n\t}\n\tthis.searcher = React.createRef();\n    }\n\n    componentDidUpdate() {\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.processItems()\n\t}\n\n    }\n\n    componentDidMount() {\n\tthis.processItems()\n\tthis.setState({prop_store: this.props, options: this.state.items})\n    }\n\n    focusRef() {\n       if (this.searcher.current)\n            this.searcher.current.setFocus();\n\t    this.setState({query: ''})\n    }\n\n\n    filterItems(searchTerm) {\n\tlet filteredItems = this.state.items.filter(item => {\n\t    return item[0].toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n\t});\n\t//this.setState({firstItem: filteredItems[0]});\n\treturn filteredItems\n    }\n\n\n    processItems() {\n\t// name, url prefix, id\n\tthis.setState({items: \n\t    [\n\t\t['.upcoming', 'upcoming', ''], // set the first item to upcoming \n\t\t// (i could do + but i think thats less efficent \n\t\t['.completed', 'completed', ''], // set the second item to completed\n\t\t['.calendar', 'calendar', ''], // set the third item to calendar\n\t\t...this.props.items[0].map(o => ['#'+o.name, 'perspectives', o.id]), // map the perspectives\n\t\t...this.props.items[1].map(o => [':'+o.name, 'projects', o.id]) // and the projects \n\t    ],\n\t    prop_store: this.props //  and update the props \n\t})\n    }\n\n\n    handleSubmit(e) {\n\tif (e.key == \"Enter\") {\n\t    let firstItem = this.filterItems(this.state.query)[0]\n\t    // TODO: jack make the sidebar styling work \n\t    if (!firstItem || !this.state.query) {\n\t\tif (this.state.direction && this.props.history.length > 2) { \n\t\t    this.props.history.goBack() \n\t\t} \n\t\telse if (this.props.history.length > 2) { this.props.history.goForward() }\n\t\tthis.setState({direction: !this.state.direction})\n\t\t\n\t    } else {\n\t\tthis.props.history.push(`/${firstItem[1]}/${firstItem[2]}`) // push to the history\n\t\tthis.props.paginate(...firstItem.slice(1)); // paginate-ify it!\n\t    }\n\t    this.props.dismiss() // dismiss the modal\n\t}\n    }\n\n\n    render() { \n\treturn (\n\t    <IonModal \n\t\tisOpen={this.props.qs_show} \n\t\tanimated={false}\n\t\tcssClass='qs_modal'\n\t\tautoFocus={true}\n\t\tonDidPresent={this.focusRef}\n\t\tonDidDismiss={this.props.dismiss}\n\t    >\n\t\t<div className='modal-content-wrapper'>\n\t\t    <IonSearchbar \n\t\t\tautoFocus={true}\n\t\t\tref={this.searcher} \n\t\t\tanimated={true}\n\t\t\tspellcheck={true}\n\t\t\tclassName='search-bar'\n\t\t\tplaceholder=\"Previous  |  Let's go to..\" // TODO: jack do you like this? \n\t\t\tonIonChange={e => this.setState({query: e.detail.value})}\n\t\t\tdebounce={0}\n\t\t\tonSubmit={()=>{console.log(\"wheee\")}}\n\t\t\tonKeyDown={this.handleSubmit}\n\t\t\t//value={this.searchText}\n\t\t    />\n\t\t\t<div className='option-wrapper'> \n\t\t\t    {this.filterItems(this.state.query).map(item => \n\t\t\t    <p className='option-text' \n\t\t\t\tonClick={()=>{\n\t\t\t\t    console.log(item)\n\t\t\t\t    this.props.history.push(`/${item[1]}/${item[2]}`) // push to the history\n\t\t\t\t    this.props.paginate(...item.slice(1)); // paginate-ify it!\n\t\t\t\t    this.props.dismiss()\n\t\t\t\t}}\n\t\t\t    >{item[0]}</p>\n\t\t\t    )}\n\t\t\t    \n\t\t\t</div> \n\t\t</div>\n\n\t    </IonModal>\n\t) \n    }\n\n}\n\nexport default withRouter(QuickSwitcher);\n\n\n\n","import React, { Component } from 'react';\nimport Mousetrap from 'mousetrap';\nimport bindGlobal from 'mousetrap-global-bind';\nimport { IonReactRouter, IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { withRouter } from \"react-router\";\nimport QuickSwitcher from './QuickSwitcher'\n\nconst autoBind = require('auto-bind/react');\n\n\n\nclass Keybinds extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n\t    sidebar_list: [], // what's in the sidebar? \n\t    sidebar_index: 0, // how far down the sidebar are we? \n\t    prop_store: '', // store props so we can check if they have changed \n\t    qs_show: false // is the quick switcher shown? \n\t}\n    }\n\n    // define the bindings! 2d array of keybind and function \n    // TODO TODO: for some reason binding works now, so replace that later? \n    // TODO: expand these keybinds. ie, n/p and up/down arrows\n    bindings = [\n\t[\"alt+1\", ()=>{this.sidebar_switcher(this, 0)}], // nav to upcoming keybind\n\t[\"alt+2\", ()=>{this.sidebar_switcher(this, 1)}], // nav to completed keybind\n\t[\"alt+3\", ()=>{this.sidebar_switcher(this, 2)}], // nav to item 3 keybind\n\t[\"alt+4\", ()=>{this.sidebar_switcher(this, 3)}], // nav to item 4 keybind\n\t[\"alt+5\", ()=>{this.sidebar_switcher(this, 4)}], // nav to item 5 keybind\n\t[\"alt+6\", ()=>{this.sidebar_switcher(this, 5)}], // nav to item 6 keybind\n\t[\"alt+7\", ()=>{this.sidebar_switcher(this, 6)}], // nav to item 7 keybind\n\t[\"alt+8\", ()=>{this.sidebar_switcher(this, 7)}], // nav to item 8 keybind\n\t[\"alt+9\", ()=>{this.sidebar_switcher(this, 8)}], // nav to item 9 keybind\n\t[\"alt+0\", ()=>{this.sidebar_switcher(this, this.state.sidebar_list.length-1)}], // nav to last item keybind\n\t[\"alt+j\", ()=>{this.sidebar_incrimentor(this, 1)}], // nav down keybind \n\t[\"alt+k\", ()=>{this.sidebar_incrimentor(this, -1)}], // nav up keybind \n\t[\"command+i\", ()=>{this.focusElement(this.props.abtib)}], // nav up keybind \n    ]\n\n    globalBindings = [\n\t[\"command+k\", ()=>{this.manageQs(this)}], // toggle quick swithcher keybind \n    ]\n    \n    //TODO: this doesnt work with clicking or like anything else but eh\n\n    sidebar_switcher(that, num){\n\tconst loca = this.state.sidebar_list[num]; // set our location to index in sidebar\n\tthat.props.history.push(`/${loca[0]}/${loca[1]}`) // push to the history\n\tthat.props.paginate(...loca); // paginate-ify it!\n\tconsole.log(loca)\n\tthis.setState({sidebar_index: num}) // update the sidebar index \n    }\n\n    sidebar_incrimentor(that, num) {\n\tconst next_loca = this.state.sidebar_list[this.state.sidebar_index+num] // store the variable -- we can delet this. \n\tif (next_loca) { // if its defined, \n\t    this.sidebar_switcher(that, this.state.sidebar_index+num) // go there\n\t    // if it's not defined and it's at the end, \n\t} else if (this.state.sidebar_index == this.state.sidebar_list.length-1) {\n\t    this.sidebar_switcher(that, 0) // wrap around and go back to the beginning \n\t} else { // if it's not defined and not at the end, then it must be at the beginning,\n\t    this.sidebar_switcher(that, this.state.sidebar_list.length-1) // so go to the end \n\t}\n    }\n\n\n    manageQs(that) {\n\tthis.setState({qs_show: !this.state.qs_show}); \n    }\n\n    focusElement(ref) {\n\tif (ref) {\n\t    ref.current.focus()\n\t}\n    }\n\n    componentDidUpdate(){\n\t//TODO: safe-proof(?) this\n\t// update the props\n\tif (this.state.prop_store != this.props) { // if the props have changed, \n\t    this.setState({\n\t\tsidebar_list: [\n\t\t    ['upcoming', ''], // set the first item to upcoming \n\t\t    // (i could do + but i think thats less efficent \n\t\t    ['completed', ''], // set the second item to completed\n\t\t    ['calendar', ''], // set the third item to calendar\n\t\t    ...this.props.perspectives.map(o => ['perspectives', o.id]), // map the perspectives\n\t\t    ...this.props.projects.map(o => ['projects', o.id]) // and the projects \n\t\t], \n\t\tprop_store: this.props //  and update the props \n\t    })\n\t}\n\n\t// TODO: get the current url and set the index that way \n\t//if (!this.state.sidebar_index) {\n\t//    this.setState({sidebar_index: side\n\n\t//}\n    }\n\n    // loop through and bind all our things!\n    componentDidMount() {\n\tthis.setState({prop_store: this.props})\n\n        this.bindings.map(combo => {\n\t\tMousetrap.bind(...combo)\n        })\n\n\tthis.globalBindings.map(combo => {\n\t\tMousetrap.bindGlobal(...combo)\n\t})\n    }\n\n    // loop through and unbind all our things!\n    componentWillUnmount() { \n        this.bindings.map(combo => {\n            Mousetrap.unbind(...combo)\n        })\n    }\n\n    render() { \n\treturn (\n\t    <QuickSwitcher \n\t\tqs_show={this.state.qs_show} \n\t\tdismiss={()=> this.setState({qs_show: false})}\n\t\titems={[this.props.perspectives, this.props.projects]}\n\t\tpaginate={this.props.paginate}\n\n\t    /> \n\t)\n    }\n\n}\n\nexport default withRouter(Keybinds);\n\n\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t420,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t421,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t422,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t423,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t424,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t425,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t426,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t427,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t428,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t429,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t430,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t431,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t432,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t433,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t434,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t435,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t436,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t437,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t438,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t439,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t440,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t441,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t442,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t443,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t444,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t445,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t446,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t447,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t448,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t449,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t450,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t451,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t452,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t453,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t454,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t455,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t456,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t457,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t458,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t459,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t460,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t461,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t462,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 213;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t466,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 215;\nmodule.exports = webpackAsyncContext;","import dbManager from \"./DBManager\"\nlet cRef = dbManager.cRef;\n\nconst util = {\n    select: {\n        compare: (lhs, cmp, rhs) => {\n            switch (cmp) {\n                case \"<\":\n                    return lhs < rhs;\n                case \">\":\n                    return lhs > rhs;\n                case \"<=\":\n                    return lhs <= rhs;\n                case \">=\":\n                    return lhs >= rhs;\n                case \"==\":\n                    return lhs == rhs;\n                case \"!=\":\n                    return lhs != rhs;\n                case \"has\":\n                    return lhs.includes(rhs);\n                case \"!has\":\n                    return !lhs.includes(rhs);\n                default:\n                    throw new TypeError(\"Unkown comparator \" + cmp);\n            }\n        },\n        all: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (!util.select.compare(dat[lhs], cmp, rhs))\n                    return false;\n            return true;\n        },\n        any: (...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs))\n                    return true;\n            return false;\n        },\n        atLeast: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter >= threshold)\n                        return true;\n                }\n            return false;\n        },\n        atMost: (threshold, ...requirements) => (doc) => {\n            let dat = doc.data();\n            if (dat.defer) dat.defer = dat.defer.seconds;\n            if (dat.due) dat.due = dat.due.seconds;\n            let counter = 0;\n            for (let [lhs, cmp, rhs] of requirements)\n                if (util.select.compare(dat[lhs], cmp, rhs)) {\n                    ++counter;\n                    if (counter > threshold)\n                        return false;\n                }\n            return true;\n        }\n    },\n    debug: {\n        log: (arg) => {\n            console.log(arg);\n            return arg;\n        },\n        trace: (arg) => {\n            console.trace(arg);\n            return arg;\n        }\n    }\n};\n\nasync function getTasks(userID) {\n    return cRef(\"users\", userID, \"tasks\").get()\n    .then(snap => snap.docs\n        .map(doc => doc.id)\n    ).catch(err => {\n        console.error('Error getting documents', err);\n    });\n}\n\nasync function getTasksWithQuery(userID, query) {\n    let taskDocs = await cRef(\"users\", userID, \"tasks\")\n        .get()\n        .then(snap => snap.docs\n            .filter(query)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return taskDocs.map(doc => doc.id);\n}\n\nasync function getInboxTasks(userID) {\n    let inboxDocs = await cRef(\n        \"users\", userID,\n        \"tasks\")\n        //['project', '==', ''],\n        //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(util.select.all(['project', '==', ''], ['isComplete', '==', false]))\n            .sort((a,b) => a.data().order - b.data().order)\n        ).catch(err => {\n            console.error('Error getting documents', err);\n        });\n    return inboxDocs.map(doc => doc.id);\n}\n\nasync function getDSTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(dsTime.getHours() + 24);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function dueTasks(userID, available, wrt) {\n    let dsTime = wrt ? wrt : new Date(); // TODO: merge with next line?\n    dsTime.setHours(23,59,59,999);\n    //let available = await getItemAvailability(userID);\n    let dsDocs = await cRef(\"users\", userID,\n        \"tasks\")\n            //['due', '<=', dsTime],\n            //['isComplete', \"==\", false])\n        .get()\n        .then(snap => snap.docs\n            .filter(doc =>\n                (doc.data().due ? (doc.data().due.seconds <= (dsTime.getTime()/1000)) : false) && // has a due date and is ds\n                (doc.data().defer ? (doc.data().defer.seconds < ((new Date()).getTime())/1000) : true) && // has a defer and is not defered or has no defer date\n                (doc.data().isComplete === false) && // is not completed\n                (available[doc.id]) // aaaand is available\n            )\n            .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n    ).catch(console.error);\n    return dsDocs.map(doc => doc.id);\n}\n\nasync function selectTasksInRange(userID, min=(new Date(1900, 1, 1)), max=(new Date(2100, 1, 1)), returnFull=false) {\n/*    let maxT = max;*/\n    //let minT = min;\n    //maxT.setHours(23, 59, 59, 999);\n    /*minT.setHours(0, 0, 0, 0);*/\n    let tasks = await cRef(\"users\", userID, \"tasks\")\n                    .get()\n                    .then(snap => snap.docs\n                        .filter(doc =>\n                            (doc.data().due ?\n                                (doc.data().defer ?\n                                    (new Date(doc.data().due.seconds*1000)) <= max && (new Date(doc.data().due.seconds*1000)) >= min && (new Date() >= (new Date(doc.data().defer.seconds*1000)))\n                                : false) \n                                : false)\n                        )\n                        .filter(doc => !doc.data().isComplete)\n                        .sort((a,b) => a.data().due.seconds - b.data().due.seconds)\n                    ).catch(console.error);\n    return returnFull ? tasks.map(doc => [doc.id, doc.data()]):tasks.map(doc => doc.id);\n}\n\nasync function getDSRow(userID, avaliable) {\n    console.warn(\"DEPERCATED: use instead selectTasksInRange\");\n    let ibt = await getInboxTasks(userID);\n    let d = new Date();\n    let dsTasks = [];\n    let prev = [];\n    for (let i=0; i<=7; i++) {\n        let content = (await dueTasks(userID, avaliable, d))\n        let cache = content;\n        dsTasks.push(content.filter(x => !prev.includes(x)));\n        prev = cache;\n        d.setDate(d.getDate() + 1)\n    }\n    return dsTasks.map(dst => dst.filter(x => ibt.indexOf(x) < 0));\n}\n\nasync function getInboxandDS(userID, avalibility) {\n    let ibt = await getInboxTasks(userID);\n    let dst = await getDSTasks(userID, avalibility);\n    let dstWithoutIbt = dst.filter(x => ibt.indexOf(x) < 0);\n    return [ibt, dstWithoutIbt]\n}\n\nasync function getTaskInformation(userID, taskID) {\n    let dat = (await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs\n            .filter(doc => doc.id === taskID))\n    )[0]\n    if (dat) return dat.data();\n}\n\nasync function removeParamFromTask(userID, taskID, paramName) {\n    let ti = await getTaskInformation(userID, taskID);\n    delete ti[paramName];\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .set(ti)\n        .catch(console.error);\n}\n\nasync function getTopLevelProjects(userID) {\n    let projectIdByName = {};\n    let projectNameById = {};\n    let projectsSorted = []; \n\n    let snap = (await cRef('users', userID, \"projects\")\n        .get());\n\n    snap.docs.forEach(proj => {\n        if (proj.exists && proj.data().top_level === true) {\n            projectNameById[proj.id] = proj.data().name;\n            projectIdByName[proj.data().name] = proj.id;\n            let projElem = {};\n            projElem.id = proj.id;\n            projElem.name = proj.data().name;\n            projElem.sortOrder = proj.data().order;\n            projectsSorted.push(projElem);\n        }\n    });\n\n    projectsSorted.sort((a,b) => a.sortOrder-b.sortOrder);\n    let ret = [projectNameById, projectIdByName, projectsSorted];\n    return ret;\n}\n\nasync function getProjectsandTags(userID) {\n    // NOTE: no longer console.error when  !project/tag.exists\n    let projectIdByName = {};\n    let projectNameById = {};\n    await cRef(\"users\", userID, \"projects\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(proj => {\n            if (proj.exists) {\n                projectNameById[proj.id] = proj.data().name;\n                projectIdByName[proj.data().name] = proj.id;\n            }\n        }))\n        .catch(console.error);\n\n    let tagIdByName = {};\n    let tagNameById = {};\n    await cRef(\"users\", userID, \"tags\").get()\n        .then(snap => snap.docs.forEach(tag => {\n            if (tag.exists) {\n                tagNameById[tag.id] = tag.data().name;\n                tagIdByName[tag.data().name] = tag.id;\n            }\n        }))\n        .catch(console.error);\n\n    return [[projectNameById, projectIdByName], [tagNameById, tagIdByName]];\n}\n\nasync function getPerspectives(userID) {\n    let pInfobyName = {};\n    let pInfobyID = {};\n    let ps = [];\n    await cRef(\"users\", userID, \"perspectives\").get()   // TODO: combine database hits\n        .then(snap => snap.docs.forEach(pstp => {\n            if (pstp.exists) {\n                pInfobyID[pstp.id] = {name: pstp.data().name, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                pInfobyName[pstp.data().name] = {id: pstp.id, query: pstp.data().query, avail: pstp.data().avail, tord: pstp.data().tord};\n                ps.push({id: pstp.id, ...pstp.data()});\n            }\n        }))\n        .catch(console.error);\n\n    ps.sort((a,b) => a.order-b.order);\n\n    return [pInfobyID, pInfobyName, ps];\n}\n\nasync function modifyProject(userID, projectID, updateQuery) {\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyTask(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"tasks\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function modifyPerspective(userID, taskID, updateQuery) {\n    await cRef(\"users\", userID, \"perspectives\", taskID)\n        .update(updateQuery)\n        .catch(console.error);\n}\n\nasync function newTask(userID, taskObj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    if (taskObj.project === \"\") {\n        let ibtL = (await getInboxTasks(userID)).length;\n        taskObj.order = ibtL;\n    } else {\n        let projL = (await getProjectStructure(userID, taskObj.project)).children.length;\n        taskObj.order = projL;\n    }\n\n    // Perspectives cannot have empty defer dates\n    // But! We could set no defer to defer today.\n    if (!taskObj.defer)\n        taskObj.defer = new Date();\n\n    let taskID = (await cRef(\"users\", userID, \"tasks\").add(taskObj)).id;\n\n    return taskID;\n}\n\nasync function newProject(userID, projObj, parentProj) {\n//, nameParam, descParam, deferParam, dueParam, isFlaggedParam, isFloatingParam, projectParam, tagsParam, tz\n    // Set order param. Either return the latest item in index or\n    let projL;\n    // Util func to get size of ob\n    Object.size = function(obj) {\n        var size = 0, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) size++;\n        }\n        return size;\n    };\n\n    if (parentProj) {\n        projL = (await getProjectStructure(userID, parentProj)).children.length;\n        projObj.parent = parentProj;\n    } else {\n        projL = Object.size((await getTopLevelProjects(userID))[0]);\n        projObj.parent = \"\";\n    }\n    projObj.order = projL;\n    projObj.children = {};\n\n    let pid = (await cRef(\"users\", userID, \"projects\").add(projObj)).id;\n    return pid;\n}\n\nasync function newPerspective(userID, pstObj) {\n    return (await cRef(\"users\", userID, \"perspectives\").add({order: (await getPerspectives(userID))[2].length, ...pstObj})).id;\n}\n\nasync function newTag(userID, tagName) {\n    return (await cRef(\"users\", userID, \"tags\").add({name: tagName})).id;\n}\n\nasync function completeTask(userID, taskID) {\n    await cRef(\"users\", userID, \"tasks\", taskID).update({\n        isComplete: true\n    });\n}\n\nasync function dissociateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[taskID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateTask(userID, taskID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[taskID] = \"task\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function associateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get()\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)[0] //.filter(doc => doc.id === taskID)\n        .data().children);\n\n    originalChildren[assosProjID] = \"project\";\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function dissociateProject(userID, assosProjID, projectID) {\n    let originalChildren = await cRef(\"users\", userID, \"projects\").get().then(util.dump)\n        .then(snapshot => snapshot.docs.filter(x => x.id === projectID)).then(util.dump).then(t => t[0].data().children);\n\n    delete originalChildren[assosProjID];\n    await cRef(\"users\", userID, \"projects\", projectID)\n        .update({children: originalChildren});\n}\n\nasync function deleteTask(userID, taskID, willDissociateTask = true) {\n    let taskData = await cRef(\"users\", userID, \"tasks\").get()\n        .then(snap => snap.docs.filter(doc => doc.id === taskID)[0].data()); // Fetch task data\n\n    if (taskData.project!== \"\" && willDissociateTask) {\n        await dissociateTask(userID, taskID, taskData.project);\n    }\n    await cRef(\"users\", userID, \"tasks\", taskID).delete()\n        .catch(console.error);\n}\n\nasync function deletePerspective(userID, perspectiveID) {\n    await cRef(\"users\", userID, \"perspectives\", perspectiveID).delete();\n}\n\nasync function deleteProject(userID, projectID) {\n    let struct = await getProjectStructure(userID, projectID)\n    for (let i of struct.children) {\n        if (i.type === \"project\") deleteProject(userID, i.content.id)\n        else modifyTask(userID, i.content, {project:\"\"});\n    }\n   \n    let cpLtTasks = await getCompletedTasks(userID);\n    const cpLt = [].concat(...cpLtTasks);\n    for (let t of cpLt)\n        if ((await getTaskInformation(userID, t)).project === projectID)\n            modifyTask(userID, t, {project:\"\"});\n\n    await cRef(\"users\", userID, \"projects\", projectID).delete()\n        .catch(console.error);\n}\n\nasync function deleteTag(userID, tagID) {\n    await cRef(\"users\", userID, \"tags\", tagID).delete()\n        .catch(console.error);\n}\n\nasync function getProjectStructure(userID, projectID, recursive=false) {\n    let children = [];\n\n    // absurdly hitting the cache with a very broad query so that the\n    // cache will catch all projects and only hit the db once\n\n    let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n    if (!project) {\n        return { id: projectID, children: [], is_sequential: false, sortOrder: 0, parentProj: 0};\n    }\n    for (let [itemID, type] of Object.entries(project.data().children)) {\n        if (type === \"task\") {  // TODO: combine if statements\n            let task = await getTaskInformation(userID, itemID);\n            if(task){\n                if (!task.isComplete) {\n                    children.push({type: \"task\", content: itemID, sortOrder: task.order});\n                }\n            }\n           \n        } else if (type === \"project\") {\n            if (recursive) {\n                let project = await getProjectStructure(userID, itemID);\n                if(project) children.push({type: \"project\", content: project, is_sequential: project.is_sequential, sortOrder: project.sortOrder}); \n            } else {\n                let project =  (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === itemID)[0];\n                if(project) children.push({type: \"project\", content: {id: itemID}, is_sequential: project.data().is_sequential, sortOrder: project.data().order}); \n            }\n        }\n    }\n    children.sort((a,b) => a.sortOrder-b.sortOrder); //  sort by ascending order of order, TODO: we should prob use https://firebase.google.com/docs/reference/js/firebase.firestore.Query#order-by\n    return { id: projectID, children: children, is_sequential: project.data().is_sequential, sortOrder: project.data().order, parentProj: project.data().parent};\n}\n\nasync function getItemAvailability(userID) {\n    let t = new Date();\n    let tlps = (await getTopLevelProjects(userID))[2];\n    let blockstatus = {};\n    let timea = new Date();\n    async function recursivelyGetBlocks(userID, projectID) {\n        let bstat = {};\n        let project = (await cRef(\"users\", userID, \"projects\").get().then(snap => snap.docs)).filter(doc=>doc.id === projectID)[0];\n        let projStruct = (await getProjectStructure(userID, projectID));\n        if (project.data().is_sequential) {\n            let child = projStruct.children[0];\n            if (child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }\n        } else {\n            let children = projStruct.children;\n            await Promise.all(children.map(async function(child) {\n                if (child.type === \"project\") {\n                    Object.assign(bstat, (await recursivelyGetBlocks(userID, child.content.id)));\n                    bstat[child.content.id] = true;\n                } else if (child.type === \"task\") {\n                    bstat[child.content] = true;\n                }\n            }));\n        }\n        return bstat;\n    };\n    await Promise.all(tlps.map(async function(p) {\n        blockstatus[p.id] = true;\n        let blocks = await recursivelyGetBlocks(userID, p.id);\n        Object.assign(blockstatus, blocks);\n    }));\n    await (await getInboxTasks(userID)).forEach((id) => blockstatus[id] = true);\n    return blockstatus;\n}\n\nasync function getCompletedTasks(userID) {\n    let completedTasks = await getTasksWithQuery(userID, util.select.all([\"isComplete\", \"==\", true]));\n    let taskItems = {};\n    await Promise.all(completedTasks.map(async function(tsk){\n        taskItems[tsk] = await getTaskInformation(userID, tsk);\n    }));\n    const cpSorted = completedTasks.sort(function(b,a) {\n        let taskA = taskItems[a];\n        let taskB = taskItems[b];\n        if (!taskA || !taskB) {\n            return 1;\n        }\n        return ((\n            (taskA.completeDate) ?\n                (taskA.completeDate.seconds) :\n                1\n        )-(\n            (taskB.completeDate) ?\n                (taskB).completeDate.seconds :\n                1\n        ));\n    });\n    let today = new Date();\n    let yesterday = new Date();\n    let thisWeek = new Date();\n    let thisMonth = new Date();\n    today.setHours(0,0,0,0);\n    yesterday.setDate(yesterday.getDate()-1);\n    yesterday.setHours(0,0,0,0);\n    thisWeek.setDate(thisWeek.getDate()-7);\n    thisWeek.setHours(0,0,0,0);\n    thisMonth.setMonth(thisMonth.getMonth()-1);\n    thisMonth.setHours(0,0,0,0);\n    let tasksToday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= today : false;\n    });\n    let tasksYesterday = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= yesterday && new Date(tsks.completeDate.seconds * 1000) < today : false;\n    });\n    let tasksWeek = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisWeek && new Date(tsks.completeDate.seconds * 1000) < yesterday : false;\n    });\n    let tasksMonth = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) >= thisMonth && new Date(tsks.completeDate.seconds * 1000) < thisWeek : false;\n    });\n    let evenBefore = cpSorted.filter(function (a) {\n        let tsks = taskItems[a];\n        return tsks.completeDate ? new Date(tsks.completeDate.seconds * 1000) < thisMonth : true;\n    });\n    //console.log(tasksYesterday);\n    //console.log(tasksWeek);\n    //console.log(tasksMonth);\n    /*console.log(evenBefore);*/\n    return [tasksToday, tasksYesterday, tasksWeek, tasksMonth, evenBefore];\n}\n\nasync function onBoard(userID, tz, username, payload) {\n    // Inbox, in reverse cronological order\n    await newTask(userID, {\n            name: payload[0] + ` ${username}, ` + payload[1],\n            desc: payload[2],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[3],\n            desc: payload[4],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await newTask(userID, {\n            name: payload[5],\n            desc: payload[6],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n\n    let cdyrslf = await newProject(userID, {name: payload[7], top_level: true, is_sequential: false});\n    let npd = await newProject(userID, {name: payload[8], top_level: true, is_sequential: false});\n    let od = new Date();\n    let ds = new Date();\n    od.setHours(od.getHours() - 24);\n    ds.setHours(ds.getHours() + 20);\n    let odid = await newTask(userID, {\n            name: payload[9],\n            desc: payload[10],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: od,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let dsID = await newTask(userID, {\n            name: payload[11],\n            desc: payload[12],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: npd,\n            tags: [],\n            timezone: tz,\n            due: ds,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, odid, npd);\n    await associateTask(userID, dsID, npd);\n    ds.setHours(ds.getHours() + 2);\n    let checkoutID = await newTask(userID, {\n            name: payload[13],\n            desc: payload[14],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: \"\",\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    let nice = await newTask(userID, {\n            name: payload[15],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, nice, cdyrslf);\n    let sequential = await newTask(userID, {\n            name: payload[16],\n            desc: payload[17],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sequential, cdyrslf);\n    let blocked = await newTask(userID, {\n            name: payload[18],\n            desc: payload[19],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, blocked, cdyrslf);\n    let click = await newTask(userID, {\n            name: payload[20],\n            desc: payload[21],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, click, cdyrslf);\n    let pspDir = await newTask(userID, {\n            name: payload[22],\n            desc: payload[23],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: cdyrslf,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, pspDir, cdyrslf);\n    let pspsp = await newProject(userID, {name: payload[24], top_level: true, is_sequential: false});\n    let tags = await Promise.all([newTag(userID, payload[25]), newTag(userID, payload[26]), newTag(userID, payload[27]), newTag(userID, payload[28])]);\n    let specific = await newTask(userID, {\n            name: payload[29],\n            desc: payload[30],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[2], tags[3]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, specific, pspsp);\n    let sp = await newTask(userID, {\n            name: payload[31],\n            desc: payload[32],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: pspsp,\n            tags: [tags[0]],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, sp, pspsp);\n    await newPerspective(userID, {name: payload[33], query: payload[34]});\n    let promotion = await newProject(userID, {name: payload[35], top_level: true, is_sequential: false});\n    let online = await newTask(userID, {\n            name: payload[36],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, online, promotion);\n    let dis = await newTask(userID, {\n            name: payload[37],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, dis, promotion);\n    let patreon = await newTask(userID, {\n        name: payload[38],\n            desc: \"\",\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, patreon, promotion);\n    let yiipee = await newTask(userID, {\n        name: payload[39],\n            desc: payload[40],\n            isFlagged: false,\n            isFloating: false,\n            isComplete: false,\n            project: promotion,\n            tags: [],\n            timezone: tz,\n            repeat: {rule: \"none\"},\n        }\n    );\n    await associateTask(userID, yiipee, promotion);\n}\n\nexport default {util, getTasks, getTasksWithQuery, getInboxTasks, getDSTasks, getInboxandDS, removeParamFromTask, getTopLevelProjects, getProjectsandTags, getPerspectives, modifyProject, modifyTask, modifyPerspective, newProject, newPerspective, newTag, newTask, completeTask, dissociateTask, associateTask, associateProject, dissociateProject, deleteTask, deletePerspective, deleteProject, selectTasksInRange, getProjectStructure, getItemAvailability, getTaskInformation, getDSRow, deleteTag, getCompletedTasks, onBoard};\n\n","import dbObj from \"./ObjectManager\";\n\nconst perspectiveHandler = function(){\n    let cgs = {\n        taskFilter: /([^\\w\\d\\s\\[]{1,2}[\\w\\s]+)/gi,\n        taskCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\]/gi,\n        logicCaptureGroup: /(.*) *([<=>]) *(.*)/gi,\n        globalCaptureGroup: /\\[(([^\\w\\d\\s]{1,2}[\\w\\s]+) *)*?\\](\\$\\w+)* *[<=>]* * *(\\$\\w+)*/gi,\n        clear: function() {\n            this.taskFilter.lastIndex = 0;\n            this.taskCaptureGroup.lastIndex = 0;\n            this.logicCaptureGroup.lastIndex = 0;\n            this.globalCaptureGroup.lastIndex = 0;\n        }\n    };\n\n    let getCaptureGroups = (str) => str.match(cgs.globalCaptureGroup);\n\n    let parseTaskCaptureGroup = (str) => (str.split(\"$\").map(i=>i.trim()));\n\n    let parseSpecialVariables = function(...val) {\n        let vr;\n        switch(val[0]) {\n           case \"today\":\n               vr = new Date();\n               break;\n        }\n        return vr;\n    };\n\n    let compileTask = async function(uid, str, pPaT, additionalFilter) {\n        let queries = additionalFilter ? [additionalFilter] : [];\n        let taskCache = [];\n        let antiCache = [];\n        await Promise.all(str.match(cgs.taskFilter).map(async function(e) {\n            e = e.trim();\n            if (e[0] !== \"!\") {\n                switch (e[0]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(1, e.length)];\n                        queries.push(['project', '==', pid]);\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                taskCache = [...taskCache, ...(await compileTask(uid, str.replace(e.slice(1, e.length), pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', 'has',  pPaT[1][1][e.slice(1, e.length)]]);\n                }\n            } else {\n                switch (e[1]) {\n                    case \".\":\n                        let pid = pPaT[0][1][e.slice(2, e.length)];\n                        queries.push(['project', '!=', pid]);\n\n                        let pS = await dbObj.getProjectStructure(uid, pid);\n                        for (let i of pS.children)\n                            if (i.type === \"project\")\n                                antiCache = [...antiCache, ...(await compileTask(uid, str.replace(e, \".\"+pPaT[0][0][i.content.id]), pPaT, additionalFilter))];\n                        break;\n                    case \"#\":\n                        queries.push(['tags', '!has',  pPaT[1][1][e.slice(2, e.length)]]);\n                }\n            }\n            queries.push(['isComplete', '==', false]);\n        }));\n        return [...taskCache, ...(await dbObj.getTasksWithQuery(uid, dbObj.util.select.all(...queries)))].filter(i=>(!antiCache.includes(i)));\n    };\n\n    let compileLogicCaptureGroup = async function(uid, tasks, cmp, value, ltr) {\n        let taskInfo = await Promise.all(tasks[0].map(async function(t){\n            return [await dbObj.getTaskInformation(uid, t), t];\n        }));\n        let taskCompValues;\n        // TODO: add more?\n        if (tasks[1].includes(\"due\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].due ? new Date((t[0].due.seconds)*1000) : undefined)]);\n        } else if (tasks[1].includes(\"defer\")) {\n            taskCompValues = taskInfo.map(t => [t[1], (t[0].defer ? new Date((t[0].defer.seconds)*1000) : undefined)]);\n        }\n        let filteredResults;\n        let util_datesequal = function(dateA, dateB) {\n            return dateA.getFullYear() === dateB.getFullYear() && dateA.getMonth() === dateB.getMonth() && dateA.getDate() === dateB.getDate();\n        };\n        switch (cmp) {\n            case \"=\":\n                taskCompValues = taskCompValues.filter(t=>util_datesequal(t[1], value));\n                break;\n            case \">\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] > value) : taskCompValues = taskCompValues.filter(t => t[1] < value);\n                break;\n            case \"<\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] < value) : taskCompValues = taskCompValues.filter(t => t[1] > value);\n                break;\n            case \">=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] >= value) : taskCompValues = taskCompValues.filter(t => t[1] <= value);\n                break;\n            case \"<=\":\n                ltr ? taskCompValues = taskCompValues.filter(t => t[1] <= value) : taskCompValues = taskCompValues.filter(t => t[1] >= value);\n                break;\n\n        }\n        return (taskCompValues.map(t => t[0]));\n    };\n\n    let getPerspectiveFromString = async function(uid, pStr, filter, order) {\n        let pPaT = await dbObj.getProjectsandTags(uid);\n        let pRes = await getCaptureGroups(pStr);\n        if (!pRes) {\n            return [];\n        }\n        let fquery; \n        switch (filter) {\n            case \"avail\":\n                fquery = [\"defer\", \"<\", ((new Date()).getTime())/1000];\n                break;\n            case \"flagged\":\n                fquery = [\"isFlagged\", \"==\", true];\n                break;\n        }\n        let tasks = await Promise.all(pRes.map(async function(i) {\n            cgs.clear();\n            let logicSort = cgs.logicCaptureGroup.exec(i);\n            let t;\n            if(logicSort) {\n                // handle logic group\n                let [, lhs, cmp, rhs] = logicSort;\n                [lhs, rhs] = [parseTaskCaptureGroup(lhs), parseTaskCaptureGroup(rhs)];\n                if (cgs.taskCaptureGroup.test(lhs)) {\n                    lhs = [await compileTask(uid, lhs[0], pPaT, fquery), lhs[1]];\n                    rhs = parseSpecialVariables(rhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, lhs, cmp, rhs, true)); // true (that is, left to right order)\n                } else {\n                    rhs = [await compileTask(uid, rhs[0], pPaT, fquery), rhs[1]];\n                    lhs = parseSpecialVariables(lhs[1]);\n                    t = (await compileLogicCaptureGroup(uid, rhs, cmp, lhs, false)); // false (that is, right to left order)\n                }\n            } else {\n                // handle standard group\n                t = (await compileTask(uid, i, pPaT, fquery));\n            }\n            return t;\n        }));\n        tasks = [...new Set(tasks.flat(1))];\n        let taskObjs = await Promise.all(tasks.map(async function(t){\n            return {id: t, ...(await dbObj.getTaskInformation(uid, t))}\n        })).then(values=>values);\n        switch (order) {\n            case \"duas\":\n                taskObjs.sort((a,b)=>(a.due?a.due.seconds:10000000000)-(b.due?b.due.seconds:10000000000));\n                break;\n            case \"duds\":\n                taskObjs.sort((a,b)=>(b.due?b.due.seconds:1)-(a.due?a.due.seconds:1));\n                break;\n            case \"deas\":\n                taskObjs.sort((a,b)=>(a.defer?a.defer.seconds:10000000000)-(b.defer?b.defer.seconds:10000000000));\n                break;\n            case \"deds\":\n                taskObjs.sort((a,b)=>(b.defer?b.defer.seconds:1)-(a.defer?a.defer.seconds:1));\n                break;\n\n        }\n        // Final availability filter for sequential\n        let aval = await dbObj.getItemAvailability(uid);\n        if (filter === \"avail\") taskObjs = taskObjs.filter(it => (aval[it.id] !== undefined)); \n        return taskObjs.map(t=>t.id);\n    };\n\n    return {calc: getPerspectiveFromString};\n}();\n\nexport default perspectiveHandler;\n\n","import dbFuncs from \"./src/ObjectManager\"\nimport pspObj from \"./src/PerspectiveManager\"\nimport dbRefObj from \"./src/DBManager\"\n\n\nexport default {start:dbRefObj.__init__, use:dbRefObj.useDb, db: dbFuncs, perspective: pspObj, flush: dbRefObj.flush};\n\n","const { parseFromTimeZone } = require('date-fns-timezone')\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\nclass Gruntman {\n\n    /*\n     * Hello human,\n     * good afternoon.\n     * I am gruntman.\n     *\n     * Register refreshers with me\n     * so I could handle refreshes.\n     *\n     * Do actions with me\n     * so I could reverse them.\n     *\n     * Undo happens from me\n     * refresh happens from me.\n     *\n     *\n     * @jemoka\n     *\n     */\n\n    constructor(engine) {\n        this.e = engine;\n        this.refresher = ()=>{};\n        this.callbackRefresherReleased = true; // prevent live callback merge conflicts\n        this.conflictResolution = 1000; // 1000 ms = 1s worth of conflict time.\n        this.releaseTimeout = undefined;\n\n\n        this.doers = {\n            macro: {\n                applyOrder: async function (options) {\n                    // TODO undo handler?\n                    if (options.items.length !== options.order.length) \n                        console.error(\"Length of items and order length must be the same!\")\n                    await Promise.all(options.order.map((e,i) => {\n                        let item = options.items[e];\n                        if (item.type === \"task\") \n                            return engine.db.modifyTask(options.uid, item.content, {order: i});\n                        else if (item.type === \"project\")\n                            return engine.db.modifyProject(options.uid, item.content, {order: i});\n                            //await engine.db.modifyProject(options.uid, e.content, {order: options.order[i]});\n                    }));\n                    return {uid:options.uid}; // TODO HANDLE UNDO\n                }\n            },\n            tag: {\n                create: async function (options) {\n                    let newTag = await engine.db.newTag(options.uid, options.name);\n                    return {uid: options.uid, id: newTag};\n                }\n            },\n            task: {\n                create: async function (options) {\n                    let ntObject = {\n                        desc: \"\",\n                        isFlagged: false,\n                        isFloating: false,\n                        isComplete: false,\n                        project: options.pid?options.pid:\"\",\n                        tags: [],\n                        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n                        repeat: {rule: \"none\"},\n                        name: options.name?options.name:\"\",\n                    };\n\n                    if (options.due)\n                        ntObject.due = options.due\n                    if (options.defer)\n                        ntObject.defer = options.defer\n\n                    let ntID = await engine.db.newTask(options.uid, ntObject)\n\n                    if (options.pid && options.pid != \"\")\n                        engine.db.associateTask(options.uid, ntID, options.pid);\n\n                    return {uid: options.uid, tid: ntID};\n                },\n                update: async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, options.query)\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__project:  async function (options) {\n                    let tInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {project: options.project})\n\n                    if (options.oldProject)\n                        await engine.db.dissociateTask(options.uid, options.tid, options.oldProject);\n\n                    if (options.project !== \"\")\n                        await engine.db.associateTask(options.uid, options.tid, options.project);\n\n                    return {uid: options.uid, tid: options.tid, tInfo};\n                },\n                update__uncomplete: async function (options) {\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: false, completeDate: new Date()});\n                    return {uid: options.uid, tid: options.tid, taskInfo};\n                },\n                update__complete: async function (options) {\n                    await engine.db.modifyTask(options.uid, options.tid, {isComplete: true, completeDate: new Date()})\n                    let taskInfo = await engine.db.getTaskInformation(options.uid, options.tid);\n                    let due = (\n                        taskInfo.due ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.due.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.due.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ):\n                        undefined\n                    );\n                    let defer = (\n                        taskInfo.defer ?\n                        (taskInfo.isFloating ?\n                            new Date(taskInfo.defer.seconds*1000) :\n                            parseFromTimeZone(\n                                (new Date(taskInfo.defer.seconds*1000)).toISOString(),\n                                {timeZone: taskInfo.timezone}\n                            )\n                        ): undefined\n                    );\n                    let repeat = taskInfo.repeat;\n                    if (repeat.rule !== \"none\" && due) {\n                        let rRule = repeat.rule;\n                        if (rRule === \"daily\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setDate(due.getDate() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        } else if (rRule === \"weekly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let current = \"\";\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                    defer.setDate(defer.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let current = \"\";\n                                    while (!rOn.includes(current)) {\n                                        due.setDate(due.getDate() + 1);\n                                        let dow = due.getDay();\n                                        switch (dow) {\n                                            case 1:\n                                                current = \"M\";\n                                                break;\n                                            case 2:\n                                                current = \"T\";\n                                                break;\n                                            case 3:\n                                                current = \"W\";\n                                                break;\n                                            case 4:\n                                                current = \"Th\";\n                                                break;\n                                            case 5:\n                                                current = \"F\";\n                                                break;\n                                            case 6:\n                                                current = \"S\";\n                                                break;\n                                            case 0:\n                                                current = \"Su\";\n                                                break;\n                                        }\n                                    }\n                                } else {\n                                    due.setDate(due.getDate()+7);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"monthly\") {\n                            if (defer) {\n                                let rOn = repeat.on;\n                                let dow = due.getDate();\n                                let oDow = due.getDate();\n                                let defDistance = due-defer;\n                                if (rOn) {\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                let rOn = repeat.on;\n                                if (rOn) {\n                                    let dow = due.getDate();\n                                    let oDow = due.getDate();\n                                    while ((!rOn.includes(dow.toString()) && !(rOn.includes(\"Last\") && (new Date(due.getFullYear(), due.getMonth(), due.getDate()).getDate() === new Date(due.getFullYear(), due.getMonth()+1, 0).getDate()))) || (oDow === dow)) {\n                                        due.setDate(due.getDate() + 1);\n                                        dow = due.getDate();\n                                    }\n                                } else {\n                                    due.setMonth(due.getMonth()+1);\n                                }\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n                        } else if (rRule === \"yearly\") {\n                            if (defer) {\n                                let defDistance = due-defer;\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due, defer:(new Date(due-defDistance))});\n                            } else {\n                                due.setFullYear(due.getFullYear() + 1);\n                                engine.db.modifyTask(options.uid, options.tid, {isComplete: false, due:due});\n                            }\n\n                        }\n                    }\n                    return {message: \"Todo TODO TODO Todo: undo pack?\"}\n                }\n            },\n            project: {\n                create: async function (options) { // create project\n                    let projObj = {\n                        name: \"\",\n                        top_level: options.parent === undefined,\n                        is_sequential: false,\n                    };\n                    let npid = options.parent ? await engine.db.newProject(options.uid, projObj, options.parent) : await engine.db.newProject(options.uid, projObj) // make a project... with or without a parent\n                    if (options.parent) {\n                        engine.db.associateProject(options.uid, npid, options.parent);\n                    }// associate the two\n                    return {uid: options.uid, pid: npid}\n                },\n                delete: async function (options) {\n                    await engine.db.deleteProject(options.uid, options.pid);\n                    if (options.parent)\n                        engine.db.dissociateProject(options.uid, options.pid, options.parent);\n\n                    return {uid: options.uid, TODO: \"TODO\"} // TODO: how do we undelete a project?\n                },\n                update__name: async function (options) { // update the project name!\n                    let possibleProjects = await engine.db.getProjectsandTags(options.uid);\n                    // get all possible project\n                    let projectName = possibleProjects[0][0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {name: options.name});\n                    // return what we need to undo\n                    return {projectName, uid: options.uid}\n                },\n                update__pstate: async function (options) { // update the project name!\n                    let currentProject = await engine.db.getProjectStructure(options.uid, options.id, false); // get current project info\n                    // get all possible project\n                    let is_sequential = currentProject;\n                    // get the one we want based on page id\n\n                    // modify the project\n                    await engine.db.modifyProject(options.uid, options.id, {is_sequential: options.is_sequential});\n                    // return what we need to undo\n                    return {is_sequential, uid: options.uid}\n                },\n                associate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.associateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                },\n                dissociate:  async function (options) {\n                    //await engine.db.modifyTask(options.uid, options.tid, options.query)\n                    await engine.db.dissociateTask(options.uid, options.tid, options.pid);\n                    return {uid: options.uid, tid: options.tid};\n                }\n            },\n            perspective: {\n                create: async function(options) {\n                    let pObj = {\n                        name: \"\",\n                        avail: \"remain\",\n                        tord: \"duds\",\n                        query: \"\"\n                    }\n                    let npspid = await engine.db.newPerspective(options.uid, pObj);\n                    return {uid: options.uid, pid: npspid};\n                },\n                update__perspective: async function (options) { // update the perspective name!\n                    let possiblePerspectives = await engine.db.getPerspectives(options.uid);\n                    // get all possible perspectives\n                    let perspectiveObject = possiblePerspectives[0][options.id]\n                    // get the one we want based on page id\n\n                    // modify the perspective\n                    await engine.db.modifyPerspective(options.uid, options.id, options.payload);\n\n                    // return what we need to undo\n                    return {perspectiveObject, uid: options.uid}\n                },\n\n                delete__perspective: async function (options) { // update the perspective name!\n                    console.log(\"perspective delete gruntman func\")\n                    // TODO: is this it? @jack\n                    await engine.db.deletePerspective(options.uid, options.id);\n                }\n            },\n        } // type:action:functionaction (return resources)\n        this.undoers = {\n            task: {\n                update: \"task.set\"\n            }\n        } // action: string\n        this.backlog = []; // actionID\n        this.undolog = []; // actionID\n        this.taskLog = {\n        } // actionID: [type, resources]\n        this.canUndo = {\n            task: {\n                update: true,\n            }\n        }\n        this.schedulers = {\n        } // util function onChange fixer-upper\n        this.updateLock = false;\n        this.updateInterval = undefined;\n\n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    halt() {\n        for (let key in this.schedulers)\n            clearTimeout(this.schedulers[key])\n        //this.refresher = ()=>{}; TODO TODO may cause memory leaks in _very_ narrow circumstances but uncomming will break project toggles due to refresher mounting too quickly\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    lockUpdates() {\n        this.updateLock = true;\n        if (this.updateInterval)\n            clearTimeout(this.updateInterval);\n        this.updateInterval = undefined;\n    }\n\n    unlockUpdates(interval=580) {\n        this.updateLock = false;\n        this.updateInterval = setTimeout(this.refresher, interval);\n    }\n\n    requestRefresh() {\n        if (!this.updateLock && this.callbackRefresherReleased)\n            this.refresher();\n    }\n\n    /*\n     * @param refresher: refresher function to refresh what you registered\n     */\n\n    registerRefresher(r) {\n        this.refresher = r;\n        // lock updates every time a new page loads to prevent MeRGE Conflicts\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n    }\n\n    registerScheduler(callback, identifier, wait=500) {\n        if (this.schedulers[identifier])\n            clearTimeout(this.schedulers[identifier]); // clear the timeout\n        this.schedulers[identifier] = setTimeout(callback, wait);\n    }\n\n    async do(actionName, options, bypassUpdates, isUndo, unsafe_FORCE_UPDATES) {\n        /*\n         * @param actionName => action directive like task.edit or project.create\n         * @param options => options\n         *\n         */\n\n        // Lock updates every time cacheRef is called to prevent mErGE ConFLIcTS\n        if(this.releaseTimeout) clearTimeout(this.releaseTimeout);\n        this.callbackRefresherReleased= false;\n        this.releaseTimeout = setTimeout(()=>{this.callbackRefresherReleased=true; this.releaseTimeout=undefined}, this.conflictResolution);\n\n        let actionID = this.random();\n\n        let nodes = actionName.split(\".\");\n\n        let action = this.doers;\n        while (nodes.length > 0) {\n            action = action[nodes.shift()];\n        }\n\n        if (isUndo) this.undolog.push(actionID);\n        else this.backlog.push(actionID);\n\n        let resources = await action(options);\n\n        this.taskLog[actionID] = [actionName, resources];\n\n        if (!this.updateLock && !bypassUpdates)\n            this.refresher();\n\n        if (unsafe_FORCE_UPDATES)\n            this.refresher();\n\n        return await resources;\n    }\n\n    random() { return (((1+Math.random())*0x10000)|0).toString(16)+\"-\"+(((1+Math.random())*0x10000)|0).toString(16);}\n}\n\nexport default Gruntman;\n\n","import React, { Component } from 'react';\nimport { Plugins } from '@capacitor/core';\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\n\nimport $ from \"jquery\";\n\n\nimport './Auth.css';\n\n\nimport '../themefiles/condutiontheme-default.css';\nimport '../themefiles/condutiontheme-default-dark.css';\nimport '../themefiles/condutiontheme-default-light.css';\n\n\n\nconst autoBind = require('auto-bind/react');\n\n\nconst { Storage } = Plugins;\n\nclass Auth extends Component {\n    constructor(props) {\n        super(props);\n\n        let greetings = [\"Hello,\", \"Hey,\", \"Heyo,\", \"Aloha,\", \"Yo!\"];\n\n        /*\n         * mode 0 = login in progress, \n         *      1 = new account in progress,\n         *      2 = recovery in progress, \n         *      3 = email unverified,\n         *      4 = email verified, proceed create\n         *      5 = recovery executed, shepeard them back\n         *\n         */\n\n        this.state = {\n            authMode: 0,\n            showExtra: false,\n            greeting: greetings[Math.floor(Math.random() * greetings.length)]\n        };\n\n        autoBind(this);\n    }\n\n    doLogin() {\n        let view = this;\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            firebase.auth().signInWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).then(function() {\n                if (firebase.auth().currentUser.emailVerified)\n                     view.props.dispatch({service: \"firebase\", operation: \"login\"});\n                else\n                    view.setState({authMode: 3});\n            }).catch(function(error) {\n                    // Handle Errors here.\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log(error);\n                    $(\".auth-upf\").addClass(\"wrong\");\n            });\n        });\n    }\n\n    doCreate() {\n        // TODO: actually create the account\n        let view = this;\n        let problem = false;\n        firebase.auth().createUserWithEmailAndPassword($(\"#email\").val(), $(\"#password\").val()).catch(function(error) {\n            view.setState({showExtra: true}, ()=>$('#need-verify').html(error.message));\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                firebase.auth().currentUser.sendEmailVerification();\n                firebase.auth().currentUser.updateProfile({displayName: $(\"#name\").val()});\n                view.setState({authMode: 4, showExtra: true});\n            }\n        })\n    }\n\n    dispatchCreate() {\n        firebase.auth().currentUser.reload().then(()=>{;\n            if (firebase.auth().currentUser.emailVerified)\n                this.props.dispatch({service: \"firebase\", operation: \"create\"});\n            else\n                $('#need-verify').html(\"Please double-check that you tapped the verification link in your email.\");\n        });\n    }\n\n    doRecover() {\n        let problem = false;\n        let view = this;\n        firebase.auth().sendPasswordResetEmail($(\"#email\").val()).catch(function(error) {\n            view.setState({showExtra: true});\n            $('#need-verify').html(error.message);\n            problem=true;\n        }).then(function() {\n            if (!problem) {\n                view.setState({authMode: 5});\n            }\n        })\n        // TODO: actually recover the account\n    }\n\n    doLocal() {\n        this.props.dispatch({service: \"json\", operation: \"login\"});\n    }\n\n    render() {\n        return (\n            <div id=\"auth-content-wrapper\">\n                <div id=\"auth-left-menu\">\n                    <div className=\"menu-area\" style={{height:\"100%\"}}>\n                        <div className=\"auth-component\"></div>\n                        <div className=\"auth-component\"></div>\n                        <span id=\"auth-image-credit\">Image by <span style={{fontWeight: 500}}>Tobias Keller/Paweł Czerwiński</span></span>\n                    </div>\n                </div>\n                <div id=\"authwall\">\n                    <h1 id=\"greeting-auth\">{this.state.greeting}</h1><span id=\"welcome-auth-msg\">Welcome to Condution.</span>\n                    <h3 className=\"greeting-auth-subtitle\" id=\"greeting-auth-normal\">{(()=>{\n                        switch (this.state.authMode) {\n                            case 2:\n                                return \"No worries! Let's recover your password.\";\n                            default:\n                                return \"Good to see you. Please sign in or tap Use Locally.\";\n\n                        }\n                    })()}</h3> \n                    <input className=\"auth-upf\" id=\"name\" type=\"text\" autoComplete=\"off\" defaultValue=\"\" placeholder=\"What should we call you?\" style={{display: this.state.authMode === 1 ? \"block\" : \"none\"}}/>\n                    <input className=\"auth-upf\" id=\"email\" type=\"email\" autoComplete=\"off\" defaultValue=\"\" placeholder=\"Email\" />\n                    <input className=\"auth-upf\" id=\"password\" type=\"password\" autoComplete=\"off\" defaultValue=\"\" placeholder=\"Password\" style={{display: this.state.authMode !== 2 ? \"block\" : \"none\"}} onKeyPress={(event)=>{\n                        if (event.key === \"Enter\") {\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                                case 5: \n                                    this.doLogin();\n                                    break;\n                            }\n                        }\n                    }}/>\n                    {(() => {\n                        if (this.state.authMode === 3 || this.state.authMode ===  4 || this.state.authMode === 5 || this.state.showExtra) return <span id=\"need-verify\">\n                            {(()=>{\n                                switch(this.state.authMode){\n                                    case 3:\n                                        return \"Check and verify your email, then tap Let's Do This!\";\n                                    case 4:\n                                        return \"Check and verify your email, then tap Proceed!\";\n                                    case 5:\n                                        return \"Check and verify your email, then return to login.\";\n\n                            }})()}\n                        </span>\n                    })()}\n                    <span id=\"recover-password\" style={{display: this.state.authMode === 3 ? \"none\" : \"block\"}} onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 2});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 2:\n                                    return \"Remembered? Login\";\n                                default:\n                                    return \"Recover Password\";\n\n                            }\n                        })()}</span>\n                    <div id=\"auth-actiongroup\">\n                        <div id=\"newuser\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return this.setState({authMode: 0});\n                                default:\n                                    return this.setState({authMode: 1});\n\n                            }\n                        }}>{(()=>{\n                            switch (this.state.authMode) {\n                                case 1:\n                                    return \"Log in\";\n                                default:\n                                    return \"Make an account\";\n\n                            }\n                        })()}</div>\n                        <div id=\"login\" onClick={()=>{\n                            switch (this.state.authMode) {\n                                case 0:\n                                    this.doLogin();\n                                    break;\n                                case 1:\n                                    this.doCreate();\n                                    break;\n                                case 2:\n                                    this.doRecover();\n                                    break;\n                                case 4:\n                                    this.dispatchCreate();\n                                    break;\n                            }\n                        }}>\n                            <i className=\"fas fa-snowboarding\" style={{paddingRight: \"5px\"}}></i><span id=\"login-text\">{(() => {\n                                switch(this.state.authMode) {\n                                    case 0:\n                                    case 3:\n                                        return \"Let's Do This!\";\n                                    case 1:\n                                        return \"Verify Email!\";\n                                    case 2:\n                                        return \"Let's Recover!\";\n                                    case 4:\n                                        return \"Proceed!\";\n                                    case 5:\n                                        return \"Proceed!\";\n                                }\n                            })()}</span>\n                        </div>\n                        {(() => {\n                            if (this.state.authMode !== 2) return <div className=\"convert-src\" id=\"ulac\" onClick={this.doLocal}>Use Locally</div>\n                        })()}\n                    </div>\n                </div>\n            </div>\n      );\n    }\n}\n\nexport default Auth;\n","import { IonContent, IonPage, IonSplitPane, IonMenu, IonText, IonIcon, IonMenuButton, IonRouterOutlet } from '@ionic/react';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Pages.css';\n\nconst autoBind = require('auto-bind/react');\n\nfunction Loader(props) {\n    return (\n        <div style={{width: \"100%\", height: \"100%\", position: \"absolute\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{marginRight: 20, maxWidth: 500}}>\n                <b>Condution v1.0.0-alpha.0</b> <br />\n\n                    <i>Like, why are you reading this?</i> <br />\n\n                    If there is something here [{props.error}], <br />\n                then talk to Jack or something. Or fix it. <br />\n                    INTERNAL USE ONLY. DO NOT DISTRIBUTE.\n            </div>\n            <div style={{marginLeft: 20, maxWidth: 500}}>\n                <br />\n\n                <pre style={{fontSize: 10}}>\n                    {`\n    Copyright (C) 2019-2020. Shabang Systems, LLC\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see https://www.gnu.org/licenses/.\n                    `}\n                </pre>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Loader;\n\n","/* Global Imports */\nimport React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, IonMenu, setupConfig } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Themefiles */\nimport './themefiles/condutiontheme-default.css';\nimport './themefiles/condutiontheme-default-dark.css';\nimport './themefiles/condutiontheme-default-light.css';\nimport './themefiles/condutiontheme-black-n-red.css';\n\n/* Font awesome */\nimport './static/fa/scripts/all.min.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n/* Capacitor core plugins + jQuery */\nimport { Plugins } from '@capacitor/core';\nimport $ from \"jquery\";\n\n/* Our Lovley Core Engine */\nimport Engine from './backend/CondutionEngine';\nimport Gruntman from './gruntman';\n\n/* Firebase */\nimport * as firebase from \"firebase/app\";\n\n/* Auth and store modules */\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n/* Views that we need */\nimport Auth from './pages/Auth';\nimport Loader from './pages/Loader';\nimport Home from './pages/Home';\n\n\n/* AutoBind */\nconst autoBind = require('auto-bind/react');\n\n\n/* Storage Plugins */\nconst { Storage } = Plugins;\n\n\n/* \n * Hello human, good morning.\n *\n * Hope you are doing well. Thanks (why are you) visiting App.jsx?\n *\n * I manage global routing, auth handling, and all that jazz.\n * You should not touch me to change the interface.\n * But I guess I change the interface. So.\n *\n * I kind of change the interface?\n *\n * Anyways, I return one of Loader, Auth, or Home depending on auth state.\n *\n * And check for the auth state to determine which one to return\n *\n * It's not really a poem, isn't it.\n *\n * @Jemoka\n *\n */\n\nsetupConfig({ swipeBackEnabled: false, }); // globally disable swipe b/c we implemented our own\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        // We start with setting our state. We don't know our user's UID (duh)\n        this.state = {authMode: \"loader\", uid: \"\", displayName: \"\"};\n        \n        // We also set the theme based on the user's media query\n        if (window.matchMedia('(prefers-color-scheme:dark)').matches) {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-dark\");\n        }\n        else {\n            $(\"body\").removeClass();\n            $(\"body\").addClass(\"condutiontheme-default-light\");\n        }\n\n        // Make ourselves a nice gruntman\n        this.gruntman = new Gruntman(Engine);\n        \n        // And AutoBind any and all functions\n        autoBind(this);\n    }\n\n    async componentDidMount() {\n        // This IS in fact the view\n        let view = this;\n\n        // Light the fire, kick the tires an instance \n        // of {firebase}, and initializing the firebase \n        // and json engines\n        await Engine.start({firebase}, \"firebase\", \"json\");\n\n\n        // ==Handling cached dispatch==\n        // So, do we have a condution_stotype? \n        Storage.get({key: 'condution_stotype'}).then((dbType) => {\n            switch (dbType.value) {\n                // If its firebase \n                case \"firebase\":\n                    // Check if we actually has a user\n                    firebase.auth().onAuthStateChanged(function(user) {\n                        if (!user)\n                            view.authDispatch({operation:\"logout\"});\n                        // If we have one, shift the engine into firebase mode\n                        else {\n                            Engine.use(\"firebase\", view.gruntman.requestRefresh);\n                            // Load the authenticated state, set authmode as \"firebase\" and supply the UID\n                            view.setState({authMode: \"firebase\", uid: user.uid, displayName: user.displayName});\n                        }\n                    })\n                    break;\n                // If its json\n                case \"json\":\n                    // Shift the engine into json mode\n                    Engine.use(\"json\", view.gruntman.requestRefresh);\n                    // Load the authenticated state, set the authmode as \"json\" and supply \"hard-storage-user\" as UID\n                    this.setState({authMode: \"json\", uid:\"hard-storage-user\"});\n                    break;\n                // If there is nothing, well, set the authmode as \"none\"\n                default:\n                    this.setState({authMode: \"none\", uid:undefined});\n                    break;\n            }\n        });\n    }\n\n    // authDispatch handles the dispatching of auth operations. {login, create, and logout}\n    authDispatch(mode) {\n        // TODO: that's a state machine! @zbuster05\n        let uid;\n        let name;\n        switch (mode.operation) {\n            // operation mode login\n            case \"login\":\n                // shift the engine into whatever mode we just logged into\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                // write the login state into cookies\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                // get the UID\n\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n                // load the authenicated state and supply the UID\n                this.setState({authMode: mode.service, uid, displayName: name});\n                break;\n            // operation mode create\n            case \"create\":\n                // setthe engine as whatever service\n                Engine.use(mode.service, this.gruntman.requestRefresh);\n                Storage.set({key: 'condution_stotype', value: mode.service});\n                switch (mode.service) {\n                    // if its firebase\n                    case \"firebase\":\n                        // set the UID as the UID\n                        uid = firebase.auth().currentUser.uid;\n                        name = firebase.auth().currentUser.displayName\n                        break;\n                    default:\n                        // set the UID as \"hard-storage-user\"\n                        uid = \"hard-storage-user\";\n                        name = \"\"\n                        break;\n                }\n\n                // TODO: do onboarding\n                // Here\n                console.log(\"I would be onboarding, but... alas.\");\n                // TODO: be done with onboarding\n                // Set the storage type and write it into cookies\n                // load the authenicated state and TODO supply the UID\n                this.setState({authMode: mode.service, uid, displayName: name});\n                break;\n            case \"logout\":\n                // Set the storage type to nada and write it into cookies\n                Storage.set({key: 'condution_stotype', value: \"none\"});\n                // Sign out if we are signed in\n                firebase.auth().signOut();\n                // Load the auth view\n                this.setState({authMode: \"none\", name: \"\"});\n                break;\n        }\n    }\n\n    render() {\n        // Check for onboarding here\n        // then continue\n        // Which authmode?\n        switch (this.state.authMode) {\n            // if we are at the first-paint load mode, do this:\n            case \"loader\":\n                return <Loader />\n            // if we did not authenticate yet, load the auth view:\n            case \"none\":\n                return <Auth dispatch={this.authDispatch}/>;\n            // if we did auth, load it up and get the party going\n            case \"firebase\":\n            case \"json\":\n                return <Home engine={Engine} uid={this.state.uid} dispatch={this.authDispatch} gruntman={this.gruntman} displayName={this.state.displayName}/>;\n            // wut esta this auth mode? load the loader with an error\n            default:\n                console.error(`CentralDispatchError: Wut Esta ${this.state.authMode}`);\n                return <Loader isError={true} error={this.state.authMode}/>\n        }\n    }\n}\n\nexport default App;\n//class App extends Component {\n    //render() {\n        //return (\n            //<IonApp>\n                //<Home />\n            //</IonApp>\n        //);\n    //}\n//}\n\n/*export default App;*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n\n/*\n * Hello human,\n * good morning.\n *\n * I am the repeat UI\n *\n * Rule denotes the repeat major rule: {no repeat, daily, weekly: yearly}\n * Advanced denotes whether the user is using fancy repeat\n * On denotes the advanced repeat signals. (like mon, tue, sat or something.)\n *\n * @jemoka\n *\n */\n\nconst autoBind = require('auto-bind/react');\n\nclass Repeat extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n\n        this.state = {\n            name: \"\", // task's name\n            rule: \"none\", // the repeat rule\n            advanced: false, // advanced or not\n            on: undefined, // advanced repeat rules\n        }\n    }\n\n    async loadTask() {\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n        this.setState({\n            name: taskInfo.name, // name is name\n            rule: taskInfo.repeat ? taskInfo.repeat.rule : \"none\", // rule is rule, if there's a rule\n            advanced: taskInfo.repeat ? (taskInfo.repeat.on !== undefined) : false, // on is on, if there's a rule\n            on: taskInfo.repeat ? taskInfo.repeat.on : undefined, // on is on, if there's a rule\n        });\n    }\n\n    componentDidMount() {\n        this.loadTask();\n    }\n\n    render() {\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}} cssClass={\"task-repeat \"+(()=>{\n                // Different repeat modes require different height modals\n                 switch (this.state.rule) {\n                      case \"none\":\n                          return \"task-repeat__default\";\n                      case \"daily\":\n                          return \"task-repeat__default\";\n                      case \"weekly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-weekly\" : \"task-repeat__default\");\n                      case \"monthly\":\n                          return (this.state.advanced ? \"task-repeat__advanced-monthly\" : \"task-repeat__default\");\n                      case \"yearly\":\n                          return \"task-repeat__default\";\n                  }\n            })()}>\n                <div>\n                    {/* Header */}\n                    <div className=\"repeat-header\">\n                        {/* Repeat name */}\n                        <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\"}}>\n\t\t\t                <b className=\"bold-prefix\" >Repeat</b> \n\t\t\t                <div className=\"repeat-task-name\">{this.state.name}</div>\n\t\t\t            </span>\n                        {/* Close button */}\n                        <a className=\"repeat-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                    </div>\n                    <div>\n                        <div className=\"repeat-basic-row\">\n                            <div className=\"repeat-rule-selector\">\n                            <span>\n                                <i className=\"repeat-label fa fa-redo\"></i>\n                                <span className=\"repeat-label\">Repeat</span>\n                            </span>\n                            {/* The big select, force iOS style */}\n                            <IonSelect className=\"repeat-select\" interface=\"popover\" value={this.state.rule} mode=\"ios\" onIonChange={e=>{\n                                    // Set the repeat\n                                    this.props.gruntman.do(\n                                        \"task.update\", \n                                        { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: e.detail.value}}}\n                                    )\n\n                                    // Set the state too!\n                                    this.setState({rule: e.detail.value, advanced: false, on: undefined});\n \n                                }}>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"none\">None</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"daily\">Daily</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"weekly\">Weekly</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"monthly\">Monthly</IonSelectOption>\n                                <IonSelectOption className=\"repeat-select__option\" value=\"yearly\">Yearly</IonSelectOption>\n                            </IonSelect>\n                            </div>\n                                {\n                                    \n                                <a style={{color: \"var(--decorative-light-alt)\", float: \"right\", cursor: \"pointer\", display: [\"weekly\", \"monthly\"].includes(this.state.rule) ? \"inline\" : \"none\" }} className={\"fas \" + (this.state.advanced ? \"fa-caret-down\":\"fa-caret-up\")} onClick={()=> {\n                                    if (this.state.advanced) {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule}}}\n                                        ) // undo advanced \n                                        this.setState({rule: this.state.rule, advanced: false, on: undefined}); // set the state too!\n                                    } else {\n                                        this.props.gruntman.do(\n                                            \"task.update\", \n                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: []}}}\n                                        ) // do advanced \n                                        this.setState({rule: this.state.rule, advanced: true, on: []}); // set the state too!\n                                    }\n                                }}></a>\n                                }\n                        </div>\n                    </div>\n                    <div style={{margin: \"10px 20px\", color: \"var(--content-normal-alt)\"}}>\n                        {(()=>{\n                            if (this.state.advanced)\n                                switch (this.state.rule) {\n                                    case \"weekly\":\n                                        return (\n                                            <div className=\"repeat-weekgrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {/* [\"originalString\", \"localizedString\"] <= localize in this way */}\n                                                {[[\"M\", \"M\"], [\"T\", \"T\"], [\"W\", \"W\"], [\"Th\", \"Th\"], [\"F\", \"F\"], [\"S\", \"S\"], [\"Su\", \"Su\"]].map(e => <a key={e} className={\"repeat-weekgrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e[0]) ? \"repeat-weekgrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e[0])) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e[0]);\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e[0]);\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e[1]}</a>)}\n                                            </div>\n                                        )\n                                    case \"monthly\":\n                                        return (\n                                            <div className=\"repeat-dategrid\">\n                                                {/* DONT LOCALIZE THESE VALUES. THEY WILL CAUSE PROBLEMS. ON LOCALIZATION, MAKE THESE ARRAYS */}\n                                                {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"Last\"].map(e => <a key={e} className={\"repeat-dategrid-number \"+ (()=>{if(this.state.on)  return (this.state.on.includes(e.toLowerCase()) ? \"repeat-dategrid-number-selected\":\"\"); else return \"\"})()} onClick={()=>{\n                                                    if (this.state.on.includes(e.toLowerCase())) {\n                                                        let oldOn = this.state.on;\n                                                        let newOn = oldOn.filter(elem=>elem!==e.toLowerCase());\n                                                        // toggle it off\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    } else  {\n                                                        let oldOn = this.state.on;\n                                                        oldOn.push(e.toLowerCase());\n                                                        let newOn = oldOn;\n                                                        // toggle it on\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{repeat: {rule: this.state.rule, on: newOn}}}\n                                                        )\n                                                        this.setState({on: newOn});\n                                                    }\n                                                }}>{e}</a>)}\n                                            </div>\n                                        );\n                                }\n                        })()}\n                    </div>\n                </div>\n            </IonModal>\n        )\n    }\n\n\n}\n\nexport default Repeat;\n\n","import { IonModal, IonContent, IonSelect, IonSelectOption } from '@ionic/react';\nimport { Dropdown } from 'react-bootstrap';\n//import { chevronForwardCircle, checkmarkCircle, filterOutline, listOutline, bicycle } from 'ionicons/icons';\nimport React, { Component } from 'react';\nimport './Repeat.css';\n//import OutsideClickHandler from 'react-outside-click-handler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\n\n/*\n * Although I do not agree\n * Jack told me to make this feat\n * I did not make this carefree\n * yet this is far from elite\n *\n * I resolved to give it a try\n * and encountered this very strange bug\n * This thing makes me want to cry\n * Front-end is far from a drug\n *\n * I may be exageratting\n * Maybe this bug wasn't so bad\n * But still I cannot add padding\n * and it still makes me very sad\n *\n * React may feel like a drug\n * Until you find the next bug\n *\n * by @zbuster05\n * */\n\nconst autoBind = require('auto-bind/react');\n\nclass TagEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    render() {\n        return (\n            <IonModal ref={this.props.reference} isOpen={this.props.isShown} onDidDismiss={() => {if(this.props.onDidDismiss) this.props.onDidDismiss()}} style={{borderRadius: 5}} cssClass={\"tag-editor\"}>\n                {/*Text Header*/}\n                <div className=\"TagEditor-header\">\n                    <span style={{display: \"flex\", alignItems: \"center\", width: \"100%\"}}>\n\t\t\t            <b className=\"bold-prefix\" >Tags</b> \n\t\t\t        </span>\n                    {/*Close Button*/}\n                    <a className=\"TagEditor-close\" onClick={this.props.onDidDismiss}><i className=\"fa fa-times\"></i></a>\n                </div>\n                <div className=\"tag-list\"></div>\n            </IonModal>\n        )\n    }\n}\n\nexport default TagEditor\n","// A whole lotta imports\n\n// Ionic components\nimport { IonItem, IonInput, IonContent, IonGrid, IonRow, IonCol, IonSegment, IonLabel, IonButton } from '@ionic/react';\n\n// Detect whether is mobile\nimport { getPlatforms } from '@ionic/react';\n\n// Like, your heart and soul\nimport React, { Component } from 'react';\n\n// React Spring animation packages\nimport { Spring, animated, Keyframes } from 'react-spring/renderprops'\n\n// Cool components \nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as chrono from 'chrono-node';\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable';\n\n// Our very own repeat UI\nimport Repeat from './Repeat';\n\n// Our very own tag editor UI\nimport TagEditor from './TagEditor';\n\n// Our very own CSS\nimport './Task.css';\n\n// Oooips\nimport ReactTooltip from 'react-tooltip';\n\n// FNS date parcing utils\nconst { parseFromTimeZone } = require('date-fns-timezone')\n\n// autobind those functions\nconst autoBind = require('auto-bind/react');\n\n/*\n *\n * Hello human,\n *\n * I am a task.\n *\n * You seriously are reading the help poem about this?\n *\n * @jemoka\n *\n */\n\n\n// Our very own custom animatinos\nconst AnimationFactory = Keyframes.Spring({\n    // Open->close animation\n    hide: {\n        to: {\n            taskHeight:38, \n            taskMargin: \"2px 8px\", \n            taskBackground:\"\", \n            taskPadding: 3,\n            taskEditOpacity: 0,\n            taskEditMaxHeight: 0,\n            taskOpacity: 1,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskDisplay: \"\",\n            taskMaxHeight: 40,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n\n    },\n    // Close->open animation\n    show: {\n        to: {\n            taskHeight:38, \n            taskMargin:\"15px 25px\", \n            taskBackground:\"var(--task-feature)\", \n            taskPadding: 10,\n            taskEditOpacity: 1,\n            taskDisplay: \"\",\n            taskOpacity: 1,\n            taskEditMaxHeight: 300,\n            taskNameDecoration: \"\",\n            taskPosition: \"\",\n            taskMaxHeight: 500,\n        },\n        config: {\n            tension: 200,\n            friction: 25,\n            mass: 1\n        },\n        reset: false\n    },\n    // Incomplete->complete animation\n    complete: [\n        {\n            to: {\n                taskMargin: \"14px 8px\", \n                taskNameDecoration: \"line-through\",\n                taskOpacity: 1,\n                taskPosition: \"\",\n            },\n            config: {\n                tension: 200,\n                friction: 25,\n                mass: 1\n            },\n\n        }, \n        {\n            to: {\n                taskMaxHeight: 0,\n                taskHeight:0, \n                taskOpacity: 0,\n                taskMargin: \"0px 8px\", \n                taskPadding: 0,\n                taskPosition: \"absolute\",\n            },\n            config: {\n                tension: 800,\n                friction: 50,\n                mass: 1\n            },\n        }\n    ],\n})\n\n// Aww sheat, here we go\nclass Task extends Component {\n\n    constructor(props) {\n        // Invoke React's constructor\n        super(props);\n\n        // Bind it good!\n        autoBind(this);\n\n        this.state = { \n            expanded: false, // are we expanded?\n            deferDate: undefined, // what's our defer date?\n            dueDate: undefined, // what's our due date?\n            name: \"\", // what's our name string?\n            desc: \"\",  // what's our description string?\n            isFlagged: false, // are we flagged?\n            isFloating: false, // are we floating? or just eating jello?\n            project:\"\", // what's our project ID?\n            tags: [], // what are the IDs of our tags?\n            decoration: \"\",  // are we \"od\" \"ds\" or just just good ol' \"\"?\n            availability: true, // are we avaliable? or are we deferred or blocked (in which case it'd be false.)\n            isComplete: false, // are we completed?\n            showRepeat: false, // is our repeat UI shown?\n            showTagEditor: false, // is our TagEditor UI shown?\n            startingCompleted: this.props.startingCompleted, // disable immediate onComplete animation for completed\n            possibleTags: this.props.datapack[0], // tags will need to be dynamically added, so\n            haveBeenExpanded: (this.props.startOpen !== undefined && this.props.startOpen !== false) // did we render the edit part yet? optimization\n        }\n        this.initialRenderDone = false; // wait for data to load to make animation decisions\n        this.me = React.createRef(); // who am I? what am I?\n        this.repeater = React.createRef(); // what's my repeater?\n        this.checkbox = React.createRef(); // what's my pseudocheck\n        this.TagEditorRef = React.createRef(); // what's my tag editor\n        this.actualCheck = React.createRef(); // what's my (actual, non-seen) checkmark\n    }\n\n    showRepeat() {this.setState({showRepeat: true})} // util func for showing repeat\n    hideRepeat() {this.setState({showRepeat: false})} // util func for hiding repeat\n\n    showTagEditor() {this.setState({showTagEditor: true})} // function for showing tag editor\n    showTageEditor() {this.setState({showTageEditor: false})}  // function for hiding tag editor\n\n\n    // Monster function to query task info TODO TODO #cleanmeup\n    async loadTask() {\n\n        // Obviously we need this, the task info\n        let taskInfo = await this.props.engine.db.getTaskInformation(this.props.uid, this.props.tid);\n\n        // Setting state to update the rest of them elements\n        this.setState({\n            name: taskInfo.name, // Set name field\n            desc: taskInfo.desc, // Set task description\n            project: taskInfo.project,  // Set project ID\n            tags: taskInfo.tags, // Set tag ID array\n            isFloating: taskInfo.isFloating, // Set isFloating bool\n            isFlagged: taskInfo.isFlagged, // Set is Flagged bool\n            isComplete: taskInfo.isComplete, // Set is complete style\n            dueDate: (\n                taskInfo.due ? // If we have a due date\n                (taskInfo.isFloating ? // and if we are floating\n                    new Date(taskInfo.due.seconds*1000) : // then the due date in just... the due date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.due.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ):\n                undefined \n            ), \n            deferDate: (\n                taskInfo.defer ? // If we have a defer date\n                (taskInfo.isFloating ?  // and if we are floating\n                    new Date(taskInfo.defer.seconds*1000) : // then the defer date is just... the defer date\n                    parseFromTimeZone( // otherwise, we stringify the date to remove timezone info\n                        (new Date(taskInfo.defer.seconds*1000)).toISOString(), \n                        {timeZone: taskInfo.timezone} // and cast it to the right time zone\n                    )\n                ): undefined\n            )\n        });\n        this.refreshDecorations(); // flush and generate them decorations!\n        this.initialRenderDone = true;\n    }\n\n    refreshDecorations() {\n        if (this.state.dueDate) // if we gotta due date\n            if (this.state.dueDate-(new Date()) < 0) // and this kid has not done his homework\n                this.setState({decoration: \"od\"}); // give 'em a red badge\n        else if (this.state.dueDate-(new Date()) < 24*60*60*1000) // or if this kid has not done his homework a day earlier\n            this.setState({decoration: \"ds\"}); // give 'em an orange badge\n        else \n            this.setState({decoration: \"\"}); // give 'em an nothing badge\n\n        if (this.state.deferDate) // if we gotta defer date\n            if (this.state.deferDate-(new Date()) > 0) // and this kid is trying to start early\n                this.setState({availability: false}); // tell 'em it's not avaliable\n        else if (this.props.availability === true) //  otherwise, if this thing's avaliable\n            this.setState({availability: true}); // set it to be so!\n        else if (!this.props.availability) // or if my props make me disabled\n            this.setState({availability: false}); // well then you gotta follow them props, no?\n    }\n\n    componentDidMount() {\n        this.loadTask(); // load the task when we mount   \n        document.addEventListener('mousedown', this.detectOutsideClick, false); // and listen for clicks everywhere\n    }\n\n    componentWillUnmount = () => document.removeEventListener('mousedown', this.detectOutsideClick, false); // remove the listener... no memory leaks plez\n\n    toggleTask = () => this.setState(state => ({expanded: !state.expanded})); // util function to toggl a task\n    \n    closeTask() {\n        this.setState({expanded: false});\n    }\n    //closeTask = () => this.setState({expanded: false}); // util function to close a task\n\n    openTask() {\n        if (this.state.haveBeenExpanded)\n            this.setState({expanded: true});\n        else \n            this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }// util function to open a task\n\n    _explode() {\n        // You should probably be calling openTask()\n        this.initialRenderDone = true;\n        this.setState({haveBeenExpanded: true}, ()=>this.setState({expanded: true}));\n    }\n\n    detectOutsideClick(e) {\n\n        if (this.me.current) // if we are mounted\n            if (this.me.current.contains(e.target)) // if we are clicking me\n                return; //click inside\n\n        if (this.repeater.current) // if our repeater is a thing that mounted\n            if (this.repeater.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n        \n        if (this.TagEditorRef.current) // if our repeater is a thing that mounted\n            if (this.TagEditorRef.current.contains(e.target)) // and we are clicking inside that\n                return; //click inside\n        \n        //if (this.props.envelope) // if we have a drag envelope\n            //if (this.props.envelope.current) // if we have a drag envelope\n                //if (this.props.envelope.current.contains(e.target)) // and we are clicking inside that\n                    {/*return; //click inside*/}\n\n        // DRAG ENVELOPES ARE SUPPOSED TO PROTECT AGAINST DRAGGING, AND ARE UNIVERSAL ACROSS ALL TASKS\n        // UNCOMMENTING THIS WILL MAKE MULTIPLE TASKS OPEN AT ONCE ON UPCOMING\n\n        if (document.getElementById(\"parking-lot\").contains(e.target))\n            return;\n\n        if (this.state.showRepeat) // if we are showing our repeat\n            return; //click inside\n\n        if (this.state.showTagEditor) // if we are showing TagEditor\n            return; // click inside\n\n        //otherwise,\n        this.closeTask();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // flush styles\n        if (prevState.deferDate !== this.state.deferDate) // if we updated the defer date\n            this.refreshDecorations();\n        if (prevState.dueDate !== this.state.dueDate) // if we updated the due date\n            this.refreshDecorations();\n        if (prevState.expanded !== this.state.expanded && this.state.expanded === true) {// if we opened a task for updating\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"none\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(false); // disable drag\n            this.props.gruntman.lockUpdates(); // tell gruntman to chill\n        }\n        else if (prevState.expanded !== this.state.expanded && this.state.expanded === false) { // if we closed a task\n            if (getPlatforms().includes(\"mobile\"))\n                document.getElementById(\"abtib\").style.display = \"block\";\n            if (this.props.setDragEnabled) // if we are a draggable task\n                this.props.setDragEnabled(true); // enable drag\n            this.props.gruntman.unlockUpdates(); // tell gruntman to... grunt!\n        }\n        if (prevProps.startOpen !== this.props.startOpen && this.props.startOpen) // we are newly starting open\n            this.openTask(); // open task\n    }\n\n\n    // ready fo this?\n\n    render() {\n\n        return (\n            <div>\n\n                {/*animation factory to orchistrate animations*/}\n\n                <AnimationFactory\n\n                    native  \n\n                    state = {\n                        this.initialRenderDone ?\n                            (this.state.isComplete? // if we are complete \n                                (this.state.startingCompleted? // and we start complete \n                                    (this.state.expanded? // and we are expanded \n                                        \"show\":\"hide\") // show, otherwise, hide \n                                        :\"complete\") // if we are complete,  and don't start completed, complete. \n                                        : // if we arnt complete, \n                                this.state.startingCompleted ?  // and we start complete \n                                \"complete\" :\n                                (this.state.expanded? \"show\":\"hide\")):\"hide\"\n                    } // if we are incomplete, and we start incomplete, then show or hide based on expanded \n\n                >\n                    {animatedProps => {\n                        return (\n                            // Actual task container, now\n                            <animated.div \n                                onClick={(e)=>{\n                                    if(!this.state.expanded && e.target !== this.checkbox.current && e.target !== this.actualCheck.current && !this.props.freeze && !(this.state.isComplete&&!this.state.startingCompleted)) { \n                                        this.openTask(); // open the task\n                                    }\n                                }}\n                                className={\"task \"+(this.state.expanded?\"expanded\":\"collapsed\")} \n\n                                ref={this.me} \n\n                                style={{\n                                    minHeight: animatedProps.taskHeight, \n                                    maxHeight: animatedProps.taskMaxHeight, \n                                    margin: animatedProps.taskMargin, \n                                    background:animatedProps.taskBackground, \n                                    opacity:animatedProps.taskOpacity, \n                                    overflow: \"hidden\",\n                                    display: animatedProps.taskDisplay,\n                                    position: animated.taskPosition,\n                                    padding: animatedProps.taskPadding}}\n                            >\n\n                                {/* Chapter 0: Utility Components */}\n\n                                {/* Gotta get those on hover tips */}\n                                {/* And load up + hide the repeat UI, too! */}\n                                <Repeat tid={this.props.tid} reference={this.repeater} isShown={this.state.showRepeat} onDidDismiss={this.hideRepeat} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                {/* As well as load up + hide the tag editor!*/}\n                                <TagEditor reference={this.TagEditorRef} isShown={this.state.showTagEditor} onDidDismiss={this.hideTagEditor} uid={this.props.uid} engine={this.props.engine} gruntman={this.props.gruntman}/>\n                                \n                                {/* Chapter 1: Task Checkmark */}\n                                {/* Who could have thought so much code goes into a checkbox? */}\n                                <div style={{display: \"inline-block\", transform: \"translateY(-3px)\"}}>\n                                    {/* First, an invisible checkmark */}\n                                    <input \n                                        type=\"checkbox\" \n\n     ref={this.actualCheck}\n                                        id={\"task-check-\"+this.props.tid} \n                                        className=\"task-check\"\n                                        defaultChecked={this.props.startingCompleted}\n                                        onChange={()=>{\n\n                                            // If we are uncompleting a task (that is, currently task is complete) \n                                            if (this.state.isComplete) {\n                                                this.props.gruntman.lockUpdates();\n                                                // Well, first, uncomplete it\n                                                this.setState({isComplete: false})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__uncomplete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                // Whatever this is\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                            // If we are completing a task (that is, currently task is incomplete)\n                                            else if (!this.state.isComplete) {\n                                                // Lock updates so that animation could finish\n                                                this.props.gruntman.lockUpdates();\n                                                // Complete it\n                                                this.setState({isComplete: true})\n                                                // Update the database, registering a gruntman action while you are at it.\n                                                this.props.gruntman.do(\"task.update__complete\", { uid: this.props.uid, tid: this.props.tid}, true)\n                                                //TODO wait for animation to finish before state update??\n                                                this.props.gruntman.unlockUpdates(1000)\n                                            }\n                                        }} \n                                        style={{opacity: this.state.availability?1:0.35}}\n                                    />\n\n                                    {/* Oh yeah, that checkmark above you can't actually see */}\n                                    {/* Here's what the user actually clicks on, the label! */}\n                                    <label ref={this.checkbox} className={\"task-pseudocheck \"+this.state.decoration} id={\"task-pseudocheck-\"+this.props.tid} htmlFor={\"task-check-\"+this.props.tid}>&zwnj;</label>\n                                </div>\n\n                                {/* The animated input box */}\n                                <animated.input \n                                    defaultValue={this.state.name} \n                                    placeholder={\"LOCALIZE: Task Name\"} \n                                    onChange={\n                                        (e)=>{\n                                            // THIS. REFER TO THIS. YOU ARE HERE. STOP SEARCHING.\n                                            // :point down: is FANCYCHANGE\n\n                                            // If somebody dares to do the complicated action of task name change\n                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n\n                                            // Register a scheduler to watch for more changes\n                                            // because dang react calls onChange on every freaking change\n                                            // TODO TODO destruct all schedulers on view change\n                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                \"task.update\", // the scheduler actually updates the task\n                                                {\n                                                    uid: this.props.uid, \n                                                    tid: this.props.tid, \n                                                    query:{name: e.target.value} // setting the name to the name\n                                                }\n                                            ), `task-name-${this.props.tid}-update`) // and we will schedule it as this\n                                        }\n                                    } \n\n                                    onFocus={(e)=>{ \n                                        // open the task if its not open already\n                                        if(!this.state.expanded) { \n                                            //this.openTask(); // open the task\n                                            if (getPlatforms().includes(\"mobile\")) e.target.blur(); // blur, only if mobile to fix bugs where even in attempted readonly the cursor blurs\n                                        }\n                                    }} \n                                    className={\"task-name \"+(this.state.expanded?\"\":\"no-select\")} \n                                    readOnly={(!this.state.expanded)} \n                                    type=\"text\" \n                                    autoComplete=\"off\" \n                                    placeholder=\"LOCALIZE: Task Name\" \n                                    style={{opacity: this.state.availability?1:0.35, textDecoration: animatedProps.taskNameDecoration}} />\n\n                                {/* Task edit. The thing that slides open on edit. */}\n                                {(() => {\n                                    if (this.state.haveBeenExpanded===true)\n                                        return(\n                                            <animated.div className=\"task-edit\" style={{opacity: animatedProps.taskEditOpacity, overflow: \"hidden\",maxHeight: animatedProps.taskEditMaxHeight}}>\n                                                {/* First, task description field */}\n                                                <textarea \n                                                    placeholder=\"LOCALIZE:Description\" \n                                                    className=\"task-desc\" \n                                                    style={{marginBottom: 10}} \n                                                    defaultValue={this.state.desc}\n                                                    onChange={\n                                                        (e)=>{\n                                                            // Register a scheduler to deal with React's onChange\n                                                            // Search for the word FANCYCHANGE to read my spheal on this\n                                                            e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                            this.props.gruntman.registerScheduler(() => this.props.gruntman.do(\n                                                                \"task.update\", \n                                                                {\n                                                                    uid: this.props.uid, \n                                                                    tid: this.props.tid, \n                                                                    query:{desc: e.target.value}\n                                                                }\n                                                            ), `task-desc-${this.props.tid}-update`)\n                                                        }\n                                                    }\n                                                >\n                                                </textarea>\n\n                                                {/* Task icon set. TODO delete task */}\n                                                <div style={{display: \"inline-block\", marginBottom: 6, transform: \"translateY(-5px)\"}}>\n                                                    {/* Flagged icon */}\n                                                    <a data-tip=\"LOCALIZE: Flagged\" className=\"task-icon\" style={{borderColor: this.state.isFlagged ? \"var(--task-flaggedRing)\":\"var(--task-checkbox-feature-alt)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the flagged state to the opposite of whatever it is\n                                                        // Both on the db...\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFlagged: !this.state.isFlagged}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFlagged: !this.state.isFlagged});\n\n                                                    }}><i className=\"fas fa-flag\" style={{margin: 3, color: this.state.isFlagged ? \"var(--task-flagged)\" : \"var(--task-textbox)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Floating icon */}\n                                                    <a data-tip=\"LOCALIZE: Floating\" className=\"task-icon\" style={{borderColor: this.state.isFloating? \"var(--task-flaggedRing)\":\"var(--task-checkbox-feature-alt)\", cursor: \"pointer\"}} onClick={()=>{\n                                                        // On change, set the floating state to the opposite of whatever it is\n                                                        // Both on the db... TODO flush the timezone too?\n                                                        this.props.gruntman.do(\n                                                            \"task.update\", \n                                                            { uid: this.props.uid, tid: this.props.tid, query:{isFloating: !this.state.isFloating}}\n                                                        )\n                                                        // And the task!\n                                                        this.setState({isFloating: !this.state.isFloating});\n\n                                                    }}><i className=\"fas fa-globe-americas\" style={{margin: 3, color: this.state.isFloating? \"var(--task-flagged)\" : \"var(--task-textbox)\", fontSize: 15, transform: \"translate(7px, 5px)\"}} ></i></a>\n\n                                                    {/* Repeat icon that, on click, shows repeat */}\n                                                    <a onClick={this.showRepeat} className=\"task-icon\" style={{borderColor: \"var(--task-checkbox-feature-alt)\", marginRight: 20, cursor: \"pointer\"}} data-tip=\"LOCALIZE: Repeat\"><i className=\"fas fa-redo\" style={{margin: 3, color: \"var(--task-textbox)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}} ></i></a>\n                                                    {/* TagEditor icon that shows TagEditor on click*/}\n                                                    <a onClick={this.showTagEditor} className=\"task-icon\" style={{borderColor: \"var(--task-checkbox-feature-alt)\", marginRight: 20, cursor: \"pointer\"}} data-tip=\"LOCALIZE: Freaking TagEditor\"><i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-textbox)\", fontSize: 15, transform: \"translate(6.5px, 5.5px)\"}}></i></a>\n                                                    {/*<div className=\"task-icon\" style={{borderColor: \"var(--task-checkbox-feature-alt)\", marginRight: 20}}><a className=\"fas fa-globe-americas\" style={{margin: 3, color: \"var(--task-textbox)\", fontSize: 13, transform: \"translate(2.5px, -0.5px)\"}}></a></div>*/}\n                                                </div>\n\n\n                                                {/* Task date set */}\n                                                <div style={{display: \"inline-block\", marginBottom: 8}}>\n\n                                                    {/* Defer date container */}\n                                                    <div style={{display: \"inline-block\", marginRight: 10, marginBottom: 5, marginLeft: 6}}>\n                                                        {/* The. Defer. Date. */}\n                                                        <i className=\"fas fa-play\" data-tip=\"LOCALIZE: Defer Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        {(() => {\n                                                            {/* The. Defer. Date. Input. */}\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\"))} defaultValue={value}  onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // DATEHANDLING is here too. If you are looking for that, stop searching\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value); // NLP that date!\n                                                                            if (d) this.setState({deferDate: d}); // we we got a valid date, update the calendar UI\n                                                                            if (d) // and update the database too!\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n                                                                        }, `task-defer-${this.props.tid}-update`)\n                                                                    }} onFocus={(e) => {\n                                                                        onClick();\n                                                                        e.target.focus();\n                                                                    }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // TIMEHANDLING is here. If you are searching for that, it's here.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds()); // TODO make this with the onChange API\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.deferDate}\n                                                                    portalId=\"parking-lot\"\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({deferDate: date});\n\n                                                                        // No longer needed. State updates handle decoration udpates. Kept here for decorative purposes:\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{defer: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                    showTimeInput\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n\n                                                    <div style={{display: \"inline-block\", marginBottom: 5, marginLeft: 6}}>\n                                                        <i className=\"fas fa-stop\" data-tip=\"LOCALIZE: Due Date\" style={{transform: \"translateY(-1px)\", marginRight: 10, color: \"var(--task-icon)\", fontSize: 10}}></i>\n                                                        {(() => {\n                                                            const DateInput = ({ value, onClick }) => { \n                                                                return (\n                                                                    <input className=\"task-datebox\" readOnly={(getPlatforms().includes(\"mobile\")) ? true : false} defaultValue={value} onChange={(e)=>{\n                                                                        // Register a scheduler to deal with React's onChange\n                                                                        // Search for the word FANCYCHANGE to read my spheal on this\n                                                                        // Search for the word DATEHANDLING for what the heck the code actually does\n\n                                                                        e.persist(); //https://reactjs.org/docs/events.html#event-pooling\n                                                                        this.props.gruntman.registerScheduler(() => {\n                                                                            let d = chrono.parseDate(e.target.value);\n                                                                            if (d) this.setState({dueDate: d});\n                                                                            if (d)\n                                                                                this.props.gruntman.do(\n                                                                                    \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due:d, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                                )\n\n                                                                        }, `task-due-${this.props.tid}-update`)\n                                                                    }\n                                                                        } onFocus={(e) => {\n                                                                            onClick();\n                                                                            e.target.focus();\n                                                                        }}\n                                                                    />\n                                                                );\n                                                            };\n                                                            const TimeInput = ({ value, onChange }) => {\n                                                                // IDK why this is needed, but it is. Sometimes it decides that it will drop the final 0?\n                                                                if (value.slice(value.length-2, value.length) === \":0\") value = value + \"0\";\n                                                                // TODO: calling complex string ops to fix an interface bug not a good idea?\n                                                                return (\n                                                                    <input\n                                                                        className=\"task-timebox\"\n                                                                        defaultValue={value}\n                                                                        onKeyPress={e => {\n                                                                            // Search for TIMEHANDLING for notes on time handling.\n                                                                            // But anyway, on change, parse the time\n                                                                            let d = chrono.parseDate(e.target.value); //TODO bad?\n                                                                            // ...and throw away the date \n                                                                            if (d && e.key === \"Enter\") onChange(d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds());\n                                                                        }}\n                                                                    />\n                                                                )};\n                                                            return (\n                                                                <DatePicker\n                                                                    selected={this.state.dueDate}\n                                                                    portalId=\"parking-lot\"\n                                                                    onChange={date => this.setState({dueDate: date})}\n                                                                    showTimeInput\n                                                                    isClearable\n                                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                                    customTimeInput={<TimeInput />}\n                                                                    customInput={<DateInput />}\n                                                                    onChange={date => {\n                                                                        // If the calendar got a new date, set it\n                                                                        this.setState({dueDate: date});\n\n                                                                        // and hit the DB too!\n                                                                        this.props.gruntman.do(\n                                                                            \"task.update\", { uid: this.props.uid, tid: this.props.tid, query:{due: date, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone}}\n                                                                        )\n                                                                    }}\n                                                                />\n                                                            )\n                                                        })()}\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    {/* Task project container */}\n                                                    <span className=\"task-project-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-list-ul\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, marginRight: 5, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Project select */}\n                                                        <Select \n                                                            options={this.props.datapack[1]}\n                                                            className='task-project'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            styles={{\n                                                                // Fixes the overlapping problem of the component\n                                                                menuPortal: provided => ({ ...provided, zIndex: \"99999 !important\" })\n                                                            }}\n                                                                                                                                                              menuPortalTarget={this.props.envelope ? this.props.envelope.current : this.me.current}\n                                                            value={this.props.datapack[1].filter(option => option.value === this.state.project)}\n                                                            onChange={(e)=>{\n                                                                {/* :point up: filter for only options with this project and set that to be the value */}\n                                                                {/* Actually update the project */}\n                                                                this.props.gruntman.do(\"task.update__project\", { uid: this.props.uid, tid: this.props.tid, oldProject: this.state.project===\"\"?undefined:this.state.project, project: (e?e.value:\"\")})\n                                                                {/* And set the state, too! */}\n                                                                this.setState({project:(e?e.value:\"\")});\n                                                            }}\n                                                        />\n                                                    </span>\n                                                    {/* Task tag container */}\n                                                    <span className=\"task-tag-container\">\n                                                        {/* Icon */}\n                                                        <i className=\"fas fa-tags\" style={{margin: 3, color: \"var(--task-icon)\", fontSize: 13, transform: \"translateY(5px)\"}}></i>\n                                                        {/* Tag select */}\n                                                        <CreatableSelect\n                                                            options={this.props.datapack[0]}\n                                                            className='task-tag'\n                                                            classNamePrefix='task-select'\n                                                            isClearable\n                                                            isMulti\n                                                            styles={{ menuPortal: base => ({ ...base, zIndex: \"99999 !important\" }) }}\n                                                                                                                                              menuPortalTarget={this.props.envelope ? this.props.envelope.current : this.me.current}\n                                                            value={this.props.datapack[0].filter(option => this.state.tags.includes(option.value))}\n                                                            onChange={(newValue, actionMeta) => {\n                                                                let view = this;\n                                                                let tids = newValue?newValue.map(async function (e) { // for each tag\n                                                                    if (e.__isNew__) { // if it's a new tag\n                                                                        let tagID = (await view.props.gruntman.do( // create it!\n                                                                            \"tag.create\",\n                                                                            {\n                                                                                uid: view.props.uid,\n                                                                                name: e.label,\n                                                                            }, \n                                                                        )).id;\n                                                                        let originalTags = view.state.possibleTags; // get tags\n                                                                        originalTags.push({label: e.label, value: tagID}); // add our new tag\n                                                                        view.setState({possibleTags: originalTags}); // sax-a-boom!\n                                                                        return tagID;\n                                                                    } else\n                                                                        return e.value;\n                                                                }):[]; // find the correct tags sets, or set it to an empty set\n                                                                Promise.all(tids).then(tagIDs => {\n                                                                    this.setState({tags: tagIDs}); // set the state\n                                                                    this.props.gruntman.do(\n                                                                        \"task.update\", \n                                                                        {\n                                                                            uid: this.props.uid, \n                                                                            tid: this.props.tid, \n                                                                            query:{tags: tagIDs} // set a taskID\n                                                                        }\n                                                                    )\n                                                                });\n                                                            }}\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </animated.div>\n                                        )\n                                })()}\n                            </animated.div>\n                        )}\n                    } \n                </AnimationFactory>\n            </div >\n\n\n        )\n    }\n}\n\nexport default Task;\n\n","//\"use strict\";\n\n// Initialize Firebase Application\n// TODO TODO TODO !!!! Change this on deploy\n\nlet storageType;\nlet sqliteDB;\nlet memoryDB;\nlet firebaseDB, fsRef;\nlet requestRefresh;\n\nconst { FilesystemDirectory, FilesystemEncoding, Plugins } = require('@capacitor/core');\nconst { Device, Filesystem } = Plugins;\n\nlet readiness;\n\nconst initStorage = (payload, ...features) => {\n /*   // Firebase App (the core Firebase SDK) is always required and*/\n    //// must be listed before other Firebase SDKs\n    // const firebase = require(\"firebase/app\");\n\n    let loaders = [];\n\n    if (features.includes(\"firebase\")) {\n        const obj = require(\"./../secrets.json\");\n        if (process.env.NODE_ENV === \"development\")\n            payload.firebase.initializeApp(obj.dbkeys.debug);\n        else if (process.env.NODE_ENV === \"production\")\n            payload.firebase.initializeApp(obj.dbkeys.deploy);\n        [ firebaseDB, fsRef ] = [payload.firebase.firestore(), payload.firebase.firestore];\n        firebaseDB.enablePersistence({synchronizeTabs: true}).catch(console.error);\n        loaders.push(new Promise(function(resolve) {\n            return resolve(fsRef);\n        }));\n    } \n\n    if (features.includes(\"sqlite\")) {\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        console.error(\"algobert come to the rescue!\");\n        // TODO: TODO: SQLITE 3!!\n        //const sqlite3 = require('sqlite3').verbose();   // see https://www.sqlitetutorial.net/sqlite-nodejs/connect/\n        const { FilesystemDirectory, Plugins } = require('@capacitor/core');\n        const { Device } = Plugins;\n        loaders.push((async function() {\n            const isMobile = (await Device.getInfo()).platform !== \"web\";\n            const dbRoot = isMobile ? FilesystemDirectory.Data : process.resourcesPath;\n            const dbPath = '/condution.db'; // TODO: use capacitor storage api\n            //sqliteDB = new sqlite3.Database(dbRoot+dbPath, (e)=>{if(e) console.error(e)});\n            return sqliteDB;\n        })());\n    } \n\n    if (features.includes(\"json\")) {\n        loaders.push((async function() {\n            const dbRoot = FilesystemDirectory.Data;\n            const dbPath = 'condution.json'; // TODO: use capacitor storage api\n            let contents;\n            try {\n                contents = (await Filesystem.readFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    encoding: FilesystemEncoding.UTF8\n                })).data;\n            } catch(e) {\n                contents = \"{}\";\n                await Filesystem.writeFile({\n                    path: dbPath,\n                    directory: dbRoot,\n                    data: JSON.stringify({}),\n                    encoding: FilesystemEncoding.UTF8\n                })\n            }\n            //contents = `{\"users\":{\"hard-storage-user\":{\"projects\":{\"asenuoth239p8\":{\"name\":\"bontehu\",\"is_sequential\":false,\"order\":0,\"parent\":\"\",\"top_level\":true, \"children\": []}}}}}`;\n            memoryDB = JSON.parse(contents);\n        })());\n    }\n\n    readiness = Promise.all(loaders);\n    return readiness;\n};\n\nconst useDb = (db, refresher=()=>{}) => {\n    storageType = db;\n    requestRefresh = refresher; // generate fresh refresher\n    return readiness;\n};\n\nconst [cRef, flush] = (() => {\n    //const { Plugins } = require('@capacitor/core');\n    //const { Network } = Plugins;\n\n    let cache = new Map();\n    let unsubscribeCallbacks = new Map();\n\n\n    function flush() {\n        /*\n         * Nukes the cache\n         *\n         * Used to log people out\n         *\n         * @return none\n         *\n         */\n        cache = new Map();\n        unsubscribeCallbacks = new Map();\n    }\n\n    function getFirebaseRef(path) {\n        /*\n         * Get a database reference.\n         *\n         * @param   path        A valid path array, see below.\n         * @return  reference   The generated reference\n         *\n         * Examples of valid path arrays:\n         *  [`collection/${docName}`] => DocumentReference\n         *  [\"collection\", \"docName\"] => DocumentReference\n         *  [\"collection\", \"docName\", \"collection\"] => CollectionReference\n         *  [\"collection\", [\"query\", \"params\"], [\"more\", \"params\"]] => Query\n         *  [\"collection\", [\"query\", \"params\"], \"docname\"] => DocumentReference\n         */\n        let ref = firebaseDB;\n        // special handling for first collection from root\n        console.assert(typeof path[0] === 'string');\n        if (path[0].includes('/'))\n            ref = ref.collectionGroup(path[0]);\n        else\n            ref = ref.collection(path[0]);\n        // generic handling\n        for (let nav of path.slice(1)) {\n            if (typeof nav === 'string') {\n                if (ref instanceof fsRef.DocumentReference) {\n                    ref = ref.collection(nav);\n                } else if (ref instanceof fsRef.Query) {\n                    ref = ref.doc(nav);\n                } else {\n                    throw new Error(\"Unknown reference\", ref.toString());\n                }\n            } else if (Array.isArray(nav)) {                // query, TODO shouldn't need to query\n                if (ref instanceof fsRef.Query) {\n                    ref = ref.where(...nav);\n                } else {\n                    throw new Error(\"Cannot query with\", nav.toString());\n                }\n                console.assert(ref instanceof fsRef.Query)\n            } else {\n                throw new Error(\"Cannot parse\", nav.toString());\n            }\n        }\n        return ref;\n    }\n\n    function generateRandomString() {\n        /*\n         * Generates a random string. Used for Ids.\n         * THIS IS NOT CRYPTOGRAPHICALLY SECURE\n         *\n         * @return  string  The random string\n         *\n         */\n\n        return Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2)+Math.random().toString(36).substring(2);\n    }\n\n    async function cachedRead(path) {   // TODO: make this also use hard storage, dupe for cachedSet\n        /*\n         * Get a snapshot from the cache.\n         *\n         * @param   path    The valid path to the reference\n         * @return  any     The result of calling `.get()` on the database reference\n         *\n         * Logic:\n         *  If the path is cached, return from cache.\n         *  Else, register a snapshot listener to update the cache\n         *      and return the newly cached value.\n         */\n        const TODOstring = JSON.stringify(path);        //  strigify to hash array\n        if (!cache.has(TODOstring)) {                   //  if path string isn't cached\n            // TODO: comment this out someday \\/\n            const ref = getFirebaseRef(path);           //  get the reference from the database\n            cache.set(TODOstring, ref.get());           //  save result in cache\n            unsubscribeCallbacks.set(TODOstring,        //  TODO: comment this code, someday\n                ref.onSnapshot({\n                    error: console.trace,\n                    next: (snap) => {\n                        cache.set(TODOstring, snap);\n                        requestRefresh();\n                    }\n                })\n            );\n        }\n        return await cache.get(TODOstring);\n    }\n\n    let diskJSONDB = function() {\n        const dbRoot = FilesystemDirectory.Data;\n        const dbPath = 'condution.json'; // TODO: use capacitor storage api\n        let read = async function() {\n            let contents = (await Filesystem.readFile({\n                path: dbPath,\n                directory: dbRoot,\n                encoding: FilesystemEncoding.UTF8\n            })).data;\n            memoryDB = JSON.parse(contents);\n        }\n\n        let write = async function() {\n            await Filesystem.writeFile({\n                path: dbPath,\n                directory: dbRoot,\n                data: JSON.stringify(memoryDB),\n                encoding: FilesystemEncoding.UTF8\n            })\n        }\n\n        return {read, write};\n    }()\n\n    async function storageRead(path) { \n        /*\n         * Read value in storage\n         *\n         * @param   path    The path to a reference\n         * @return  DocumentSnapshot    A snapshot of documents\n         *\n         */\n\n\n        let pointer;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Get an object pointer that's an option that\n             * looks like a noSQL object.  See JSON implimentation \n             * for tips and tricks.\n             *\n             */\n\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.some(i => {\n                pointer = pointer[i];\n                return (pointer === undefined); // https://stackoverflow.com/questions/2641347/short-circuit-array-foreach-like-calling-break\n            });\n        }\n\n        let parsed = (function parsePointer(pointer) {\n            /*\n             * Parse a dbPointerObject\n             *\n             * @param    pointer   A Javascript Object containing data\n             * @return   DocumentSnapshot   A Firebase-like Doc Snapshot\n             *\n             * TODO: also make this work for single documents, not just collections\n             */\n\n            let docRefs = [];\n            for (const docID in pointer) \n                docRefs.push({id: docID, data: ()=>Object.assign({}, pointer[docID]), exists: true}); // TODO TODO Better way to make JS objects immutable?\n            return {docs: docRefs}\n        })(pointer)\n        return parsed;\n    }\n\n    async function storageAdd(path, payload) {\n        /* \n         * Add a value\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            id = generateRandomString();\n            while (pointer[id]) id = generateRandomString();\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[id] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageDel(path) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @return  none\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            delete pointer[task];\n            await diskJSONDB.write();\n        }\n    }\n\n    async function storageSet(path, payload) {\n        /* \n         * Sets the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            let task = path.pop();\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer[task] = payload;\n            await diskJSONDB.write();\n        }\n        return Object.assign({}, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n    async function storageUpdate(path, payload) {\n        /* \n         * Object.assigns the value of a document\n         *\n         * @param   path   Document Path\n         * @param   payload   Object payload\n         * @return  Document Firebase-Style Document\n         * \n         */\n\n        let pointer;\n        let id;\n        if (storageType === \"sqlite3\") {\n            console.error(\"Algobert go bontehu\");\n            /*\n             * Unlike storageRead, ya just gotta impliment\n             * the whole thing. This is because the means and\n             * methods of writing for sqlite is probably \n             * extremely different compared to the JSON\n             * implimentation. Please return an ID. \n             */\n        } else if (storageType === \"json\") {\n            pointer = memoryDB;\n            path.forEach(i => {\n                if(!pointer[i]) pointer[i] = {};\n                pointer = pointer[i];\n            });\n            for (const key in payload) {\n                if (payload[key] instanceof Date) {\n                    payload[key] = {seconds: Math.round(payload[key].getTime()/1000)-5} // The function runs a bit too quickly. Bump time forward by 5 ms.\n                }\n            }\n            pointer = Object.assign(pointer, payload);\n            await diskJSONDB.write();\n        }\n        return Object.assign(payload, {id, data: payload, exists: true}); // TODO TODO Better way to make JS objects immutable?\n    }\n\n\n\n    //async function storageSet(path, value) {\n        /*\n         * Set a value in the storage.\n         *\n         * @param   path    The valid path to reference\n         * @param   value   The value to set it to\n         * @return  none\n         */\n    //    const TODOstring = JSON.stringify(path);    // stringify array, please change someday\n    //    // update storage\n    //    if (decideWhetherToUseHardStorage())\n    //\n    //    // maintain the cache\n    //    if (!cache.has(TODOstring)) {\n    //        cache.set();\n    //    }\n    //    const ref = getFirebaseRef(path);\n    //    ref.set(value);\n    //    cache.set(stringPath, value)\n    //}\n\n    function cacheRef(path) {\n        /*\n         * Get a reference wrapper that forces cache hits.\n         * This function will be exposed to the outside world.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(getFirebaseRef(path));\n        \n        \n        return Object.assign(\n            getFirebaseRef(path),               //  default methods from firebase reference\n            { get: () => cachedRead(path) }     //  read on get, read from cache if available\n        );\n    }\n    function TODO() { console.error('bad news bears'); }\n    function storageRef(path) {\n        /*\n         * Get a reference wrapper that acts as a database blackbox.\n         *\n         * @param   path    A valid path array.\n         * @return  wrapper A wrapper object around the expected reference.\n         */\n        //console.log(ref.add, ref.doc, ref.docs);\n        return {\n            id: TODO,\n            add: (payload) => storageAdd(path, payload),\n            //doc: not here, right?,\n            //docs: not here, rgiht?, // TODO: docs.filter\n            get: () => storageRead(path),\n            set: (payload) => storageSet(path, payload),\n            update: (payload) => storageUpdate(path, payload),\n            delete: () => storageDel(path),\n        };\n    }\n\n    function dispatch(...path) {\n        /* \n         * Get the currently initialized storageRef\n         *\n         * @return  storageRef/CacheRef\n         *\n         */\n\n        switch (storageType) {\n            case \"firebase\":\n                return cacheRef(path);\n            default:\n                return storageRef(path);\n        }\n    }\n\n    return [dispatch, flush];\n})();\n\nexport default {__init__:initStorage, cRef, flush, useDb};\n\n"],"sourceRoot":""}